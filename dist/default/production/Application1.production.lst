

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Jan 19 16:33:37 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 23/03/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4620 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     
    59                           	psect	idataCOMRAM
    60   0014CC                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _port_registers
    64   0014CC  80                 	db	128
    65   0014CD  0F                 	db	15
    66   0014CE  81                 	db	129
    67   0014CF  0F                 	db	15
    68   0014D0  82                 	db	130
    69   0014D1  0F                 	db	15
    70   0014D2  83                 	db	131
    71   0014D3  0F                 	db	15
    72   0014D4  84                 	db	132
    73   0014D5  0F                 	db	15
    74                           
    75                           ;initializer for _lat_registers
    76   0014D6  89                 	db	137
    77   0014D7  0F                 	db	15
    78   0014D8  8A                 	db	138
    79   0014D9  0F                 	db	15
    80   0014DA  8B                 	db	139
    81   0014DB  0F                 	db	15
    82   0014DC  8C                 	db	140
    83   0014DD  0F                 	db	15
    84   0014DE  8D                 	db	141
    85   0014DF  0F                 	db	15
    86                           
    87                           ;initializer for _tris_registers
    88   0014E0  92                 	db	146
    89   0014E1  0F                 	db	15
    90   0014E2  93                 	db	147
    91   0014E3  0F                 	db	15
    92   0014E4  94                 	db	148
    93   0014E5  0F                 	db	15
    94   0014E6  95                 	db	149
    95   0014E7  0F                 	db	15
    96   0014E8  96                 	db	150
    97   0014E9  0F                 	db	15
    98                           
    99                           ;initializer for _dc_motor2
   100   0014EA  11                 	db	17
   101   0014EB  19                 	db	25
   102                           
   103                           ;initializer for _dc_motor1
   104   0014EC  01                 	db	1
   105   0014ED  09                 	db	9
   106   000000                     _PORTE	set	3972
   107   000000                     _PORTD	set	3971
   108   000000                     _PORTC	set	3970
   109   000000                     _PORTB	set	3969
   110   000000                     _PORTA	set	3968
   111   000000                     _LATA	set	3977
   112   000000                     _TRISA	set	3986
   113   000000                     _TRISE	set	3990
   114   000000                     _TRISD	set	3989
   115   000000                     _TRISC	set	3988
   116   000000                     _TRISB	set	3987
   117   000000                     _LATE	set	3981
   118   000000                     _LATD	set	3980
   119   000000                     _LATC	set	3979
   120   000000                     _LATB	set	3978
   121                           
   122                           ; #config settings
   123                           
   124                           	psect	cinit
   125   0013D0                     __pcinit:
   126                           	callstack 0
   127   0013D0                     start_initialization:
   128                           	callstack 0
   129   0013D0                     __initialization:
   130                           	callstack 0
   131                           
   132                           ; Initialize objects allocated to COMRAM (34 bytes)
   133                           ; load TBLPTR registers with __pidataCOMRAM
   134   0013D0  0ECC               	movlw	low __pidataCOMRAM
   135   0013D2  6EF6               	movwf	tblptrl,c
   136   0013D4  0E14               	movlw	high __pidataCOMRAM
   137   0013D6  6EF7               	movwf	tblptrh,c
   138   0013D8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   139   0013DA  6EF8               	movwf	tblptru,c
   140   0013DC  EE00  F001         	lfsr	0,__pdataCOMRAM
   141   0013E0  EE10 F022          	lfsr	1,34
   142   0013E4                     copy_data0:
   143   0013E4  0009               	tblrd		*+
   144   0013E6  CFF5 FFEE          	movff	tablat,postinc0
   145   0013EA  50E5               	movf	postdec1,w,c
   146   0013EC  50E1               	movf	fsr1l,w,c
   147   0013EE  E1FA               	bnz	copy_data0
   148                           
   149                           ; Clear objects allocated to COMRAM (8 bytes)
   150   0013F0  EE00  F032         	lfsr	0,__pbssCOMRAM
   151   0013F4  0E08               	movlw	8
   152   0013F6                     clear_0:
   153   0013F6  6AEE               	clrf	postinc0,c
   154   0013F8  06E8               	decf	wreg,f,c
   155   0013FA  E1FD               	bnz	clear_0
   156   0013FC                     end_of_initialization:
   157                           	callstack 0
   158   0013FC                     __end_of__initialization:
   159                           	callstack 0
   160   0013FC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   161   0013FE  6EF8               	movwf	tblptru,c
   162   001400  0100               	movlb	0
   163   001402  EF46  F009         	goto	_main	;jump to C main() function
   164                           
   165                           	psect	bssCOMRAM
   166   000032                     __pbssCOMRAM:
   167                           	callstack 0
   168   000032                     _ret:
   169                           	callstack 0
   170   000032                     	ds	1
   171   000033                     relay_turn_off@F2900:
   172                           	callstack 0
   173   000033                     	ds	1
   174   000034                     relay_turn_on@F2895:
   175                           	callstack 0
   176   000034                     	ds	1
   177   000035                     relay_initialize@F2890:
   178                           	callstack 0
   179   000035                     	ds	1
   180   000036                     led_turn_toggle@F2907:
   181                           	callstack 0
   182   000036                     	ds	1
   183   000037                     led_turn_off@F2902:
   184                           	callstack 0
   185   000037                     	ds	1
   186   000038                     led_turn_on@F2897:
   187                           	callstack 0
   188   000038                     	ds	1
   189   000039                     led_initialize@F2892:
   190                           	callstack 0
   191   000039                     	ds	1
   192                           
   193                           	psect	dataCOMRAM
   194   000001                     __pdataCOMRAM:
   195                           	callstack 0
   196   000001                     _port_registers:
   197                           	callstack 0
   198   000001                     	ds	10
   199   00000B                     _lat_registers:
   200                           	callstack 0
   201   00000B                     	ds	10
   202   000015                     _tris_registers:
   203                           	callstack 0
   204   000015                     	ds	10
   205   00001F                     _dc_motor2:
   206                           	callstack 0
   207   00001F                     	ds	2
   208   000021                     _dc_motor1:
   209                           	callstack 0
   210   000021                     	ds	2
   211                           
   212                           	psect	cstackCOMRAM
   213   000023                     __pcstackCOMRAM:
   214                           	callstack 0
   215   000023                     gpio_pin_direction_initialize@_pin_config:
   216                           	callstack 0
   217   000023                     gpio_pin_write_logic@_pin_config:
   218                           	callstack 0
   219                           
   220                           ; 1 bytes @ 0x0
   221   000023                     	ds	1
   222   000024                     ??_gpio_pin_direction_initialize:
   223   000024                     gpio_pin_write_logic@logic:
   224                           	callstack 0
   225                           
   226                           ; 1 bytes @ 0x1
   227   000024                     	ds	1
   228   000025                     ??_gpio_pin_write_logic:
   229                           
   230                           ; 1 bytes @ 0x2
   231   000025                     	ds	4
   232   000029                     gpio_pin_direction_initialize@ret:
   233                           	callstack 0
   234                           
   235                           ; 1 bytes @ 0x6
   236   000029                     	ds	1
   237   00002A                     gpio_pin_write_logic@ret:
   238                           	callstack 0
   239                           
   240                           ; 1 bytes @ 0x7
   241   00002A                     	ds	1
   242   00002B                     gpio_pin_initialize@_pin_config:
   243                           	callstack 0
   244   00002B                     dc_motor_move_right@_dc_motor:
   245                           	callstack 0
   246   00002B                     dc_motor_move_left@_dc_motor:
   247                           	callstack 0
   248   00002B                     dc_motor_stop@_dc_motor:
   249                           	callstack 0
   250                           
   251                           ; 1 bytes @ 0x8
   252   00002B                     	ds	1
   253   00002C                     ??_gpio_pin_initialize:
   254   00002C                     dc_motor_move_right@ret:
   255                           	callstack 0
   256   00002C                     dc_motor_move_left@ret:
   257                           	callstack 0
   258   00002C                     dc_motor_stop@ret:
   259                           	callstack 0
   260                           
   261                           ; 1 bytes @ 0x9
   262   00002C                     	ds	1
   263   00002D                     gpio_pin_initialize@ret:
   264                           	callstack 0
   265                           
   266                           ; 1 bytes @ 0xA
   267   00002D                     	ds	1
   268   00002E                     dc_motor_initialize@_dc_motor:
   269                           	callstack 0
   270                           
   271                           ; 1 bytes @ 0xB
   272   00002E                     	ds	1
   273   00002F                     dc_motor_initialize@ret:
   274                           	callstack 0
   275                           
   276                           ; 1 bytes @ 0xC
   277   00002F                     	ds	1
   278   000030                     ??_main:
   279                           
   280                           ; 1 bytes @ 0xD
   281   000030                     	ds	2
   282                           
   283 ;;
   284 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   285 ;;
   286 ;; *************** function _main *****************
   287 ;; Defined at:
   288 ;;		line 41 in file "Application1.c"
   289 ;; Parameters:    Size  Location     Type
   290 ;;		None
   291 ;; Auto vars:     Size  Location     Type
   292 ;;		None
   293 ;; Return value:  Size  Location     Type
   294 ;;                  2  207[None  ] int 
   295 ;; Registers used:
   296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   297 ;; Tracked objects:
   298 ;;		On entry : 0/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   304 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   305 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   306 ;;Total ram usage:        2 bytes
   307 ;; Hardware stack levels required when called: 4
   308 ;; This function calls:
   309 ;;		_application_initialize
   310 ;;		_dc_motor_move_left
   311 ;;		_dc_motor_move_right
   312 ;;		_dc_motor_stop
   313 ;; This function is called by:
   314 ;;		Startup code after reset
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318                           	psect	text0
   319   00128C                     __ptext0:
   320                           	callstack 0
   321   00128C                     _main:
   322                           	callstack 27
   323   00128C                     
   324                           ;Application1.c: 43:     application_initialize();
   325   00128C  EC77  F00A         	call	_application_initialize	;wreg free
   326   001290                     l208:
   327                           
   328                           ;Application1.c: 46:     {;Application1.c: 47:         dc_motor_move_right(&dc_motor1);
   329   001290  0E21               	movlw	low _dc_motor1
   330   001292  6E2B               	movwf	dc_motor_move_right@_dc_motor^0,c
   331   001294  EC1C  F00A         	call	_dc_motor_move_right	;wreg free
   332                           
   333                           ;Application1.c: 48:         dc_motor_move_right(&dc_motor2);
   334   001298  0E1F               	movlw	low _dc_motor2
   335   00129A  6E2B               	movwf	dc_motor_move_right@_dc_motor^0,c
   336   00129C  EC1C  F00A         	call	_dc_motor_move_right	;wreg free
   337   0012A0                     
   338                           ;Application1.c: 49:         _delay((unsigned long)((1000)*(8000000.0/4000.0)));
   339   0012A0  0E0B               	movlw	11
   340   0012A2  6E31               	movwf	(??_main+1)^0,c
   341   0012A4  0E26               	movlw	38
   342   0012A6  6E30               	movwf	??_main^0,c
   343   0012A8  0E5E               	movlw	94
   344   0012AA                     u947:
   345   0012AA  2EE8               	decfsz	wreg,f,c
   346   0012AC  D7FE               	bra	u947
   347   0012AE  2E30               	decfsz	??_main^0,f,c
   348   0012B0  D7FC               	bra	u947
   349   0012B2  2E31               	decfsz	(??_main+1)^0,f,c
   350   0012B4  D7FA               	bra	u947
   351   0012B6                     
   352                           ;Application1.c: 50:         dc_motor_move_left(&dc_motor1);
   353   0012B6  0E21               	movlw	low _dc_motor1
   354   0012B8  6E2B               	movwf	dc_motor_move_left@_dc_motor^0,c
   355   0012BA  EC35  F00A         	call	_dc_motor_move_left	;wreg free
   356   0012BE                     
   357                           ;Application1.c: 51:         dc_motor_move_left(&dc_motor2);
   358   0012BE  0E1F               	movlw	low _dc_motor2
   359   0012C0  6E2B               	movwf	dc_motor_move_left@_dc_motor^0,c
   360   0012C2  EC35  F00A         	call	_dc_motor_move_left	;wreg free
   361   0012C6                     
   362                           ;Application1.c: 52:         _delay((unsigned long)((1000)*(8000000.0/4000.0)));
   363   0012C6  0E0B               	movlw	11
   364   0012C8  6E31               	movwf	(??_main+1)^0,c
   365   0012CA  0E26               	movlw	38
   366   0012CC  6E30               	movwf	??_main^0,c
   367   0012CE  0E5E               	movlw	94
   368   0012D0                     u957:
   369   0012D0  2EE8               	decfsz	wreg,f,c
   370   0012D2  D7FE               	bra	u957
   371   0012D4  2E30               	decfsz	??_main^0,f,c
   372   0012D6  D7FC               	bra	u957
   373   0012D8  2E31               	decfsz	(??_main+1)^0,f,c
   374   0012DA  D7FA               	bra	u957
   375                           
   376                           ;Application1.c: 53:         dc_motor_move_right(&dc_motor1);
   377   0012DC  0E21               	movlw	low _dc_motor1
   378   0012DE  6E2B               	movwf	dc_motor_move_right@_dc_motor^0,c
   379   0012E0  EC1C  F00A         	call	_dc_motor_move_right	;wreg free
   380                           
   381                           ;Application1.c: 54:         dc_motor_move_left(&dc_motor2);
   382   0012E4  0E1F               	movlw	low _dc_motor2
   383   0012E6  6E2B               	movwf	dc_motor_move_left@_dc_motor^0,c
   384   0012E8  EC35  F00A         	call	_dc_motor_move_left	;wreg free
   385   0012EC                     
   386                           ;Application1.c: 55:         _delay((unsigned long)((1000)*(8000000.0/4000.0)));
   387   0012EC  0E0B               	movlw	11
   388   0012EE  6E31               	movwf	(??_main+1)^0,c
   389   0012F0  0E26               	movlw	38
   390   0012F2  6E30               	movwf	??_main^0,c
   391   0012F4  0E5E               	movlw	94
   392   0012F6                     u967:
   393   0012F6  2EE8               	decfsz	wreg,f,c
   394   0012F8  D7FE               	bra	u967
   395   0012FA  2E30               	decfsz	??_main^0,f,c
   396   0012FC  D7FC               	bra	u967
   397   0012FE  2E31               	decfsz	(??_main+1)^0,f,c
   398   001300  D7FA               	bra	u967
   399   001302                     
   400                           ;Application1.c: 56:         dc_motor_move_left(&dc_motor1);
   401   001302  0E21               	movlw	low _dc_motor1
   402   001304  6E2B               	movwf	dc_motor_move_left@_dc_motor^0,c
   403   001306  EC35  F00A         	call	_dc_motor_move_left	;wreg free
   404   00130A                     
   405                           ;Application1.c: 57:         dc_motor_move_right(&dc_motor2);
   406   00130A  0E1F               	movlw	low _dc_motor2
   407   00130C  6E2B               	movwf	dc_motor_move_right@_dc_motor^0,c
   408   00130E  EC1C  F00A         	call	_dc_motor_move_right	;wreg free
   409   001312                     
   410                           ;Application1.c: 58:         _delay((unsigned long)((1000)*(8000000.0/4000.0)));
   411   001312  0E0B               	movlw	11
   412   001314  6E31               	movwf	(??_main+1)^0,c
   413   001316  0E26               	movlw	38
   414   001318  6E30               	movwf	??_main^0,c
   415   00131A  0E5E               	movlw	94
   416   00131C                     u977:
   417   00131C  2EE8               	decfsz	wreg,f,c
   418   00131E  D7FE               	bra	u977
   419   001320  2E30               	decfsz	??_main^0,f,c
   420   001322  D7FC               	bra	u977
   421   001324  2E31               	decfsz	(??_main+1)^0,f,c
   422   001326  D7FA               	bra	u977
   423                           
   424                           ;Application1.c: 59:         dc_motor_stop(&dc_motor1);
   425   001328  0E21               	movlw	low _dc_motor1
   426   00132A  6E2B               	movwf	dc_motor_stop@_dc_motor^0,c
   427   00132C  EC03  F00A         	call	_dc_motor_stop	;wreg free
   428                           
   429                           ;Application1.c: 60:         dc_motor_stop(&dc_motor2);
   430   001330  0E1F               	movlw	low _dc_motor2
   431   001332  6E2B               	movwf	dc_motor_stop@_dc_motor^0,c
   432   001334  EC03  F00A         	call	_dc_motor_stop	;wreg free
   433   001338                     
   434                           ;Application1.c: 61:         _delay((unsigned long)((1000)*(8000000.0/4000.0)));
   435   001338  0E0B               	movlw	11
   436   00133A  6E31               	movwf	(??_main+1)^0,c
   437   00133C  0E26               	movlw	38
   438   00133E  6E30               	movwf	??_main^0,c
   439   001340  0E5E               	movlw	94
   440   001342                     u987:
   441   001342  2EE8               	decfsz	wreg,f,c
   442   001344  D7FE               	bra	u987
   443   001346  2E30               	decfsz	??_main^0,f,c
   444   001348  D7FC               	bra	u987
   445   00134A  2E31               	decfsz	(??_main+1)^0,f,c
   446   00134C  D7FA               	bra	u987
   447   00134E  EF48  F009         	goto	l208
   448   001352  EF00  F000         	goto	start
   449   001356                     __end_of_main:
   450                           	callstack 0
   451                           
   452 ;; *************** function _dc_motor_stop *****************
   453 ;; Defined at:
   454 ;;		line 90 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   455 ;; Parameters:    Size  Location     Type
   456 ;;  _dc_motor       1    8[COMRAM] PTR const struct .
   457 ;;		 -> dc_motor2(2), dc_motor1(2), 
   458 ;; Auto vars:     Size  Location     Type
   459 ;;  ret             1    9[COMRAM] unsigned char 
   460 ;; Return value:  Size  Location     Type
   461 ;;                  1    wreg      unsigned char 
   462 ;; Registers used:
   463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   464 ;; Tracked objects:
   465 ;;		On entry : 0/0
   466 ;;		On exit  : 0/0
   467 ;;		Unchanged: 0/0
   468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   469 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   470 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   472 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   473 ;;Total ram usage:        2 bytes
   474 ;; Hardware stack levels used: 1
   475 ;; Hardware stack levels required when called: 1
   476 ;; This function calls:
   477 ;;		_gpio_pin_write_logic
   478 ;; This function is called by:
   479 ;;		_main
   480 ;; This function uses a non-reentrant model
   481 ;;
   482                           
   483                           	psect	text1
   484   001406                     __ptext1:
   485                           	callstack 0
   486   001406                     _dc_motor_stop:
   487                           	callstack 29
   488   001406                     
   489                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 93:     if(_dc_motor != ((void*)0))
   490   001406  502B               	movf	dc_motor_stop@_dc_motor^0,w,c
   491   001408  B4D8               	btfsc	status,2,c
   492   00140A  EF09  F00A         	goto	u801
   493   00140E  EF0B  F00A         	goto	u800
   494   001412                     u801:
   495   001412  EF1B  F00A         	goto	l1408
   496   001416                     u800:
   497   001416                     
   498                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 94:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 95:    
      +                               ret = gpio_pin_write_logic(&_dc_motor->dc_motor[0],GPIO_LOGIC_LOW);
   499   001416  C02B  F023         	movff	dc_motor_stop@_dc_motor,gpio_pin_write_logic@_pin_config
   500   00141A  0E00               	movlw	0
   501   00141C  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   502   00141E  ECA4  F008         	call	_gpio_pin_write_logic	;wreg free
   503   001422  6E2C               	movwf	dc_motor_stop@ret^0,c
   504                           
   505                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 96:         ret = gpio_pin_write_logic(&_dc_motor->d
      +                          c_motor[1],GPIO_LOGIC_LOW);
   506   001424  282B               	incf	dc_motor_stop@_dc_motor^0,w,c
   507   001426  6E23               	movwf	gpio_pin_write_logic@_pin_config^0,c
   508   001428  0E00               	movlw	0
   509   00142A  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   510   00142C  ECA4  F008         	call	_gpio_pin_write_logic	;wreg free
   511   001430  6E2C               	movwf	dc_motor_stop@ret^0,c
   512                           
   513                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 97:     }
   514   001432  EF1B  F00A         	goto	l238
   515   001436                     l1408:
   516   001436                     l238:
   517   001436  0012               	return		;funcret
   518   001438                     __end_of_dc_motor_stop:
   519                           	callstack 0
   520                           
   521 ;; *************** function _dc_motor_move_right *****************
   522 ;; Defined at:
   523 ;;		line 48 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   524 ;; Parameters:    Size  Location     Type
   525 ;;  _dc_motor       1    8[COMRAM] PTR const struct .
   526 ;;		 -> dc_motor2(2), dc_motor1(2), 
   527 ;; Auto vars:     Size  Location     Type
   528 ;;  ret             1    9[COMRAM] unsigned char 
   529 ;; Return value:  Size  Location     Type
   530 ;;                  1    wreg      unsigned char 
   531 ;; Registers used:
   532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   538 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   539 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   541 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   542 ;;Total ram usage:        2 bytes
   543 ;; Hardware stack levels used: 1
   544 ;; Hardware stack levels required when called: 1
   545 ;; This function calls:
   546 ;;		_gpio_pin_write_logic
   547 ;; This function is called by:
   548 ;;		_main
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           	psect	text2
   553   001438                     __ptext2:
   554                           	callstack 0
   555   001438                     _dc_motor_move_right:
   556                           	callstack 29
   557   001438                     
   558                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 51:     if(_dc_motor != ((void*)0))
   559   001438  502B               	movf	dc_motor_move_right@_dc_motor^0,w,c
   560   00143A  B4D8               	btfsc	status,2,c
   561   00143C  EF22  F00A         	goto	u781
   562   001440  EF24  F00A         	goto	u780
   563   001444                     u781:
   564   001444  EF34  F00A         	goto	l1392
   565   001448                     u780:
   566   001448                     
   567                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 52:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 54:    
      +                               ret = gpio_pin_write_logic(&_dc_motor->dc_motor[0],GPIO_LOGIC_HIGH);
   568   001448  C02B  F023         	movff	dc_motor_move_right@_dc_motor,gpio_pin_write_logic@_pin_config
   569   00144C  0E01               	movlw	1
   570   00144E  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   571   001450  ECA4  F008         	call	_gpio_pin_write_logic	;wreg free
   572   001454  6E2C               	movwf	dc_motor_move_right@ret^0,c
   573                           
   574                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 55:         ret = gpio_pin_write_logic(&_dc_motor->d
      +                          c_motor[1],GPIO_LOGIC_LOW);
   575   001456  282B               	incf	dc_motor_move_right@_dc_motor^0,w,c
   576   001458  6E23               	movwf	gpio_pin_write_logic@_pin_config^0,c
   577   00145A  0E00               	movlw	0
   578   00145C  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   579   00145E  ECA4  F008         	call	_gpio_pin_write_logic	;wreg free
   580   001462  6E2C               	movwf	dc_motor_move_right@ret^0,c
   581                           
   582                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 56:     }
   583   001464  EF34  F00A         	goto	l228
   584   001468                     l1392:
   585   001468                     l228:
   586   001468  0012               	return		;funcret
   587   00146A                     __end_of_dc_motor_move_right:
   588                           	callstack 0
   589                           
   590 ;; *************** function _dc_motor_move_left *****************
   591 ;; Defined at:
   592 ;;		line 69 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;  _dc_motor       1    8[COMRAM] PTR const struct .
   595 ;;		 -> dc_motor2(2), dc_motor1(2), 
   596 ;; Auto vars:     Size  Location     Type
   597 ;;  ret             1    9[COMRAM] unsigned char 
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      unsigned char 
   600 ;; Registers used:
   601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   607 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   608 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   610 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   611 ;;Total ram usage:        2 bytes
   612 ;; Hardware stack levels used: 1
   613 ;; Hardware stack levels required when called: 1
   614 ;; This function calls:
   615 ;;		_gpio_pin_write_logic
   616 ;; This function is called by:
   617 ;;		_main
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           	psect	text3
   622   00146A                     __ptext3:
   623                           	callstack 0
   624   00146A                     _dc_motor_move_left:
   625                           	callstack 29
   626   00146A                     
   627                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 72:     if(_dc_motor != ((void*)0))
   628   00146A  502B               	movf	dc_motor_move_left@_dc_motor^0,w,c
   629   00146C  B4D8               	btfsc	status,2,c
   630   00146E  EF3B  F00A         	goto	u791
   631   001472  EF3D  F00A         	goto	u790
   632   001476                     u791:
   633   001476  EF4D  F00A         	goto	l1400
   634   00147A                     u790:
   635   00147A                     
   636                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 73:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 75:    
      +                               ret = gpio_pin_write_logic(&_dc_motor->dc_motor[0],GPIO_LOGIC_LOW);
   637   00147A  C02B  F023         	movff	dc_motor_move_left@_dc_motor,gpio_pin_write_logic@_pin_config
   638   00147E  0E00               	movlw	0
   639   001480  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   640   001482  ECA4  F008         	call	_gpio_pin_write_logic	;wreg free
   641   001486  6E2C               	movwf	dc_motor_move_left@ret^0,c
   642                           
   643                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 76:         ret = gpio_pin_write_logic(&_dc_motor->d
      +                          c_motor[1],GPIO_LOGIC_HIGH);
   644   001488  282B               	incf	dc_motor_move_left@_dc_motor^0,w,c
   645   00148A  6E23               	movwf	gpio_pin_write_logic@_pin_config^0,c
   646   00148C  0E01               	movlw	1
   647   00148E  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   648   001490  ECA4  F008         	call	_gpio_pin_write_logic	;wreg free
   649   001494  6E2C               	movwf	dc_motor_move_left@ret^0,c
   650                           
   651                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 77:     }
   652   001496  EF4D  F00A         	goto	l233
   653   00149A                     l1400:
   654   00149A                     l233:
   655   00149A  0012               	return		;funcret
   656   00149C                     __end_of_dc_motor_move_left:
   657                           	callstack 0
   658                           
   659 ;; *************** function _application_initialize *****************
   660 ;; Defined at:
   661 ;;		line 67 in file "Application1.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;		None
   664 ;; Auto vars:     Size  Location     Type
   665 ;;  ret_init        1    0        unsigned char 
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      void 
   668 ;; Registers used:
   669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   679 ;;Total ram usage:        0 bytes
   680 ;; Hardware stack levels used: 1
   681 ;; Hardware stack levels required when called: 3
   682 ;; This function calls:
   683 ;;		_dc_motor_initialize
   684 ;; This function is called by:
   685 ;;		_main
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           	psect	text4
   690   0014EE                     __ptext4:
   691                           	callstack 0
   692   0014EE                     _application_initialize:
   693                           	callstack 27
   694   0014EE  0E21               	movlw	low _dc_motor1
   695   0014F0  6E2E               	movwf	dc_motor_initialize@_dc_motor^0,c
   696   0014F2  EC4E  F00A         	call	_dc_motor_initialize	;wreg free
   697   0014F6  0E1F               	movlw	low _dc_motor2
   698   0014F8  6E2E               	movwf	dc_motor_initialize@_dc_motor^0,c
   699   0014FA  EC4E  F00A         	call	_dc_motor_initialize	;wreg free
   700   0014FE  0012               	return		;funcret
   701   001500                     __end_of_application_initialize:
   702                           	callstack 0
   703                           
   704 ;; *************** function _dc_motor_initialize *****************
   705 ;; Defined at:
   706 ;;		line 27 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;  _dc_motor       1   11[COMRAM] PTR const struct .
   709 ;;		 -> dc_motor2(2), dc_motor1(2), 
   710 ;; Auto vars:     Size  Location     Type
   711 ;;  ret             1   12[COMRAM] unsigned char 
   712 ;; Return value:  Size  Location     Type
   713 ;;                  1    wreg      unsigned char 
   714 ;; Registers used:
   715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   721 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   724 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   725 ;;Total ram usage:        2 bytes
   726 ;; Hardware stack levels used: 1
   727 ;; Hardware stack levels required when called: 2
   728 ;; This function calls:
   729 ;;		_gpio_pin_initialize
   730 ;; This function is called by:
   731 ;;		_application_initialize
   732 ;; This function uses a non-reentrant model
   733 ;;
   734                           
   735                           	psect	text5
   736   00149C                     __ptext5:
   737                           	callstack 0
   738   00149C                     _dc_motor_initialize:
   739                           	callstack 27
   740   00149C                     
   741                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 30:     if(_dc_motor != ((void*)0))
   742   00149C  502E               	movf	dc_motor_initialize@_dc_motor^0,w,c
   743   00149E  B4D8               	btfsc	status,2,c
   744   0014A0  EF54  F00A         	goto	u771
   745   0014A4  EF56  F00A         	goto	u770
   746   0014A8                     u771:
   747   0014A8  EF62  F00A         	goto	l1378
   748   0014AC                     u770:
   749   0014AC                     
   750                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 31:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 33:    
      +                               ret = gpio_pin_initialize(&_dc_motor->dc_motor[0]);
   751   0014AC  C02E  F02B         	movff	dc_motor_initialize@_dc_motor,gpio_pin_initialize@_pin_config
   752   0014B0  ECAB  F009         	call	_gpio_pin_initialize	;wreg free
   753   0014B4  6E2F               	movwf	dc_motor_initialize@ret^0,c
   754                           
   755                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 34:         ret = gpio_pin_initialize(&_dc_motor->dc
      +                          _motor[1]);
   756   0014B6  282E               	incf	dc_motor_initialize@_dc_motor^0,w,c
   757   0014B8  6E2B               	movwf	gpio_pin_initialize@_pin_config^0,c
   758   0014BA  ECAB  F009         	call	_gpio_pin_initialize	;wreg free
   759   0014BE  6E2F               	movwf	dc_motor_initialize@ret^0,c
   760                           
   761                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 35:     }
   762   0014C0  EF64  F00A         	goto	l222
   763   0014C4                     l1378:
   764   0014C4  0E00               	movlw	0
   765   0014C6  6E2F               	movwf	dc_motor_initialize@ret^0,c
   766   0014C8                     l222:
   767                           
   768                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 38:     return ret;
   769   0014C8  502F               	movf	dc_motor_initialize@ret^0,w,c
   770   0014CA  0012               	return		;funcret
   771   0014CC                     __end_of_dc_motor_initialize:
   772                           	callstack 0
   773                           
   774 ;; *************** function _gpio_pin_initialize *****************
   775 ;; Defined at:
   776 ;;		line 160 in file "MCAL_Layer/GPIO/hal_gpio.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;  _pin_config     1    8[COMRAM] PTR const struct .
   779 ;;		 -> dc_motor2$dc_motor(2), dc_motor2(2), dc_motor1$dc_motor(2), dc_motor1(2), 
   780 ;;		 -> relay_initialize@pin(1), led_initialize@pin(1), 
   781 ;; Auto vars:     Size  Location     Type
   782 ;;  ret             1   10[COMRAM] unsigned char 
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      unsigned char 
   785 ;; Registers used:
   786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   792 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   793 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   794 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   795 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   796 ;;Total ram usage:        3 bytes
   797 ;; Hardware stack levels used: 1
   798 ;; Hardware stack levels required when called: 1
   799 ;; This function calls:
   800 ;;		_gpio_pin_direction_initialize
   801 ;;		_gpio_pin_write_logic
   802 ;; This function is called by:
   803 ;;		_dc_motor_initialize
   804 ;;		_led_initialize
   805 ;;		_relay_initialize
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           	psect	text6
   810   001356                     __ptext6:
   811                           	callstack 0
   812   001356                     _gpio_pin_initialize:
   813                           	callstack 27
   814   001356                     
   815                           ;MCAL_Layer/GPIO/hal_gpio.c: 163:     if((_pin_config != ((void*)0)) && (_pin_config->po
      +                          rt <= 5 -1) && (_pin_config->pin <= 8 -1))
   816   001356  502B               	movf	gpio_pin_initialize@_pin_config^0,w,c
   817   001358  B4D8               	btfsc	status,2,c
   818   00135A  EFB1  F009         	goto	u741
   819   00135E  EFB3  F009         	goto	u740
   820   001362                     u741:
   821   001362  EFE4  F009         	goto	l1370
   822   001366                     u740:
   823   001366  502B               	movf	gpio_pin_initialize@_pin_config^0,w,c
   824   001368  6ED9               	movwf	fsr2l,c
   825   00136A  6ADA               	clrf	fsr2h,c
   826   00136C  50DF               	movf	223,w,c
   827   00136E  0B07               	andlw	7
   828   001370  6E2C               	movwf	??_gpio_pin_initialize^0,c
   829   001372  0E05               	movlw	5
   830   001374  602C               	cpfslt	??_gpio_pin_initialize^0,c
   831   001376  EFBF  F009         	goto	u751
   832   00137A  EFC1  F009         	goto	u750
   833   00137E                     u751:
   834   00137E  EFE4  F009         	goto	l1370
   835   001382                     u750:
   836   001382  502B               	movf	gpio_pin_initialize@_pin_config^0,w,c
   837   001384  6ED9               	movwf	fsr2l,c
   838   001386  6ADA               	clrf	fsr2h,c
   839   001388  30DF               	rrcf	223,w,c
   840   00138A  32E8               	rrcf	wreg,f,c
   841   00138C  32E8               	rrcf	wreg,f,c
   842   00138E  0B07               	andlw	7
   843   001390  6E2C               	movwf	??_gpio_pin_initialize^0,c
   844   001392  0E08               	movlw	8
   845   001394  602C               	cpfslt	??_gpio_pin_initialize^0,c
   846   001396  EFCF  F009         	goto	u761
   847   00139A  EFD1  F009         	goto	u760
   848   00139E                     u761:
   849   00139E  EFE4  F009         	goto	l1370
   850   0013A2                     u760:
   851   0013A2                     
   852                           ;MCAL_Layer/GPIO/hal_gpio.c: 164:     {;MCAL_Layer/GPIO/hal_gpio.c: 165:         ret = g
      +                          pio_pin_direction_initialize(_pin_config);
   853   0013A2  C02B  F023         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_initialize@_pin_config
   854   0013A6  EC01  F008         	call	_gpio_pin_direction_initialize	;wreg free
   855   0013AA  6E2D               	movwf	gpio_pin_initialize@ret^0,c
   856                           
   857                           ;MCAL_Layer/GPIO/hal_gpio.c: 166:         ret = gpio_pin_write_logic(_pin_config,_pin_co
      +                          nfig->logic);
   858   0013AC  C02B  F023         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
   859   0013B0  502B               	movf	gpio_pin_initialize@_pin_config^0,w,c
   860   0013B2  6ED9               	movwf	fsr2l,c
   861   0013B4  6ADA               	clrf	fsr2h,c
   862   0013B6  0E00               	movlw	0
   863   0013B8  BEDF               	btfsc	indf2,7,c
   864   0013BA  0E01               	movlw	1
   865   0013BC  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   866   0013BE  ECA4  F008         	call	_gpio_pin_write_logic	;wreg free
   867   0013C2  6E2D               	movwf	gpio_pin_initialize@ret^0,c
   868                           
   869                           ;MCAL_Layer/GPIO/hal_gpio.c: 167:     }
   870   0013C4  EFE6  F009         	goto	l159
   871   0013C8                     l1370:
   872   0013C8  0E00               	movlw	0
   873   0013CA  6E2D               	movwf	gpio_pin_initialize@ret^0,c
   874   0013CC                     l159:
   875                           
   876                           ;MCAL_Layer/GPIO/hal_gpio.c: 169:     return ret;
   877   0013CC  502D               	movf	gpio_pin_initialize@ret^0,w,c
   878   0013CE  0012               	return		;funcret
   879   0013D0                     __end_of_gpio_pin_initialize:
   880                           	callstack 0
   881                           
   882 ;; *************** function _gpio_pin_write_logic *****************
   883 ;; Defined at:
   884 ;;		line 86 in file "MCAL_Layer/GPIO/hal_gpio.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;  _pin_config     1    0[COMRAM] PTR const struct .
   887 ;;		 -> dc_motor2$dc_motor(2), dc_motor2(2), dc_motor1$dc_motor(2), dc_motor1(2), 
   888 ;;		 -> relay_turn_off@pin(1), relay_turn_on@pin(1), relay_initialize@pin(1), led_turn_off@pin(1), 
   889 ;;		 -> led_turn_on@pin(1), led_initialize@pin(1), 
   890 ;;  logic           1    1[COMRAM] enum E2832
   891 ;; Auto vars:     Size  Location     Type
   892 ;;  ret             1    7[COMRAM] unsigned char 
   893 ;; Return value:  Size  Location     Type
   894 ;;                  1    wreg      unsigned char 
   895 ;; Registers used:
   896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   902 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   903 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   904 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   905 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   906 ;;Total ram usage:        8 bytes
   907 ;; Hardware stack levels used: 1
   908 ;; This function calls:
   909 ;;		Nothing
   910 ;; This function is called by:
   911 ;;		_gpio_pin_initialize
   912 ;;		_dc_motor_move_right
   913 ;;		_dc_motor_move_left
   914 ;;		_dc_motor_stop
   915 ;;		_led_turn_on
   916 ;;		_led_turn_off
   917 ;;		_relay_turn_on
   918 ;;		_relay_turn_off
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text7
   923   001148                     __ptext7:
   924                           	callstack 0
   925   001148                     _gpio_pin_write_logic:
   926                           	callstack 29
   927   001148                     
   928                           ;MCAL_Layer/GPIO/hal_gpio.c: 86: Std_ReturnType gpio_pin_write_logic(const pin_config_t 
      +                          *_pin_config , logic_t logic);MCAL_Layer/GPIO/hal_gpio.c: 87: {;MCAL_Layer/GPIO/hal_gpio
      +                          .c: 88:     Std_ReturnType ret = (Std_ReturnType)0x01;
   929   001148  0E01               	movlw	1
   930   00114A  6E2A               	movwf	gpio_pin_write_logic@ret^0,c
   931                           
   932                           ;MCAL_Layer/GPIO/hal_gpio.c: 89:     if((_pin_config != ((void*)0)) && (_pin_config->por
      +                          t <= 5 -1) && (_pin_config->pin <= 8 -1))
   933   00114C  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   934   00114E  B4D8               	btfsc	status,2,c
   935   001150  EFAC  F008         	goto	u681
   936   001154  EFAE  F008         	goto	u680
   937   001158                     u681:
   938   001158  EF2B  F009         	goto	l1348
   939   00115C                     u680:
   940   00115C  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   941   00115E  6ED9               	movwf	fsr2l,c
   942   001160  6ADA               	clrf	fsr2h,c
   943   001162  50DF               	movf	223,w,c
   944   001164  0B07               	andlw	7
   945   001166  6E25               	movwf	??_gpio_pin_write_logic^0,c
   946   001168  0E05               	movlw	5
   947   00116A  6025               	cpfslt	??_gpio_pin_write_logic^0,c
   948   00116C  EFBA  F008         	goto	u691
   949   001170  EFBC  F008         	goto	u690
   950   001174                     u691:
   951   001174  EF2B  F009         	goto	l1348
   952   001178                     u690:
   953   001178  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   954   00117A  6ED9               	movwf	fsr2l,c
   955   00117C  6ADA               	clrf	fsr2h,c
   956   00117E  30DF               	rrcf	223,w,c
   957   001180  32E8               	rrcf	wreg,f,c
   958   001182  32E8               	rrcf	wreg,f,c
   959   001184  0B07               	andlw	7
   960   001186  6E25               	movwf	??_gpio_pin_write_logic^0,c
   961   001188  0E08               	movlw	8
   962   00118A  6025               	cpfslt	??_gpio_pin_write_logic^0,c
   963   00118C  EFCA  F008         	goto	u701
   964   001190  EFCC  F008         	goto	u700
   965   001194                     u701:
   966   001194  EF2B  F009         	goto	l1348
   967   001198                     u700:
   968   001198                     
   969                           ;MCAL_Layer/GPIO/hal_gpio.c: 90:     {;MCAL_Layer/GPIO/hal_gpio.c: 91:         if(_pin_c
      +                          onfig->direction == GPIO_DIRECTION_OUTPUT)
   970   001198  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   971   00119A  6ED9               	movwf	fsr2l,c
   972   00119C  6ADA               	clrf	fsr2h,c
   973   00119E  BCDF               	btfsc	indf2,6,c
   974   0011A0  EFD4  F008         	goto	u711
   975   0011A4  EFD6  F008         	goto	u710
   976   0011A8                     u711:
   977   0011A8  EF2B  F009         	goto	l1348
   978   0011AC                     u710:
   979   0011AC  EF2F  F009         	goto	l1350
   980   0011B0                     l1344:
   981                           
   982                           ;MCAL_Layer/GPIO/hal_gpio.c: 96:                     (*lat_registers[_pin_config->port] 
      +                          &=~ ((uint8)0x01 << _pin_config->pin));
   983   0011B0  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   984   0011B2  6ED9               	movwf	fsr2l,c
   985   0011B4  6ADA               	clrf	fsr2h,c
   986   0011B6  30DF               	rrcf	223,w,c
   987   0011B8  32E8               	rrcf	wreg,f,c
   988   0011BA  32E8               	rrcf	wreg,f,c
   989   0011BC  0B07               	andlw	7
   990   0011BE  6E25               	movwf	??_gpio_pin_write_logic^0,c
   991   0011C0  0E01               	movlw	1
   992   0011C2  6E26               	movwf	(??_gpio_pin_write_logic+1)^0,c
   993   0011C4  2A25               	incf	??_gpio_pin_write_logic^0,f,c
   994   0011C6  EFE7  F008         	goto	u724
   995   0011CA                     u725:
   996   0011CA  90D8               	bcf	status,0,c
   997   0011CC  3626               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   998   0011CE                     u724:
   999   0011CE  2E25               	decfsz	??_gpio_pin_write_logic^0,f,c
  1000   0011D0  EFE5  F008         	goto	u725
  1001   0011D4  5026               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1002   0011D6  0AFF               	xorlw	255
  1003   0011D8  6E27               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1004   0011DA  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1005   0011DC  6ED9               	movwf	fsr2l,c
  1006   0011DE  6ADA               	clrf	fsr2h,c
  1007   0011E0  50DF               	movf	223,w,c
  1008   0011E2  0B07               	andlw	7
  1009   0011E4  0D02               	mullw	2
  1010   0011E6  50F3               	movf	243,w,c
  1011   0011E8  0F0B               	addlw	low _lat_registers
  1012   0011EA  6ED9               	movwf	fsr2l,c
  1013   0011EC  6ADA               	clrf	fsr2h,c
  1014   0011EE  CFDE F028          	movff	postinc2,??_gpio_pin_write_logic+3
  1015   0011F2  CFDD F029          	movff	postdec2,??_gpio_pin_write_logic+4
  1016   0011F6  C028  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1017   0011FA  C029  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1018   0011FE  5027               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1019   001200  16DF               	andwf	indf2,f,c
  1020                           
  1021                           ;MCAL_Layer/GPIO/hal_gpio.c: 97:                     break;
  1022   001202  EF44  F009         	goto	l144
  1023   001206                     l1346:
  1024                           
  1025                           ;MCAL_Layer/GPIO/hal_gpio.c: 99:                     (*lat_registers[_pin_config->port] 
      +                          |= ((uint8)0x01 << _pin_config->pin));
  1026   001206  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1027   001208  6ED9               	movwf	fsr2l,c
  1028   00120A  6ADA               	clrf	fsr2h,c
  1029   00120C  30DF               	rrcf	223,w,c
  1030   00120E  32E8               	rrcf	wreg,f,c
  1031   001210  32E8               	rrcf	wreg,f,c
  1032   001212  0B07               	andlw	7
  1033   001214  6E25               	movwf	??_gpio_pin_write_logic^0,c
  1034   001216  0E01               	movlw	1
  1035   001218  6E26               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1036   00121A  2A25               	incf	??_gpio_pin_write_logic^0,f,c
  1037   00121C  EF12  F009         	goto	u734
  1038   001220                     u735:
  1039   001220  90D8               	bcf	status,0,c
  1040   001222  3626               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1041   001224                     u734:
  1042   001224  2E25               	decfsz	??_gpio_pin_write_logic^0,f,c
  1043   001226  EF10  F009         	goto	u735
  1044   00122A  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1045   00122C  6ED9               	movwf	fsr2l,c
  1046   00122E  6ADA               	clrf	fsr2h,c
  1047   001230  50DF               	movf	223,w,c
  1048   001232  0B07               	andlw	7
  1049   001234  0D02               	mullw	2
  1050   001236  50F3               	movf	243,w,c
  1051   001238  0F0B               	addlw	low _lat_registers
  1052   00123A  6ED9               	movwf	fsr2l,c
  1053   00123C  6ADA               	clrf	fsr2h,c
  1054   00123E  CFDE F027          	movff	postinc2,??_gpio_pin_write_logic+2
  1055   001242  CFDD F028          	movff	postdec2,??_gpio_pin_write_logic+3
  1056   001246  C027  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1057   00124A  C028  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1058   00124E  5026               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1059   001250  12DF               	iorwf	indf2,f,c
  1060                           
  1061                           ;MCAL_Layer/GPIO/hal_gpio.c: 100:                     break;
  1062   001252  EF44  F009         	goto	l144
  1063   001256                     l1348:
  1064   001256  0E00               	movlw	0
  1065   001258  6E2A               	movwf	gpio_pin_write_logic@ret^0,c
  1066                           
  1067                           ;MCAL_Layer/GPIO/hal_gpio.c: 102:             }
  1068   00125A  EF44  F009         	goto	l144
  1069   00125E                     l1350:
  1070   00125E  5024               	movf	gpio_pin_write_logic@logic^0,w,c
  1071   001260  6E25               	movwf	??_gpio_pin_write_logic^0,c
  1072   001262  6A26               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1073                           
  1074                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1075                           ; Switch size 1, requested type "simple"
  1076                           ; Number of cases is 1, Range of values is 0 to 0
  1077                           ; switch strategies available:
  1078                           ; Name         Instructions Cycles
  1079                           ; simple_byte            4     3 (average)
  1080                           ;	Chosen strategy is simple_byte
  1081   001264  5026               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1082   001266  0A00               	xorlw	0	; case 0
  1083   001268  B4D8               	btfsc	status,2,c
  1084   00126A  EF39  F009         	goto	l1558
  1085   00126E  EF2B  F009         	goto	l1348
  1086   001272                     l1558:
  1087                           
  1088                           ; Switch size 1, requested type "simple"
  1089                           ; Number of cases is 2, Range of values is 0 to 1
  1090                           ; switch strategies available:
  1091                           ; Name         Instructions Cycles
  1092                           ; simple_byte            7     4 (average)
  1093                           ;	Chosen strategy is simple_byte
  1094   001272  5025               	movf	??_gpio_pin_write_logic^0,w,c
  1095   001274  0A00               	xorlw	0	; case 0
  1096   001276  B4D8               	btfsc	status,2,c
  1097   001278  EFD8  F008         	goto	l1344
  1098   00127C  0A01               	xorlw	1	; case 1
  1099   00127E  B4D8               	btfsc	status,2,c
  1100   001280  EF03  F009         	goto	l1346
  1101   001284  EF2B  F009         	goto	l1348
  1102   001288                     l144:
  1103                           
  1104                           ;MCAL_Layer/GPIO/hal_gpio.c: 107:     return ret;
  1105   001288  502A               	movf	gpio_pin_write_logic@ret^0,w,c
  1106   00128A  0012               	return		;funcret
  1107   00128C                     __end_of_gpio_pin_write_logic:
  1108                           	callstack 0
  1109                           
  1110 ;; *************** function _gpio_pin_direction_initialize *****************
  1111 ;; Defined at:
  1112 ;;		line 34 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1115 ;;		 -> dc_motor2$dc_motor(2), dc_motor2(2), dc_motor1$dc_motor(2), dc_motor1(2), 
  1116 ;;		 -> relay_initialize@pin(1), led_initialize@pin(1), 
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;  ret             1    6[COMRAM] unsigned char 
  1119 ;; Return value:  Size  Location     Type
  1120 ;;                  1    wreg      unsigned char 
  1121 ;; Registers used:
  1122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1128 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1129 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1130 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1131 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1132 ;;Total ram usage:        7 bytes
  1133 ;; Hardware stack levels used: 1
  1134 ;; This function calls:
  1135 ;;		Nothing
  1136 ;; This function is called by:
  1137 ;;		_gpio_pin_initialize
  1138 ;;		_button_initialize
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           	psect	text8
  1143   001002                     __ptext8:
  1144                           	callstack 0
  1145   001002                     _gpio_pin_direction_initialize:
  1146                           	callstack 27
  1147   001002                     
  1148                           ;MCAL_Layer/GPIO/hal_gpio.c: 34: Std_ReturnType gpio_pin_direction_initialize(const pin_
      +                          config_t *_pin_config);MCAL_Layer/GPIO/hal_gpio.c: 35: {;MCAL_Layer/GPIO/hal_gpio.c: 36:
      +                               Std_ReturnType ret = (Std_ReturnType)0x01;
  1149   001002  0E01               	movlw	1
  1150   001004  6E29               	movwf	gpio_pin_direction_initialize@ret^0,c
  1151                           
  1152                           ;MCAL_Layer/GPIO/hal_gpio.c: 37:     if((_pin_config != ((void*)0)) && (_pin_config->por
      +                          t <= 5 -1) && (_pin_config->pin <= 8 -1))
  1153   001006  5023               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1154   001008  B4D8               	btfsc	status,2,c
  1155   00100A  EF09  F008         	goto	u611
  1156   00100E  EF0B  F008         	goto	u610
  1157   001012                     u611:
  1158   001012  EF7E  F008         	goto	l1322
  1159   001016                     u610:
  1160   001016  5023               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1161   001018  6ED9               	movwf	fsr2l,c
  1162   00101A  6ADA               	clrf	fsr2h,c
  1163   00101C  50DF               	movf	223,w,c
  1164   00101E  0B07               	andlw	7
  1165   001020  6E24               	movwf	??_gpio_pin_direction_initialize^0,c
  1166   001022  0E05               	movlw	5
  1167   001024  6024               	cpfslt	??_gpio_pin_direction_initialize^0,c
  1168   001026  EF17  F008         	goto	u621
  1169   00102A  EF19  F008         	goto	u620
  1170   00102E                     u621:
  1171   00102E  EF7E  F008         	goto	l1322
  1172   001032                     u620:
  1173   001032  5023               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1174   001034  6ED9               	movwf	fsr2l,c
  1175   001036  6ADA               	clrf	fsr2h,c
  1176   001038  30DF               	rrcf	223,w,c
  1177   00103A  32E8               	rrcf	wreg,f,c
  1178   00103C  32E8               	rrcf	wreg,f,c
  1179   00103E  0B07               	andlw	7
  1180   001040  6E24               	movwf	??_gpio_pin_direction_initialize^0,c
  1181   001042  0E08               	movlw	8
  1182   001044  6024               	cpfslt	??_gpio_pin_direction_initialize^0,c
  1183   001046  EF27  F008         	goto	u631
  1184   00104A  EF29  F008         	goto	u630
  1185   00104E                     u631:
  1186   00104E  EF7E  F008         	goto	l1322
  1187   001052                     u630:
  1188   001052  EF82  F008         	goto	l1324
  1189   001056                     l1318:
  1190                           
  1191                           ;MCAL_Layer/GPIO/hal_gpio.c: 42:                 (*tris_registers[_pin_config->port] &=~
      +                           ((uint8)0x01 << _pin_config->pin));
  1192   001056  5023               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1193   001058  6ED9               	movwf	fsr2l,c
  1194   00105A  6ADA               	clrf	fsr2h,c
  1195   00105C  30DF               	rrcf	223,w,c
  1196   00105E  32E8               	rrcf	wreg,f,c
  1197   001060  32E8               	rrcf	wreg,f,c
  1198   001062  0B07               	andlw	7
  1199   001064  6E24               	movwf	??_gpio_pin_direction_initialize^0,c
  1200   001066  0E01               	movlw	1
  1201   001068  6E25               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1202   00106A  2A24               	incf	??_gpio_pin_direction_initialize^0,f,c
  1203   00106C  EF3A  F008         	goto	u644
  1204   001070                     u645:
  1205   001070  90D8               	bcf	status,0,c
  1206   001072  3625               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1207   001074                     u644:
  1208   001074  2E24               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1209   001076  EF38  F008         	goto	u645
  1210   00107A  5025               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1211   00107C  0AFF               	xorlw	255
  1212   00107E  6E26               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1213   001080  5023               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1214   001082  6ED9               	movwf	fsr2l,c
  1215   001084  6ADA               	clrf	fsr2h,c
  1216   001086  50DF               	movf	223,w,c
  1217   001088  0B07               	andlw	7
  1218   00108A  0D02               	mullw	2
  1219   00108C  50F3               	movf	243,w,c
  1220   00108E  0F15               	addlw	low _tris_registers
  1221   001090  6ED9               	movwf	fsr2l,c
  1222   001092  6ADA               	clrf	fsr2h,c
  1223   001094  CFDE F027          	movff	postinc2,??_gpio_pin_direction_initialize+3
  1224   001098  CFDD F028          	movff	postdec2,??_gpio_pin_direction_initialize+4
  1225   00109C  C027  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  1226   0010A0  C028  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  1227   0010A4  5026               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1228   0010A6  16DF               	andwf	indf2,f,c
  1229                           
  1230                           ;MCAL_Layer/GPIO/hal_gpio.c: 43:                 break;
  1231   0010A8  EFA2  F008         	goto	l127
  1232   0010AC                     l1320:
  1233                           
  1234                           ;MCAL_Layer/GPIO/hal_gpio.c: 45:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8)0x01 << _pin_config->pin));
  1235   0010AC  5023               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1236   0010AE  6ED9               	movwf	fsr2l,c
  1237   0010B0  6ADA               	clrf	fsr2h,c
  1238   0010B2  30DF               	rrcf	223,w,c
  1239   0010B4  32E8               	rrcf	wreg,f,c
  1240   0010B6  32E8               	rrcf	wreg,f,c
  1241   0010B8  0B07               	andlw	7
  1242   0010BA  6E24               	movwf	??_gpio_pin_direction_initialize^0,c
  1243   0010BC  0E01               	movlw	1
  1244   0010BE  6E25               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1245   0010C0  2A24               	incf	??_gpio_pin_direction_initialize^0,f,c
  1246   0010C2  EF65  F008         	goto	u654
  1247   0010C6                     u655:
  1248   0010C6  90D8               	bcf	status,0,c
  1249   0010C8  3625               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1250   0010CA                     u654:
  1251   0010CA  2E24               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1252   0010CC  EF63  F008         	goto	u655
  1253   0010D0  5023               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1254   0010D2  6ED9               	movwf	fsr2l,c
  1255   0010D4  6ADA               	clrf	fsr2h,c
  1256   0010D6  50DF               	movf	223,w,c
  1257   0010D8  0B07               	andlw	7
  1258   0010DA  0D02               	mullw	2
  1259   0010DC  50F3               	movf	243,w,c
  1260   0010DE  0F15               	addlw	low _tris_registers
  1261   0010E0  6ED9               	movwf	fsr2l,c
  1262   0010E2  6ADA               	clrf	fsr2h,c
  1263   0010E4  CFDE F026          	movff	postinc2,??_gpio_pin_direction_initialize+2
  1264   0010E8  CFDD F027          	movff	postdec2,??_gpio_pin_direction_initialize+3
  1265   0010EC  C026  FFD9         	movff	??_gpio_pin_direction_initialize+2,fsr2l
  1266   0010F0  C027  FFDA         	movff	??_gpio_pin_direction_initialize+3,fsr2h
  1267   0010F4  5025               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1268   0010F6  12DF               	iorwf	indf2,f,c
  1269                           
  1270                           ;MCAL_Layer/GPIO/hal_gpio.c: 46:                 break;
  1271   0010F8  EFA2  F008         	goto	l127
  1272   0010FC                     l1322:
  1273   0010FC  0E00               	movlw	0
  1274   0010FE  6E29               	movwf	gpio_pin_direction_initialize@ret^0,c
  1275                           
  1276                           ;MCAL_Layer/GPIO/hal_gpio.c: 48:         }
  1277   001100  EFA2  F008         	goto	l127
  1278   001104                     l1324:
  1279   001104  5023               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1280   001106  6ED9               	movwf	fsr2l,c
  1281   001108  6ADA               	clrf	fsr2h,c
  1282   00110A  BCDF               	btfsc	indf2,6,c
  1283   00110C  EF8A  F008         	goto	u661
  1284   001110  EF8D  F008         	goto	u660
  1285   001114                     u661:
  1286   001114  0E01               	movlw	1
  1287   001116  EF8E  F008         	goto	u670
  1288   00111A                     u660:
  1289   00111A  0E00               	movlw	0
  1290   00111C                     u670:
  1291   00111C  6E24               	movwf	??_gpio_pin_direction_initialize^0,c
  1292   00111E  6A25               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  1293                           
  1294                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1295                           ; Switch size 1, requested type "simple"
  1296                           ; Number of cases is 1, Range of values is 0 to 0
  1297                           ; switch strategies available:
  1298                           ; Name         Instructions Cycles
  1299                           ; simple_byte            4     3 (average)
  1300                           ;	Chosen strategy is simple_byte
  1301   001120  5025               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1302   001122  0A00               	xorlw	0	; case 0
  1303   001124  B4D8               	btfsc	status,2,c
  1304   001126  EF97  F008         	goto	l1560
  1305   00112A  EF7E  F008         	goto	l1322
  1306   00112E                     l1560:
  1307                           
  1308                           ; Switch size 1, requested type "simple"
  1309                           ; Number of cases is 2, Range of values is 0 to 1
  1310                           ; switch strategies available:
  1311                           ; Name         Instructions Cycles
  1312                           ; simple_byte            7     4 (average)
  1313                           ;	Chosen strategy is simple_byte
  1314   00112E  5024               	movf	??_gpio_pin_direction_initialize^0,w,c
  1315   001130  0A00               	xorlw	0	; case 0
  1316   001132  B4D8               	btfsc	status,2,c
  1317   001134  EF2B  F008         	goto	l1318
  1318   001138  0A01               	xorlw	1	; case 1
  1319   00113A  B4D8               	btfsc	status,2,c
  1320   00113C  EF56  F008         	goto	l1320
  1321   001140  EF7E  F008         	goto	l1322
  1322   001144                     l127:
  1323                           
  1324                           ;MCAL_Layer/GPIO/hal_gpio.c: 52:     return ret;
  1325   001144  5029               	movf	gpio_pin_direction_initialize@ret^0,w,c
  1326   001146  0012               	return		;funcret
  1327   001148                     __end_of_gpio_pin_direction_initialize:
  1328                           	callstack 0
  1329                           
  1330                           	psect	smallconst
  1331   001000                     __psmallconst:
  1332                           	callstack 0
  1333   001000  00                 	db	0
  1334   001001  00                 	db	0	; dummy byte at the end
  1335   000000                     
  1336                           	psect	rparam
  1337   000000                     
  1338                           	psect	config
  1339                           
  1340                           ; Padding undefined space
  1341   300000                     	org	3145728
  1342   300000  FF                 	db	255
  1343                           
  1344                           ;Config register CONFIG1H @ 0x300001
  1345                           ;	Oscillator Selection bits
  1346                           ;	OSC = HS, HS oscillator
  1347                           ;	Fail-Safe Clock Monitor Enable bit
  1348                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1349                           ;	Internal/External Oscillator Switchover bit
  1350                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1351   300001                     	org	3145729
  1352   300001  02                 	db	2
  1353                           
  1354                           ;Config register CONFIG2L @ 0x300002
  1355                           ;	Power-up Timer Enable bit
  1356                           ;	PWRT = OFF, PWRT disabled
  1357                           ;	Brown-out Reset Enable bits
  1358                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1359                           ;	Brown Out Reset Voltage bits
  1360                           ;	BORV = 1, 
  1361   300002                     	org	3145730
  1362   300002  09                 	db	9
  1363                           
  1364                           ;Config register CONFIG2H @ 0x300003
  1365                           ;	Watchdog Timer Enable bit
  1366                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1367                           ;	Watchdog Timer Postscale Select bits
  1368                           ;	WDTPS = 32768, 1:32768
  1369   300003                     	org	3145731
  1370   300003  1E                 	db	30
  1371                           
  1372                           ; Padding undefined space
  1373   300004                     	org	3145732
  1374   300004  FF                 	db	255
  1375                           
  1376                           ;Config register CONFIG3H @ 0x300005
  1377                           ;	CCP2 MUX bit
  1378                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1379                           ;	PORTB A/D Enable bit
  1380                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1381                           ;	Low-Power Timer1 Oscillator Enable bit
  1382                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1383                           ;	MCLR Pin Enable bit
  1384                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1385   300005                     	org	3145733
  1386   300005  81                 	db	129
  1387                           
  1388                           ;Config register CONFIG4L @ 0x300006
  1389                           ;	Stack Full/Underflow Reset Enable bit
  1390                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1391                           ;	Single-Supply ICSP Enable bit
  1392                           ;	LVP = OFF, Single-Supply ICSP disabled
  1393                           ;	Extended Instruction Set Enable bit
  1394                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1395                           ;	Background Debugger Enable bit
  1396                           ;	DEBUG = 0x1, unprogrammed default
  1397   300006                     	org	3145734
  1398   300006  81                 	db	129
  1399                           
  1400                           ; Padding undefined space
  1401   300007                     	org	3145735
  1402   300007  FF                 	db	255
  1403                           
  1404                           ;Config register CONFIG5L @ 0x300008
  1405                           ;	Code Protection bit
  1406                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1407                           ;	Code Protection bit
  1408                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1409                           ;	Code Protection bit
  1410                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1411                           ;	Code Protection bit
  1412                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1413   300008                     	org	3145736
  1414   300008  0F                 	db	15
  1415                           
  1416                           ;Config register CONFIG5H @ 0x300009
  1417                           ;	Boot Block Code Protection bit
  1418                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1419                           ;	Data EEPROM Code Protection bit
  1420                           ;	CPD = OFF, Data EEPROM not code-protected
  1421   300009                     	org	3145737
  1422   300009  C0                 	db	192
  1423                           
  1424                           ;Config register CONFIG6L @ 0x30000A
  1425                           ;	Write Protection bit
  1426                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1427                           ;	Write Protection bit
  1428                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1429                           ;	Write Protection bit
  1430                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1431                           ;	Write Protection bit
  1432                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1433   30000A                     	org	3145738
  1434   30000A  0F                 	db	15
  1435                           
  1436                           ;Config register CONFIG6H @ 0x30000B
  1437                           ;	Configuration Register Write Protection bit
  1438                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1439                           ;	Boot Block Write Protection bit
  1440                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1441                           ;	Data EEPROM Write Protection bit
  1442                           ;	WRTD = OFF, Data EEPROM not write-protected
  1443   30000B                     	org	3145739
  1444   30000B  E0                 	db	224
  1445                           
  1446                           ;Config register CONFIG7L @ 0x30000C
  1447                           ;	Table Read Protection bit
  1448                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1449                           ;	Table Read Protection bit
  1450                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1451                           ;	Table Read Protection bit
  1452                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1453                           ;	Table Read Protection bit
  1454                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1455   30000C                     	org	3145740
  1456   30000C  0F                 	db	15
  1457                           
  1458                           ;Config register CONFIG7H @ 0x30000D
  1459                           ;	Boot Block Table Read Protection bit
  1460                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1461   30000D                     	org	3145741
  1462   30000D  40                 	db	64
  1463                           tosu	equ	0xFFF
  1464                           tosh	equ	0xFFE
  1465                           tosl	equ	0xFFD
  1466                           stkptr	equ	0xFFC
  1467                           pclatu	equ	0xFFB
  1468                           pclath	equ	0xFFA
  1469                           pcl	equ	0xFF9
  1470                           tblptru	equ	0xFF8
  1471                           tblptrh	equ	0xFF7
  1472                           tblptrl	equ	0xFF6
  1473                           tablat	equ	0xFF5
  1474                           prodh	equ	0xFF4
  1475                           prodl	equ	0xFF3
  1476                           indf0	equ	0xFEF
  1477                           postinc0	equ	0xFEE
  1478                           postdec0	equ	0xFED
  1479                           preinc0	equ	0xFEC
  1480                           plusw0	equ	0xFEB
  1481                           fsr0h	equ	0xFEA
  1482                           fsr0l	equ	0xFE9
  1483                           wreg	equ	0xFE8
  1484                           indf1	equ	0xFE7
  1485                           postinc1	equ	0xFE6
  1486                           postdec1	equ	0xFE5
  1487                           preinc1	equ	0xFE4
  1488                           plusw1	equ	0xFE3
  1489                           fsr1h	equ	0xFE2
  1490                           fsr1l	equ	0xFE1
  1491                           bsr	equ	0xFE0
  1492                           indf2	equ	0xFDF
  1493                           postinc2	equ	0xFDE
  1494                           postdec2	equ	0xFDD
  1495                           preinc2	equ	0xFDC
  1496                           plusw2	equ	0xFDB
  1497                           fsr2h	equ	0xFDA
  1498                           fsr2l	equ	0xFD9
  1499                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     15      57
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    dc_motor_initialize@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor1(COMRAM[2]), dc_motor2(COMRAM[2]), 

    dc_motor_move_left@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor1(COMRAM[2]), dc_motor2(COMRAM[2]), 

    dc_motor_move_right@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor1(COMRAM[2]), dc_motor2(COMRAM[2]), 

    dc_motor_stop@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor1(COMRAM[2]), dc_motor2(COMRAM[2]), 

    gpio_pin_direction_initialize@_pin_config	PTR const struct . size(1) Largest target is 2
		 -> dc_motor1(COMRAM[2]), dc_motor1$dc_motor(COMRAM[2]), dc_motor2(COMRAM[2]), dc_motor2$dc_motor(COMRAM[2]), 
		 -> led_initialize@pin(COMRAM[1]), relay_initialize@pin(COMRAM[1]), 

    gpio_pin_initialize@_pin_config	PTR const struct . size(1) Largest target is 2
		 -> dc_motor1(COMRAM[2]), dc_motor1$dc_motor(COMRAM[2]), dc_motor2(COMRAM[2]), dc_motor2$dc_motor(COMRAM[2]), 
		 -> led_initialize@pin(COMRAM[1]), relay_initialize@pin(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 2
		 -> dc_motor1(COMRAM[2]), dc_motor1$dc_motor(COMRAM[2]), dc_motor2(COMRAM[2]), dc_motor2$dc_motor(COMRAM[2]), 
		 -> led_initialize@pin(COMRAM[1]), led_turn_off@pin(COMRAM[1]), led_turn_on@pin(COMRAM[1]), relay_initialize@pin(COMRAM[1]), 
		 -> relay_turn_off@pin(COMRAM[1]), relay_turn_on@pin(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _dc_motor_stop->_gpio_pin_write_logic
    _dc_motor_move_right->_gpio_pin_write_logic
    _dc_motor_move_left->_gpio_pin_write_logic
    _application_initialize->_dc_motor_initialize
    _dc_motor_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9634
                                             13 COMRAM     2     2      0
             _application_initialize
                 _dc_motor_move_left
                _dc_motor_move_right
                      _dc_motor_stop
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        2     1      1    2124
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_right                                  2     1      1    2276
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_left                                   2     1      1    2276
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               1     1      0    2958
                _dc_motor_initialize
 ---------------------------------------------------------------------------------
 (2) _dc_motor_initialize                                  2     1      1    2955
                                             11 COMRAM     2     1      1
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_initialize                                  3     2      1    2711
                                              8 COMRAM     3     2      1
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     6      2    1896
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_initialize                        7     6      1     353
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _dc_motor_initialize
       _gpio_pin_initialize
         _gpio_pin_direction_initialize
         _gpio_pin_write_logic
   _dc_motor_move_left
     _gpio_pin_write_logic
   _dc_motor_move_right
     _gpio_pin_write_logic
   _dc_motor_stop
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      F      39       1       44.9%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      39      39        0.0%
DATA                 0      0      39       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Jan 19 16:33:37 2024

                                     l222 14C8                                       l214 14FE  
                                     l127 1144                                       l223 14CA  
                                     l128 1146                                       l144 1288  
                                     l160 13CE                                       l208 1290  
                                     l145 128A                                       l233 149A  
                                     l228 1468                                       l238 1436  
                                     l159 13CC                                       u610 1016  
                                     u611 1012                                       u620 1032  
                                     u700 1198                                       u621 102E  
                                     u701 1194                                       u630 1052  
                                     u710 11AC                                       u631 104E  
                                     u711 11A8                                       u800 1416  
                                     u801 1412                                       u660 111A  
                                     u644 1074                                       u724 11CE  
                                     u740 1366                                       u661 1114  
                                     u645 1070                                       u725 11CA  
                                     u741 1362                                       u670 111C  
                                     u654 10CA                                       u734 1224  
                                     u750 1382                                       u655 10C6  
                                     u735 1220                                       u751 137E  
                                     u680 115C                                       u760 13A2  
                                     u681 1158                                       u761 139E  
                                     u690 1178                                       u770 14AC  
                                     u691 1174                                       u771 14A8  
                                     u780 1448                                       u781 1444  
                                     u790 147A                                       u791 1476  
                                     u947 12AA                                       u957 12D0  
                                     u967 12F6                                       u977 131C  
                                     u987 1342                                       _ret 0032  
                     led_initialize@F2892 0039                                       wreg 0FE8  
                   relay_initialize@F2890 0035                                      l1310 1002  
                                    l1320 10AC                                      l1312 1016  
                                    l1400 149A                                      l1314 1032  
                                    l1322 10FC                                      l1324 1104  
                                    l1340 1198                                      l1404 1406  
                                    l1318 1056                                      l1350 125E  
                                    l1334 1148                                      l1406 1416  
                                    l1344 11B0                                      l1336 115C  
                                    l1408 1436                                      l1346 1206  
                                    l1338 1178                                      l1370 13C8  
                                    l1362 1356                                      l1530 128C  
                                    l1348 1256                                      l1364 1366  
                                    l1540 12EC                                      l1532 12A0  
                                    l1366 1382                                      l1374 149C  
                                    l1382 14EE                                      l1390 1448  
                                    l1542 1302                                      l1534 12B6  
                                    l1560 112E                                      l1368 13A2  
                                    l1376 14AC                                      l1384 14EE  
                                    l1392 1468                                      l1544 130A  
                                    l1536 12BE                                      l1378 14C4  
                                    l1386 14F6                                      l1546 1312  
                                    l1538 12C6                                      l1396 146A  
                                    l1388 1438                                      l1548 1338  
                                    l1558 1272                                      l1398 147A  
                                    _LATA 0F89                                      _LATB 0F8A  
                                    _LATC 0F8B                                      _LATD 0F8C  
                                    _LATE 0F8D                                      _main 128C  
                                    fsr2h 0FDA                                      indf2 0FDF  
                                    fsr1l 0FE1                                      fsr2l 0FD9  
                                    prodl 0FF3                                      start 0000  
                            ___param_bank 0000                    dc_motor_initialize@ret 002F  
                    _gpio_pin_write_logic 1148                                     ?_main 0023  
                ??_application_initialize 0030                       relay_turn_off@F2900 0033  
                                   _PORTA 0F80                                     _PORTB 0F81  
                                   _PORTC 0F82                                     _PORTD 0F83  
                                   _PORTE 0F84                                     _TRISA 0F92  
                                   _TRISB 0F93                                     _TRISC 0F94  
                                   _TRISD 0F95                                     _TRISE 0F96  
                                   tablat 0FF5                                     status 0FD8  
          ?_gpio_pin_direction_initialize 0023                           __initialization 13D0  
                            __end_of_main 1356                     ?_gpio_pin_write_logic 0023  
                           _lat_registers 000B               __end_of_dc_motor_initialize 14CC  
                                  ??_main 0030                             __activetblptr 0002  
                        led_turn_on@F2897 0038               __end_of_dc_motor_move_right 146A  
                                  clear_0 13F6                                    isa$std 0001  
                            __pdataCOMRAM 0001                              __mediumconst 0000  
                                  tblptrh 0FF7                                    tblptrl 0FF6  
                                  tblptru 0FF8                                __accesstop 0080  
                 __end_of__initialization 13FC                             ___rparam_used 0001  
             dc_motor_move_left@_dc_motor 002B                    ??_gpio_pin_write_logic 0025  
                          __pcstackCOMRAM 0023  gpio_pin_direction_initialize@_pin_config 0023  
                  _application_initialize 14EE                         led_turn_off@F2902 0037  
                    led_turn_toggle@F2907 0036                            _tris_registers 0015  
                                 __Hparam 0000                                   __Lparam 0000  
                   dc_motor_move_left@ret 002C                       _gpio_pin_initialize 1356  
                            __psmallconst 1000                                   __pcinit 13D0  
                                 __ramtop 1000                                   __ptext0 128C  
                                 __ptext1 1406                                   __ptext2 1438  
                                 __ptext3 146A                                   __ptext4 14EE  
                                 __ptext5 149C                                   __ptext6 1356  
                                 __ptext7 1148                                   __ptext8 1002  
         ??_gpio_pin_direction_initialize 0024                      ?_gpio_pin_initialize 002B  
                    end_of_initialization 13FC                             __Lmediumconst 0000  
                           _dc_motor_stop 1406                                   postdec1 0FE5  
                                 postdec2 0FDD                                   postinc0 0FEE  
                                 postinc2 0FDE                     ??_gpio_pin_initialize 002C  
                          ?_dc_motor_stop 002B                        relay_turn_on@F2895 0034  
                           __pidataCOMRAM 14CC                       start_initialization 13D0  
   __end_of_gpio_pin_direction_initialize 1148             _gpio_pin_direction_initialize 1002  
                 ?_application_initialize 0023                    dc_motor_stop@_dc_motor 002B  
              __end_of_dc_motor_move_left 149C                          dc_motor_stop@ret 002C  
                             __pbssCOMRAM 0032            __end_of_application_initialize 1500  
                               _dc_motor1 0021                                 _dc_motor2 001F  
                         ??_dc_motor_stop 002C           gpio_pin_write_logic@_pin_config 0023  
               gpio_pin_write_logic@logic 0024                               __smallconst 1000  
                     _dc_motor_initialize 149C              dc_motor_initialize@_dc_motor 002E  
        gpio_pin_direction_initialize@ret 0029                    gpio_pin_initialize@ret 002D  
                    ?_dc_motor_initialize 002E                   gpio_pin_write_logic@ret 002A  
                               copy_data0 13E4                       _dc_motor_move_right 1438  
                                __Hrparam 0000                                  __Lrparam 0000  
                    ?_dc_motor_move_right 002B               __end_of_gpio_pin_initialize 13D0  
          gpio_pin_initialize@_pin_config 002B                     ??_dc_motor_initialize 002F  
                  dc_motor_move_right@ret 002C                                  isa$xinst 0000  
                   ??_dc_motor_move_right 002C                        _dc_motor_move_left 146A  
            __end_of_gpio_pin_write_logic 128C                       ?_dc_motor_move_left 002B  
                    ??_dc_motor_move_left 002C              dc_motor_move_right@_dc_motor 002B  
                          _port_registers 0001                     __end_of_dc_motor_stop 1438  
