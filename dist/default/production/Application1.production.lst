

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Feb 01 05:38:50 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Generated 23/03/2023 GMT
    36                           ; 
    37                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4620 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000000                     
    70                           	psect	idataCOMRAM
    71   001938                     __pidataCOMRAM:
    72                           	callstack 0
    73                           
    74                           ;initializer for _lat_registers
    75   001938  89                 	db	137
    76   001939  0F                 	db	15
    77   00193A  8A                 	db	138
    78   00193B  0F                 	db	15
    79   00193C  8B                 	db	139
    80   00193D  0F                 	db	15
    81   00193E  8C                 	db	140
    82   00193F  0F                 	db	15
    83   001940  8D                 	db	141
    84   001941  0F                 	db	15
    85                           
    86                           ;initializer for _tris_registers
    87   001942  92                 	db	146
    88   001943  0F                 	db	15
    89   001944  93                 	db	147
    90   001945  0F                 	db	15
    91   001946  94                 	db	148
    92   001947  0F                 	db	15
    93   001948  95                 	db	149
    94   001949  0F                 	db	15
    95   00194A  96                 	db	150
    96   00194B  0F                 	db	15
    97                           
    98                           ;initializer for _led1
    99   00194C  03                 	db	3
   100                           
   101                           ;initializer for _lcd2
   102   00194D  32                 	db	50
   103   00194E  3A                 	db	58
   104   00194F  03                 	db	3
   105   001950  0B                 	db	11
   106   001951  13                 	db	19
   107   001952  1B                 	db	27
   108   001953  23                 	db	35
   109   001954  2B                 	db	43
   110   001955  33                 	db	51
   111   001956  3B                 	db	59
   112                           
   113                           ;initializer for _customChar5
   114   001957  0E                 	db	14
   115   001958  0A                 	db	10
   116   001959  1F                 	db	31
   117   00195A  1F                 	db	31
   118   00195B  1F                 	db	31
   119   00195C  1F                 	db	31
   120   00195D  1F                 	db	31
   121   00195E  00                 	db	0
   122                           
   123                           ;initializer for _customChar4
   124   00195F  0E                 	db	14
   125   001960  0A                 	db	10
   126   001961  11                 	db	17
   127   001962  1F                 	db	31
   128   001963  1F                 	db	31
   129   001964  1F                 	db	31
   130   001965  1F                 	db	31
   131   001966  00                 	db	0
   132                           
   133                           ;initializer for _customChar3
   134   001967  0E                 	db	14
   135   001968  0A                 	db	10
   136   001969  11                 	db	17
   137   00196A  11                 	db	17
   138   00196B  1F                 	db	31
   139   00196C  1F                 	db	31
   140   00196D  1F                 	db	31
   141   00196E  00                 	db	0
   142                           
   143                           ;initializer for _customChar2
   144   00196F  0E                 	db	14
   145   001970  0A                 	db	10
   146   001971  11                 	db	17
   147   001972  11                 	db	17
   148   001973  11                 	db	17
   149   001974  1F                 	db	31
   150   001975  1F                 	db	31
   151   001976  00                 	db	0
   152                           
   153                           ;initializer for _customChar1
   154   001977  0E                 	db	14
   155   001978  0A                 	db	10
   156   001979  11                 	db	17
   157   00197A  11                 	db	17
   158   00197B  11                 	db	17
   159   00197C  11                 	db	17
   160   00197D  1F                 	db	31
   161   00197E  00                 	db	0
   162                           
   163                           ;initializer for _lcd1
   164   00197F  02                 	db	2
   165   001980  0A                 	db	10
   166   001981  12                 	db	18
   167   001982  1A                 	db	26
   168   001983  22                 	db	34
   169   001984  2A                 	db	42
   170                           
   171                           	psect	idataBANK0
   172   001A3E                     __pidataBANK0:
   173                           	callstack 0
   174                           
   175                           ;initializer for _port_registers
   176   001A3E  80                 	db	128
   177   001A3F  0F                 	db	15
   178   001A40  81                 	db	129
   179   001A41  0F                 	db	15
   180   001A42  82                 	db	130
   181   001A43  0F                 	db	15
   182   001A44  83                 	db	131
   183   001A45  0F                 	db	15
   184   001A46  84                 	db	132
   185   001A47  0F                 	db	15
   186                           
   187                           ;initializer for _keypad1
   188   001A48  02                 	db	2
   189   001A49  0A                 	db	10
   190   001A4A  12                 	db	18
   191   001A4B  1A                 	db	26
   192   001A4C  62                 	db	98
   193   001A4D  6A                 	db	106
   194   001A4E  72                 	db	114
   195   001A4F  7A                 	db	122
   196                           
   197                           ;initializer for _customChar6
   198   001A50  0E                 	db	14
   199   001A51  0E                 	db	14
   200   001A52  1F                 	db	31
   201   001A53  1F                 	db	31
   202   001A54  1F                 	db	31
   203   001A55  1F                 	db	31
   204   001A56  1F                 	db	31
   205   001A57  00                 	db	0
   206                           
   207                           	psect	smallconst
   208   001000                     __psmallconst:
   209                           	callstack 0
   210   001000  00                 	db	0
   211   001001                     _keypad_values:
   212                           	callstack 0
   213   001001  37                 	db	55
   214   001002  38                 	db	56
   215   001003  39                 	db	57
   216   001004  2F                 	db	47
   217   001005  34                 	db	52
   218   001006  35                 	db	53
   219   001007  36                 	db	54
   220   001008  2A                 	db	42
   221   001009  31                 	db	49
   222   00100A  32                 	db	50
   223   00100B  33                 	db	51
   224   00100C  2D                 	db	45
   225   00100D  63                 	db	99
   226   00100E  30                 	db	48
   227   00100F  3D                 	db	61
   228   001010  2B                 	db	43
   229   001011                     __end_of_keypad_values:
   230                           	callstack 0
   231   000000                     _PORTE	set	3972
   232   000000                     _PORTD	set	3971
   233   000000                     _PORTC	set	3970
   234   000000                     _PORTB	set	3969
   235   000000                     _PORTA	set	3968
   236   000000                     _LATA	set	3977
   237   000000                     _TRISA	set	3986
   238   000000                     _TRISE	set	3990
   239   000000                     _TRISD	set	3989
   240   000000                     _TRISC	set	3988
   241   000000                     _TRISB	set	3987
   242   000000                     _LATE	set	3981
   243   000000                     _LATD	set	3980
   244   000000                     _LATC	set	3979
   245   000000                     _LATB	set	3978
   246   001011  48                 	db	72	;'H'
   247   001012  65                 	db	101	;'e'
   248   001013  6C                 	db	108	;'l'
   249   001014  6C                 	db	108	;'l'
   250   001015  6F                 	db	111	;'o'
   251   001016  20                 	db	32
   252   001017  41                 	db	65	;'A'
   253   001018  6C                 	db	108	;'l'
   254   001019  6C                 	db	108	;'l'
   255   00101A  00                 	db	0
   256   00101B  4C                 	db	76	;'L'
   257   00101C  6F                 	db	111	;'o'
   258   00101D  61                 	db	97	;'a'
   259   00101E  64                 	db	100	;'d'
   260   00101F  69                 	db	105	;'i'
   261   001020  6E                 	db	110	;'n'
   262   001021  67                 	db	103	;'g'
   263   001022  00                 	db	0
   264   001023                     STR_3:
   265   001023  25                 	db	37
   266   001024  69                 	db	105	;'i'
   267   001025  00                 	db	0
   268   001026  00                 	db	0	; dummy byte at the end
   269   000000                     
   270                           ; #config settings
   271                           
   272                           	psect	cinit
   273   0018E2                     __pcinit:
   274                           	callstack 0
   275   0018E2                     start_initialization:
   276                           	callstack 0
   277   0018E2                     __initialization:
   278                           	callstack 0
   279                           
   280                           ; Initialize objects allocated to BANK0 (26 bytes)
   281                           ; load TBLPTR registers with __pidataBANK0
   282   0018E2  0E3E               	movlw	low __pidataBANK0
   283   0018E4  6EF6               	movwf	tblptrl,c
   284   0018E6  0E1A               	movlw	high __pidataBANK0
   285   0018E8  6EF7               	movwf	tblptrh,c
   286   0018EA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   287   0018EC  6EF8               	movwf	tblptru,c
   288   0018EE  EE00  F080         	lfsr	0,__pdataBANK0
   289   0018F2  EE10 F01A          	lfsr	1,26
   290   0018F6                     copy_data0:
   291   0018F6  0009               	tblrd		*+
   292   0018F8  CFF5 FFEE          	movff	tablat,postinc0
   293   0018FC  50E5               	movf	postdec1,w,c
   294   0018FE  50E1               	movf	fsr1l,w,c
   295   001900  E1FA               	bnz	copy_data0
   296                           
   297                           ; Initialize objects allocated to COMRAM (77 bytes)
   298                           ; load TBLPTR registers with __pidataCOMRAM
   299   001902  0E38               	movlw	low __pidataCOMRAM
   300   001904  6EF6               	movwf	tblptrl,c
   301   001906  0E19               	movlw	high __pidataCOMRAM
   302   001908  6EF7               	movwf	tblptrh,c
   303   00190A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   304   00190C  6EF8               	movwf	tblptru,c
   305   00190E  EE00  F001         	lfsr	0,__pdataCOMRAM
   306   001912  EE10 F04D          	lfsr	1,77
   307   001916                     copy_data1:
   308   001916  0009               	tblrd		*+
   309   001918  CFF5 FFEE          	movff	tablat,postinc0
   310   00191C  50E5               	movf	postdec1,w,c
   311   00191E  50E1               	movf	fsr1l,w,c
   312   001920  E1FA               	bnz	copy_data1
   313                           
   314                           ; Clear objects allocated to COMRAM (8 bytes)
   315   001922  EE00  F074         	lfsr	0,__pbssCOMRAM
   316   001926  0E08               	movlw	8
   317   001928                     clear_0:
   318   001928  6AEE               	clrf	postinc0,c
   319   00192A  06E8               	decf	wreg,f,c
   320   00192C  E1FD               	bnz	clear_0
   321   00192E                     end_of_initialization:
   322                           	callstack 0
   323   00192E                     __end_of__initialization:
   324                           	callstack 0
   325   00192E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   326   001930  6EF8               	movwf	tblptru,c
   327   001932  0100               	movlb	0
   328   001934  EF37  F00D         	goto	_main	;jump to C main() function
   329                           
   330                           	psect	bssCOMRAM
   331   000074                     __pbssCOMRAM:
   332                           	callstack 0
   333   000074                     _ret:
   334                           	callstack 0
   335   000074                     	ds	1
   336   000075                     relay_turn_off@F3067:
   337                           	callstack 0
   338   000075                     	ds	1
   339   000076                     relay_turn_on@F3062:
   340                           	callstack 0
   341   000076                     	ds	1
   342   000077                     relay_initialize@F3057:
   343                           	callstack 0
   344   000077                     	ds	1
   345   000078                     led_turn_toggle@F3074:
   346                           	callstack 0
   347   000078                     	ds	1
   348   000079                     led_turn_off@F3069:
   349                           	callstack 0
   350   000079                     	ds	1
   351   00007A                     led_turn_on@F3064:
   352                           	callstack 0
   353   00007A                     	ds	1
   354   00007B                     led_initialize@F3059:
   355                           	callstack 0
   356   00007B                     	ds	1
   357                           
   358                           	psect	dataCOMRAM
   359   000001                     __pdataCOMRAM:
   360                           	callstack 0
   361   000001                     _lat_registers:
   362                           	callstack 0
   363   000001                     	ds	10
   364   00000B                     _tris_registers:
   365                           	callstack 0
   366   00000B                     	ds	10
   367   000015                     _led1:
   368                           	callstack 0
   369   000015                     	ds	1
   370   000016                     _lcd2:
   371                           	callstack 0
   372   000016                     	ds	10
   373   000020                     _customChar5:
   374                           	callstack 0
   375   000020                     	ds	8
   376   000028                     _customChar4:
   377                           	callstack 0
   378   000028                     	ds	8
   379   000030                     _customChar3:
   380                           	callstack 0
   381   000030                     	ds	8
   382   000038                     _customChar2:
   383                           	callstack 0
   384   000038                     	ds	8
   385   000040                     _customChar1:
   386                           	callstack 0
   387   000040                     	ds	8
   388   000048                     _lcd1:
   389                           	callstack 0
   390   000048                     	ds	6
   391                           
   392                           	psect	dataBANK0
   393   000080                     __pdataBANK0:
   394                           	callstack 0
   395   000080                     _port_registers:
   396                           	callstack 0
   397   000080                     	ds	10
   398   00008A                     _keypad1:
   399                           	callstack 0
   400   00008A                     	ds	8
   401   000092                     _customChar6:
   402                           	callstack 0
   403   000092                     	ds	8
   404                           
   405                           	psect	cstackCOMRAM
   406   00004E                     __pcstackCOMRAM:
   407                           	callstack 0
   408   00004E                     gpio_pin_direction_initialize@_pin_config:
   409                           	callstack 0
   410   00004E                     gpio_pin_write_logic@_pin_config:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0x0
   414   00004E                     	ds	1
   415   00004F                     ??_gpio_pin_direction_initialize:
   416   00004F                     gpio_pin_write_logic@logic:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0x1
   420   00004F                     	ds	1
   421   000050                     ??_gpio_pin_write_logic:
   422                           
   423                           ; 1 bytes @ 0x2
   424   000050                     	ds	4
   425   000054                     gpio_pin_direction_initialize@ret:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0x6
   429   000054                     	ds	1
   430   000055                     gpio_pin_write_logic@ret:
   431                           	callstack 0
   432                           
   433                           ; 1 bytes @ 0x7
   434   000055                     	ds	1
   435   000056                     gpio_pin_initialize@_pin_config:
   436                           	callstack 0
   437   000056                     lcd_send_4bits@lcd:
   438                           	callstack 0
   439   000056                     lcd_4bit_send_enable_signal@lcd:
   440                           	callstack 0
   441   000056                     lcd_8bit_send_enable_signal@lcd:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0x8
   445   000056                     	ds	1
   446   000057                     ??_gpio_pin_initialize:
   447   000057                     lcd_send_4bits@_data_command:
   448                           	callstack 0
   449   000057                     lcd_4bit_send_enable_signal@ret:
   450                           	callstack 0
   451   000057                     lcd_8bit_send_enable_signal@ret:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x9
   455   000057                     	ds	1
   456   000058                     ??_lcd_send_4bits:
   457   000058                     gpio_pin_initialize@ret:
   458                           	callstack 0
   459   000058                     lcd_8bit_send_command@lcd:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0xA
   463   000058                     	ds	1
   464   000059                     lcd_8bit_send_command@command:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0xB
   468   000059                     	ds	1
   469   00005A                     ??_lcd_8bit_send_command:
   470   00005A                     lcd_send_4bits@ret:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0xC
   474   00005A                     	ds	1
   475   00005B                     lcd_send_4bits@l_pins_counter:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0xD
   479   00005B                     	ds	1
   480   00005C                     lcd_4bit_send_command@lcd:
   481                           	callstack 0
   482   00005C                     lcd_4bit_send_char_data@lcd:
   483                           	callstack 0
   484   00005C                     lcd_8bit_send_command@ret:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0xE
   488   00005C                     	ds	1
   489   00005D                     lcd_4bit_send_command@command:
   490                           	callstack 0
   491   00005D                     lcd_4bit_send_char_data@data:
   492                           	callstack 0
   493   00005D                     lcd_8bit_send_command@l_pins_counter:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0xF
   497   00005D                     	ds	1
   498   00005E                     lcd_4bit_send_command@ret:
   499                           	callstack 0
   500   00005E                     lcd_4bit_send_char_data@ret:
   501                           	callstack 0
   502   00005E                     lcd_8bit_initialize@lcd:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0x10
   506   00005E                     	ds	1
   507   00005F                     ??_lcd_8bit_initialize:
   508   00005F                     lcd_4bit_initialize@lcd:
   509                           	callstack 0
   510   00005F                     lcd_4bit_set_cursor@lcd:
   511                           	callstack 0
   512                           
   513                           ; 1 bytes @ 0x11
   514   00005F                     	ds	1
   515   000060                     ??_lcd_4bit_initialize:
   516   000060                     lcd_8bit_initialize@l_pins_counter:
   517                           	callstack 0
   518   000060                     lcd_4bit_set_cursor@row:
   519                           	callstack 0
   520                           
   521                           ; 1 bytes @ 0x12
   522   000060                     	ds	1
   523   000061                     lcd_4bit_initialize@l_pins_counter:
   524                           	callstack 0
   525   000061                     lcd_8bit_initialize@ret:
   526                           	callstack 0
   527   000061                     lcd_4bit_set_cursor@column:
   528                           	callstack 0
   529                           
   530                           ; 1 bytes @ 0x13
   531   000061                     	ds	1
   532   000062                     ??_lcd_4bit_set_cursor:
   533   000062                     lcd_4bit_initialize@ret:
   534                           	callstack 0
   535                           
   536                           ; 1 bytes @ 0x14
   537   000062                     	ds	1
   538   000063                     ecu_layer_initialize@ret_init:
   539                           	callstack 0
   540                           
   541                           ; 1 bytes @ 0x15
   542   000063                     	ds	1
   543   000064                     lcd_4bit_set_cursor@ret:
   544                           	callstack 0
   545                           
   546                           ; 1 bytes @ 0x16
   547   000064                     	ds	1
   548   000065                     lcd_4bit_send_char_data_pos@lcd:
   549                           	callstack 0
   550                           
   551                           ; 1 bytes @ 0x17
   552   000065                     	ds	1
   553   000066                     lcd_4bit_send_char_data_pos@row:
   554                           	callstack 0
   555                           
   556                           ; 1 bytes @ 0x18
   557   000066                     	ds	1
   558   000067                     lcd_4bit_send_char_data_pos@column:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0x19
   562   000067                     	ds	1
   563   000068                     lcd_4bit_send_char_data_pos@data:
   564                           	callstack 0
   565                           
   566                           ; 1 bytes @ 0x1A
   567   000068                     	ds	1
   568   000069                     lcd_4bit_send_char_data_pos@ret:
   569                           	callstack 0
   570                           
   571                           ; 1 bytes @ 0x1B
   572   000069                     	ds	1
   573   00006A                     lcd_4bit_send_custom_char_pos@lcd:
   574                           	callstack 0
   575                           
   576                           ; 1 bytes @ 0x1C
   577   00006A                     	ds	1
   578   00006B                     lcd_4bit_send_custom_char_pos@row:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0x1D
   582   00006B                     	ds	1
   583   00006C                     lcd_4bit_send_custom_char_pos@column:
   584                           	callstack 0
   585                           
   586                           ; 1 bytes @ 0x1E
   587   00006C                     	ds	1
   588   00006D                     lcd_4bit_send_custom_char_pos@_char:
   589                           	callstack 0
   590                           
   591                           ; 1 bytes @ 0x1F
   592   00006D                     	ds	1
   593   00006E                     lcd_4bit_send_custom_char_pos@mem_pos:
   594                           	callstack 0
   595                           
   596                           ; 1 bytes @ 0x20
   597   00006E                     	ds	1
   598   00006F                     lcd_4bit_send_custom_char_pos@ret:
   599                           	callstack 0
   600                           
   601                           ; 1 bytes @ 0x21
   602   00006F                     	ds	1
   603   000070                     lcd_4bit_send_custom_char_pos@lcd_counter:
   604                           	callstack 0
   605                           
   606                           ; 1 bytes @ 0x22
   607   000070                     	ds	1
   608   000071                     ??_battary_charging2:
   609                           
   610                           ; 1 bytes @ 0x23
   611   000071                     	ds	2
   612   000073                     battary_charging2@l_lcd1_counter:
   613                           	callstack 0
   614                           
   615                           ; 1 bytes @ 0x25
   616   000073                     	ds	1
   617   000074                     
   618                           ; 1 bytes @ 0x26
   619 ;;
   620 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   621 ;;
   622 ;; *************** function _main *****************
   623 ;; Defined at:
   624 ;;		line 77 in file "Application1.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;		None
   629 ;; Return value:  Size  Location     Type
   630 ;;                  2  331[None  ] int 
   631 ;; Registers used:
   632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   633 ;; Tracked objects:
   634 ;;		On entry : 0/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   642 ;;Total ram usage:        0 bytes
   643 ;; Hardware stack levels required when called: 7
   644 ;; This function calls:
   645 ;;		_application_initialize
   646 ;;		_battary_charging2
   647 ;; This function is called by:
   648 ;;		Startup code after reset
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           	psect	text0
   653   001A6E                     __ptext0:
   654                           	callstack 0
   655   001A6E                     _main:
   656                           	callstack 24
   657   001A6E                     
   658                           ;Application1.c: 79:     application_initialize();
   659   001A6E  EC3F  F00D         	call	_application_initialize	;wreg free
   660                           
   661                           ;Application1.c: 82:     battary_charging2();
   662   001A72  EC59  F009         	call	_battary_charging2	;wreg free
   663   001A76                     l332:
   664   001A76  EF3B  F00D         	goto	l332
   665   001A7A  EF00  F000         	goto	start
   666   001A7E                     __end_of_main:
   667                           	callstack 0
   668                           
   669 ;; *************** function _battary_charging2 *****************
   670 ;; Defined at:
   671 ;;		line 62 in file "Application1.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;		None
   674 ;; Auto vars:     Size  Location     Type
   675 ;;  l_lcd1_count    1   37[COMRAM] unsigned char 
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   687 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   688 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   689 ;;Total ram usage:        3 bytes
   690 ;; Hardware stack levels used: 1
   691 ;; Hardware stack levels required when called: 6
   692 ;; This function calls:
   693 ;;		_lcd_4bit_send_custom_char_pos
   694 ;; This function is called by:
   695 ;;		_main
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           	psect	text1
   700   0012B2                     __ptext1:
   701                           	callstack 0
   702   0012B2                     _battary_charging2:
   703                           	callstack 24
   704   0012B2                     
   705                           ;Application1.c: 64:     uint8 l_lcd1_counter = 0;
   706   0012B2  0E00               	movlw	0
   707   0012B4  6E73               	movwf	battary_charging2@l_lcd1_counter^0,c
   708                           
   709                           ;Application1.c: 65:     for(l_lcd1_counter = 1; l_lcd1_counter<=8 ; l_lcd1_counter++)
   710   0012B6  0E01               	movlw	1
   711   0012B8  6E73               	movwf	battary_charging2@l_lcd1_counter^0,c
   712   0012BA                     l2489:
   713                           
   714                           ;Application1.c: 66:     {;Application1.c: 67:         ret = lcd_4bit_send_custom_char_p
      +                          os(&lcd1,1,20,customChar1,0);_delay((unsigned long)((250)*(8000000.0/4000.0)));
   715   0012BA  0E48               	movlw	low _lcd1
   716   0012BC  6E6A               	movwf	lcd_4bit_send_custom_char_pos@lcd^0,c
   717   0012BE  0E01               	movlw	1
   718   0012C0  6E6B               	movwf	lcd_4bit_send_custom_char_pos@row^0,c
   719   0012C2  0E14               	movlw	20
   720   0012C4  6E6C               	movwf	lcd_4bit_send_custom_char_pos@column^0,c
   721   0012C6  0E40               	movlw	low _customChar1
   722   0012C8  6E6D               	movwf	lcd_4bit_send_custom_char_pos@_char^0,c
   723   0012CA  0E00               	movlw	0
   724   0012CC  6E6E               	movwf	lcd_4bit_send_custom_char_pos@mem_pos^0,c
   725   0012CE  ECAB  F00B         	call	_lcd_4bit_send_custom_char_pos	;wreg free
   726   0012D2  6E74               	movwf	_ret^0,c
   727   0012D4  0E03               	movlw	3
   728   0012D6  6E72               	movwf	(??_battary_charging2+1)^0,c
   729   0012D8  0E8A               	movlw	138
   730   0012DA  6E71               	movwf	??_battary_charging2^0,c
   731   0012DC  0E56               	movlw	86
   732   0012DE                     u2087:
   733   0012DE  2EE8               	decfsz	wreg,f,c
   734   0012E0  D7FE               	bra	u2087
   735   0012E2  2E71               	decfsz	??_battary_charging2^0,f,c
   736   0012E4  D7FC               	bra	u2087
   737   0012E6  2E72               	decfsz	(??_battary_charging2+1)^0,f,c
   738   0012E8  D7FA               	bra	u2087
   739   0012EA                     
   740                           ;Application1.c: 68:         ret = lcd_4bit_send_custom_char_pos(&lcd1,1,20,customChar2,
      +                          0);_delay((unsigned long)((250)*(8000000.0/4000.0)));
   741   0012EA  0E48               	movlw	low _lcd1
   742   0012EC  6E6A               	movwf	lcd_4bit_send_custom_char_pos@lcd^0,c
   743   0012EE  0E01               	movlw	1
   744   0012F0  6E6B               	movwf	lcd_4bit_send_custom_char_pos@row^0,c
   745   0012F2  0E14               	movlw	20
   746   0012F4  6E6C               	movwf	lcd_4bit_send_custom_char_pos@column^0,c
   747   0012F6  0E38               	movlw	low _customChar2
   748   0012F8  6E6D               	movwf	lcd_4bit_send_custom_char_pos@_char^0,c
   749   0012FA  0E00               	movlw	0
   750   0012FC  6E6E               	movwf	lcd_4bit_send_custom_char_pos@mem_pos^0,c
   751   0012FE  ECAB  F00B         	call	_lcd_4bit_send_custom_char_pos	;wreg free
   752   001302  6E74               	movwf	_ret^0,c
   753   001304  0E03               	movlw	3
   754   001306  6E72               	movwf	(??_battary_charging2+1)^0,c
   755   001308  0E8A               	movlw	138
   756   00130A  6E71               	movwf	??_battary_charging2^0,c
   757   00130C  0E56               	movlw	86
   758   00130E                     u2097:
   759   00130E  2EE8               	decfsz	wreg,f,c
   760   001310  D7FE               	bra	u2097
   761   001312  2E71               	decfsz	??_battary_charging2^0,f,c
   762   001314  D7FC               	bra	u2097
   763   001316  2E72               	decfsz	(??_battary_charging2+1)^0,f,c
   764   001318  D7FA               	bra	u2097
   765   00131A                     
   766                           ;Application1.c: 69:         ret = lcd_4bit_send_custom_char_pos(&lcd1,1,20,customChar3,
      +                          0);_delay((unsigned long)((250)*(8000000.0/4000.0)));
   767   00131A  0E48               	movlw	low _lcd1
   768   00131C  6E6A               	movwf	lcd_4bit_send_custom_char_pos@lcd^0,c
   769   00131E  0E01               	movlw	1
   770   001320  6E6B               	movwf	lcd_4bit_send_custom_char_pos@row^0,c
   771   001322  0E14               	movlw	20
   772   001324  6E6C               	movwf	lcd_4bit_send_custom_char_pos@column^0,c
   773   001326  0E30               	movlw	low _customChar3
   774   001328  6E6D               	movwf	lcd_4bit_send_custom_char_pos@_char^0,c
   775   00132A  0E00               	movlw	0
   776   00132C  6E6E               	movwf	lcd_4bit_send_custom_char_pos@mem_pos^0,c
   777   00132E  ECAB  F00B         	call	_lcd_4bit_send_custom_char_pos	;wreg free
   778   001332  6E74               	movwf	_ret^0,c
   779   001334  0E03               	movlw	3
   780   001336  6E72               	movwf	(??_battary_charging2+1)^0,c
   781   001338  0E8A               	movlw	138
   782   00133A  6E71               	movwf	??_battary_charging2^0,c
   783   00133C  0E56               	movlw	86
   784   00133E                     u2107:
   785   00133E  2EE8               	decfsz	wreg,f,c
   786   001340  D7FE               	bra	u2107
   787   001342  2E71               	decfsz	??_battary_charging2^0,f,c
   788   001344  D7FC               	bra	u2107
   789   001346  2E72               	decfsz	(??_battary_charging2+1)^0,f,c
   790   001348  D7FA               	bra	u2107
   791                           
   792                           ;Application1.c: 70:         ret = lcd_4bit_send_custom_char_pos(&lcd1,1,20,customChar4,
      +                          0);_delay((unsigned long)((250)*(8000000.0/4000.0)));
   793   00134A  0E48               	movlw	low _lcd1
   794   00134C  6E6A               	movwf	lcd_4bit_send_custom_char_pos@lcd^0,c
   795   00134E  0E01               	movlw	1
   796   001350  6E6B               	movwf	lcd_4bit_send_custom_char_pos@row^0,c
   797   001352  0E14               	movlw	20
   798   001354  6E6C               	movwf	lcd_4bit_send_custom_char_pos@column^0,c
   799   001356  0E28               	movlw	low _customChar4
   800   001358  6E6D               	movwf	lcd_4bit_send_custom_char_pos@_char^0,c
   801   00135A  0E00               	movlw	0
   802   00135C  6E6E               	movwf	lcd_4bit_send_custom_char_pos@mem_pos^0,c
   803   00135E  ECAB  F00B         	call	_lcd_4bit_send_custom_char_pos	;wreg free
   804   001362  6E74               	movwf	_ret^0,c
   805   001364  0E03               	movlw	3
   806   001366  6E72               	movwf	(??_battary_charging2+1)^0,c
   807   001368  0E8A               	movlw	138
   808   00136A  6E71               	movwf	??_battary_charging2^0,c
   809   00136C  0E56               	movlw	86
   810   00136E                     u2117:
   811   00136E  2EE8               	decfsz	wreg,f,c
   812   001370  D7FE               	bra	u2117
   813   001372  2E71               	decfsz	??_battary_charging2^0,f,c
   814   001374  D7FC               	bra	u2117
   815   001376  2E72               	decfsz	(??_battary_charging2+1)^0,f,c
   816   001378  D7FA               	bra	u2117
   817   00137A                     
   818                           ;Application1.c: 71:         ret = lcd_4bit_send_custom_char_pos(&lcd1,1,20,customChar5,
      +                          0);_delay((unsigned long)((250)*(8000000.0/4000.0)));
   819   00137A  0E48               	movlw	low _lcd1
   820   00137C  6E6A               	movwf	lcd_4bit_send_custom_char_pos@lcd^0,c
   821   00137E  0E01               	movlw	1
   822   001380  6E6B               	movwf	lcd_4bit_send_custom_char_pos@row^0,c
   823   001382  0E14               	movlw	20
   824   001384  6E6C               	movwf	lcd_4bit_send_custom_char_pos@column^0,c
   825   001386  0E20               	movlw	low _customChar5
   826   001388  6E6D               	movwf	lcd_4bit_send_custom_char_pos@_char^0,c
   827   00138A  0E00               	movlw	0
   828   00138C  6E6E               	movwf	lcd_4bit_send_custom_char_pos@mem_pos^0,c
   829   00138E  ECAB  F00B         	call	_lcd_4bit_send_custom_char_pos	;wreg free
   830   001392  6E74               	movwf	_ret^0,c
   831   001394  0E03               	movlw	3
   832   001396  6E72               	movwf	(??_battary_charging2+1)^0,c
   833   001398  0E8A               	movlw	138
   834   00139A  6E71               	movwf	??_battary_charging2^0,c
   835   00139C  0E56               	movlw	86
   836   00139E                     u2127:
   837   00139E  2EE8               	decfsz	wreg,f,c
   838   0013A0  D7FE               	bra	u2127
   839   0013A2  2E71               	decfsz	??_battary_charging2^0,f,c
   840   0013A4  D7FC               	bra	u2127
   841   0013A6  2E72               	decfsz	(??_battary_charging2+1)^0,f,c
   842   0013A8  D7FA               	bra	u2127
   843   0013AA                     
   844                           ;Application1.c: 72:         ret = lcd_4bit_send_custom_char_pos(&lcd1,1,20,customChar6,
      +                          0);_delay((unsigned long)((250)*(8000000.0/4000.0)));
   845   0013AA  0E48               	movlw	low _lcd1
   846   0013AC  6E6A               	movwf	lcd_4bit_send_custom_char_pos@lcd^0,c
   847   0013AE  0E01               	movlw	1
   848   0013B0  6E6B               	movwf	lcd_4bit_send_custom_char_pos@row^0,c
   849   0013B2  0E14               	movlw	20
   850   0013B4  6E6C               	movwf	lcd_4bit_send_custom_char_pos@column^0,c
   851   0013B6  0E92               	movlw	low _customChar6
   852   0013B8  6E6D               	movwf	lcd_4bit_send_custom_char_pos@_char^0,c
   853   0013BA  0E00               	movlw	0
   854   0013BC  6E6E               	movwf	lcd_4bit_send_custom_char_pos@mem_pos^0,c
   855   0013BE  ECAB  F00B         	call	_lcd_4bit_send_custom_char_pos	;wreg free
   856   0013C2  6E74               	movwf	_ret^0,c
   857   0013C4  0E03               	movlw	3
   858   0013C6  6E72               	movwf	(??_battary_charging2+1)^0,c
   859   0013C8  0E8A               	movlw	138
   860   0013CA  6E71               	movwf	??_battary_charging2^0,c
   861   0013CC  0E56               	movlw	86
   862   0013CE                     u2137:
   863   0013CE  2EE8               	decfsz	wreg,f,c
   864   0013D0  D7FE               	bra	u2137
   865   0013D2  2E71               	decfsz	??_battary_charging2^0,f,c
   866   0013D4  D7FC               	bra	u2137
   867   0013D6  2E72               	decfsz	(??_battary_charging2+1)^0,f,c
   868   0013D8  D7FA               	bra	u2137
   869   0013DA                     
   870                           ;Application1.c: 73:     }
   871   0013DA  2A73               	incf	battary_charging2@l_lcd1_counter^0,f,c
   872   0013DC  0E08               	movlw	8
   873   0013DE  6473               	cpfsgt	battary_charging2@l_lcd1_counter^0,c
   874   0013E0  EFF4  F009         	goto	u1521
   875   0013E4  EFF6  F009         	goto	u1520
   876   0013E8                     u1521:
   877   0013E8  EF5D  F009         	goto	l2489
   878   0013EC                     u1520:
   879   0013EC  0012               	return		;funcret
   880   0013EE                     __end_of_battary_charging2:
   881                           	callstack 0
   882                           
   883 ;; *************** function _lcd_4bit_send_custom_char_pos *****************
   884 ;; Defined at:
   885 ;;		line 211 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;  lcd             1   28[COMRAM] PTR const struct .
   888 ;;		 -> lcd1(6), 
   889 ;;  row             1   29[COMRAM] unsigned char 
   890 ;;  column          1   30[COMRAM] unsigned char 
   891 ;;  _char           1   31[COMRAM] PTR const unsigned char 
   892 ;;		 -> customChar6(8), customChar5(8), customChar4(8), customChar3(8), 
   893 ;;		 -> customChar2(8), customChar1(8), 
   894 ;;  mem_pos         1   32[COMRAM] unsigned char 
   895 ;; Auto vars:     Size  Location     Type
   896 ;;  lcd_counter     1   34[COMRAM] unsigned char 
   897 ;;  ret             1   33[COMRAM] unsigned char 
   898 ;; Return value:  Size  Location     Type
   899 ;;                  1    wreg      unsigned char 
   900 ;; Registers used:
   901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   907 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   908 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   910 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   911 ;;Total ram usage:        7 bytes
   912 ;; Hardware stack levels used: 1
   913 ;; Hardware stack levels required when called: 5
   914 ;; This function calls:
   915 ;;		_lcd_4bit_send_char_data
   916 ;;		_lcd_4bit_send_char_data_pos
   917 ;;		_lcd_4bit_send_command
   918 ;; This function is called by:
   919 ;;		_battary_charging2
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           	psect	text2
   924   001756                     __ptext2:
   925                           	callstack 0
   926   001756                     _lcd_4bit_send_custom_char_pos:
   927                           	callstack 24
   928   001756                     
   929                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 215:     uint8 lcd_counter = 0;
   930   001756  0E00               	movlw	0
   931   001758  6E70               	movwf	lcd_4bit_send_custom_char_pos@lcd_counter^0,c
   932                           
   933                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 216:     if(lcd != ((void*)0))
   934   00175A  506A               	movf	lcd_4bit_send_custom_char_pos@lcd^0,w,c
   935   00175C  B4D8               	btfsc	status,2,c
   936   00175E  EFB3  F00B         	goto	u1501
   937   001762  EFB5  F00B         	goto	u1500
   938   001766                     u1501:
   939   001766  EFE0  F00B         	goto	l2479
   940   00176A                     u1500:
   941   00176A  C06A  F05C         	movff	lcd_4bit_send_custom_char_pos@lcd,lcd_4bit_send_command@lcd
   942   00176E  506E               	movf	lcd_4bit_send_custom_char_pos@mem_pos^0,w,c
   943   001770  0D08               	mullw	8
   944   001772  50F3               	movf	243,w,c
   945   001774  0F40               	addlw	64
   946   001776  6E5D               	movwf	lcd_4bit_send_command@command^0,c
   947   001778  EC43  F00C         	call	_lcd_4bit_send_command	;wreg free
   948   00177C                     
   949                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 219:         for(lcd_counter = 0 ; lcd_counter<=7 ; lc
      +                          d_counter++)
   950   00177C  0E00               	movlw	0
   951   00177E  6E70               	movwf	lcd_4bit_send_custom_char_pos@lcd_counter^0,c
   952   001780                     l2471:
   953   001780  C06A  F05C         	movff	lcd_4bit_send_custom_char_pos@lcd,lcd_4bit_send_char_data@lcd
   954   001784  506D               	movf	lcd_4bit_send_custom_char_pos@_char^0,w,c
   955   001786  2470               	addwf	lcd_4bit_send_custom_char_pos@lcd_counter^0,w,c
   956   001788  6ED9               	movwf	fsr2l,c
   957   00178A  6ADA               	clrf	fsr2h,c
   958   00178C  50DF               	movf	indf2,w,c
   959   00178E  6E5D               	movwf	lcd_4bit_send_char_data@data^0,c
   960   001790  EC15  F00C         	call	_lcd_4bit_send_char_data	;wreg free
   961   001794                     
   962                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 222:         }
   963   001794  2A70               	incf	lcd_4bit_send_custom_char_pos@lcd_counter^0,f,c
   964   001796  0E07               	movlw	7
   965   001798  6470               	cpfsgt	lcd_4bit_send_custom_char_pos@lcd_counter^0,c
   966   00179A  EFD1  F00B         	goto	u1511
   967   00179E  EFD3  F00B         	goto	u1510
   968   0017A2                     u1511:
   969   0017A2  EFC0  F00B         	goto	l2471
   970   0017A6                     u1510:
   971   0017A6                     
   972                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 223:         ret = lcd_4bit_send_char_data_pos(lcd,row
      +                          ,column,mem_pos);
   973   0017A6  C06A  F065         	movff	lcd_4bit_send_custom_char_pos@lcd,lcd_4bit_send_char_data_pos@lcd
   974   0017AA  C06B  F066         	movff	lcd_4bit_send_custom_char_pos@row,lcd_4bit_send_char_data_pos@row
   975   0017AE  C06C  F067         	movff	lcd_4bit_send_custom_char_pos@column,lcd_4bit_send_char_data_pos@column
   976   0017B2  C06E  F068         	movff	lcd_4bit_send_custom_char_pos@mem_pos,lcd_4bit_send_char_data_pos@data
   977   0017B6  EC01  F00D         	call	_lcd_4bit_send_char_data_pos	;wreg free
   978   0017BA  6E6F               	movwf	lcd_4bit_send_custom_char_pos@ret^0,c
   979                           
   980                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 224:     }
   981   0017BC  EFE2  F00B         	goto	l403
   982   0017C0                     l2479:
   983   0017C0  0E00               	movlw	0
   984   0017C2  6E6F               	movwf	lcd_4bit_send_custom_char_pos@ret^0,c
   985   0017C4                     l403:
   986                           
   987                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 227:     return ret;
   988   0017C4  506F               	movf	lcd_4bit_send_custom_char_pos@ret^0,w,c
   989   0017C6  0012               	return		;funcret
   990   0017C8                     __end_of_lcd_4bit_send_custom_char_pos:
   991                           	callstack 0
   992                           
   993 ;; *************** function _lcd_4bit_send_char_data_pos *****************
   994 ;; Defined at:
   995 ;;		line 141 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;  lcd             1   23[COMRAM] PTR const struct .
   998 ;;		 -> lcd1(6), 
   999 ;;  row             1   24[COMRAM] unsigned char 
  1000 ;;  column          1   25[COMRAM] unsigned char 
  1001 ;;  data            1   26[COMRAM] unsigned char 
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;  ret             1   27[COMRAM] unsigned char 
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  1    wreg      unsigned char 
  1006 ;; Registers used:
  1007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1013 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1014 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1016 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1017 ;;Total ram usage:        5 bytes
  1018 ;; Hardware stack levels used: 1
  1019 ;; Hardware stack levels required when called: 4
  1020 ;; This function calls:
  1021 ;;		_lcd_4bit_send_char_data
  1022 ;;		_lcd_4bit_set_cursor
  1023 ;; This function is called by:
  1024 ;;		_lcd_4bit_send_custom_char_pos
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           	psect	text3
  1029   001A02                     __ptext3:
  1030                           	callstack 0
  1031   001A02                     _lcd_4bit_send_char_data_pos:
  1032                           	callstack 24
  1033   001A02                     
  1034                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 144:     if(lcd != ((void*)0))
  1035   001A02  5065               	movf	lcd_4bit_send_char_data_pos@lcd^0,w,c
  1036   001A04  B4D8               	btfsc	status,2,c
  1037   001A06  EF07  F00D         	goto	u1461
  1038   001A0A  EF09  F00D         	goto	u1460
  1039   001A0E                     u1461:
  1040   001A0E  EF1B  F00D         	goto	l2427
  1041   001A12                     u1460:
  1042   001A12                     
  1043                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 145:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 146:      
      +                             ret = lcd_4bit_set_cursor(lcd,row,column);
  1044   001A12  C065  F05F         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_set_cursor@lcd
  1045   001A16  C066  F060         	movff	lcd_4bit_send_char_data_pos@row,lcd_4bit_set_cursor@row
  1046   001A1A  C067  F061         	movff	lcd_4bit_send_char_data_pos@column,lcd_4bit_set_cursor@column
  1047   001A1E  ECDD  F00A         	call	_lcd_4bit_set_cursor	;wreg free
  1048   001A22  6E69               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  1049                           
  1050                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 147:         ret = lcd_4bit_send_char_data(lcd,data);
  1051   001A24  C065  F05C         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_send_char_data@lcd
  1052   001A28  C068  F05D         	movff	lcd_4bit_send_char_data_pos@data,lcd_4bit_send_char_data@data
  1053   001A2C  EC15  F00C         	call	_lcd_4bit_send_char_data	;wreg free
  1054   001A30  6E69               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  1055                           
  1056                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 148:     }
  1057   001A32  EF1D  F00D         	goto	l383
  1058   001A36                     l2427:
  1059   001A36  0E00               	movlw	0
  1060   001A38  6E69               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  1061   001A3A                     l383:
  1062                           
  1063                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 151:     return ret;
  1064   001A3A  5069               	movf	lcd_4bit_send_char_data_pos@ret^0,w,c
  1065   001A3C  0012               	return		;funcret
  1066   001A3E                     __end_of_lcd_4bit_send_char_data_pos:
  1067                           	callstack 0
  1068                           
  1069 ;; *************** function _lcd_4bit_set_cursor *****************
  1070 ;; Defined at:
  1071 ;;		line 546 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;  lcd             1   17[COMRAM] PTR const struct .
  1074 ;;		 -> lcd1(6), 
  1075 ;;  row             1   18[COMRAM] unsigned char 
  1076 ;;  column          1   19[COMRAM] unsigned char 
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;  ret             1   22[COMRAM] unsigned char 
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      unsigned char 
  1081 ;; Registers used:
  1082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1088 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1089 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1090 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1091 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1092 ;;Total ram usage:        6 bytes
  1093 ;; Hardware stack levels used: 1
  1094 ;; Hardware stack levels required when called: 3
  1095 ;; This function calls:
  1096 ;;		_lcd_4bit_send_command
  1097 ;; This function is called by:
  1098 ;;		_lcd_4bit_send_char_data_pos
  1099 ;;		_lcd_4bit_send_string_pos
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           	psect	text4
  1104   0015BA                     __ptext4:
  1105                           	callstack 0
  1106   0015BA                     _lcd_4bit_set_cursor:
  1107                           	callstack 24
  1108   0015BA                     
  1109                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 546: static Std_ReturnType lcd_4bit_set_cursor(const c
      +                          hr_lcd_4bit_t *lcd,uint8 row,uint8 column);ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 547: {;ECU_L
      +                          ayer/Chr_LCD/ecu_chr_lcd.c: 548:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1110   0015BA  0E01               	movlw	1
  1111   0015BC  6E64               	movwf	lcd_4bit_set_cursor@ret^0,c
  1112                           
  1113                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 549:     if(lcd != ((void*)0))
  1114   0015BE  505F               	movf	lcd_4bit_set_cursor@lcd^0,w,c
  1115   0015C0  B4D8               	btfsc	status,2,c
  1116   0015C2  EFE5  F00A         	goto	u1411
  1117   0015C6  EFE7  F00A         	goto	u1410
  1118   0015CA                     u1411:
  1119   0015CA  EF2F  F00B         	goto	l2331
  1120   0015CE                     u1410:
  1121   0015CE                     
  1122                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 550:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 551:      
      +                             column--;
  1123   0015CE  0661               	decf	lcd_4bit_set_cursor@column^0,f,c
  1124                           
  1125                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 552:         switch (row)
  1126   0015D0  EF12  F00B         	goto	l2329
  1127   0015D4                     l2319:
  1128   0015D4  C05F  F05C         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1129   0015D8  5061               	movf	lcd_4bit_set_cursor@column^0,w,c
  1130   0015DA  0F80               	addlw	128
  1131   0015DC  6E5D               	movwf	lcd_4bit_send_command@command^0,c
  1132   0015DE  EC43  F00C         	call	_lcd_4bit_send_command	;wreg free
  1133   0015E2  6E64               	movwf	lcd_4bit_set_cursor@ret^0,c
  1134   0015E4  EF31  F00B         	goto	l493
  1135   0015E8                     l2321:
  1136   0015E8  C05F  F05C         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1137   0015EC  5061               	movf	lcd_4bit_set_cursor@column^0,w,c
  1138   0015EE  0FC0               	addlw	192
  1139   0015F0  6E5D               	movwf	lcd_4bit_send_command@command^0,c
  1140   0015F2  EC43  F00C         	call	_lcd_4bit_send_command	;wreg free
  1141   0015F6  6E64               	movwf	lcd_4bit_set_cursor@ret^0,c
  1142   0015F8  EF31  F00B         	goto	l493
  1143   0015FC                     l2323:
  1144   0015FC  C05F  F05C         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1145   001600  5061               	movf	lcd_4bit_set_cursor@column^0,w,c
  1146   001602  0F94               	addlw	148
  1147   001604  6E5D               	movwf	lcd_4bit_send_command@command^0,c
  1148   001606  EC43  F00C         	call	_lcd_4bit_send_command	;wreg free
  1149   00160A  6E64               	movwf	lcd_4bit_set_cursor@ret^0,c
  1150   00160C  EF31  F00B         	goto	l493
  1151   001610                     l2325:
  1152   001610  C05F  F05C         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1153   001614  5061               	movf	lcd_4bit_set_cursor@column^0,w,c
  1154   001616  0FD4               	addlw	212
  1155   001618  6E5D               	movwf	lcd_4bit_send_command@command^0,c
  1156   00161A  EC43  F00C         	call	_lcd_4bit_send_command	;wreg free
  1157   00161E  6E64               	movwf	lcd_4bit_set_cursor@ret^0,c
  1158   001620  EF31  F00B         	goto	l493
  1159   001624                     l2329:
  1160   001624  5060               	movf	lcd_4bit_set_cursor@row^0,w,c
  1161   001626  6E62               	movwf	??_lcd_4bit_set_cursor^0,c
  1162   001628  6A63               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
  1163                           
  1164                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1165                           ; Switch size 1, requested type "simple"
  1166                           ; Number of cases is 1, Range of values is 0 to 0
  1167                           ; switch strategies available:
  1168                           ; Name         Instructions Cycles
  1169                           ; simple_byte            4     3 (average)
  1170                           ;	Chosen strategy is simple_byte
  1171   00162A  5063               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
  1172   00162C  0A00               	xorlw	0	; case 0
  1173   00162E  B4D8               	btfsc	status,2,c
  1174   001630  EF1C  F00B         	goto	l3015
  1175   001634  EF31  F00B         	goto	l493
  1176   001638                     l3015:
  1177                           
  1178                           ; Switch size 1, requested type "simple"
  1179                           ; Number of cases is 4, Range of values is 1 to 4
  1180                           ; switch strategies available:
  1181                           ; Name         Instructions Cycles
  1182                           ; simple_byte           13     7 (average)
  1183                           ;	Chosen strategy is simple_byte
  1184   001638  5062               	movf	??_lcd_4bit_set_cursor^0,w,c
  1185   00163A  0A01               	xorlw	1	; case 1
  1186   00163C  B4D8               	btfsc	status,2,c
  1187   00163E  EFEA  F00A         	goto	l2319
  1188   001642  0A03               	xorlw	3	; case 2
  1189   001644  B4D8               	btfsc	status,2,c
  1190   001646  EFF4  F00A         	goto	l2321
  1191   00164A  0A01               	xorlw	1	; case 3
  1192   00164C  B4D8               	btfsc	status,2,c
  1193   00164E  EFFE  F00A         	goto	l2323
  1194   001652  0A07               	xorlw	7	; case 4
  1195   001654  B4D8               	btfsc	status,2,c
  1196   001656  EF08  F00B         	goto	l2325
  1197   00165A  EF31  F00B         	goto	l493
  1198   00165E                     l2331:
  1199   00165E  0E00               	movlw	0
  1200   001660  6E64               	movwf	lcd_4bit_set_cursor@ret^0,c
  1201   001662                     l493:
  1202                           
  1203                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 563:     return ret;
  1204   001662  5064               	movf	lcd_4bit_set_cursor@ret^0,w,c
  1205   001664  0012               	return		;funcret
  1206   001666                     __end_of_lcd_4bit_set_cursor:
  1207                           	callstack 0
  1208                           
  1209 ;; *************** function _lcd_4bit_send_char_data *****************
  1210 ;; Defined at:
  1211 ;;		line 109 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;  lcd             1   14[COMRAM] PTR const struct .
  1214 ;;		 -> lcd1(6), 
  1215 ;;  data            1   15[COMRAM] unsigned char 
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;  ret             1   16[COMRAM] unsigned char 
  1218 ;; Return value:  Size  Location     Type
  1219 ;;                  1    wreg      unsigned char 
  1220 ;; Registers used:
  1221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1222 ;; Tracked objects:
  1223 ;;		On entry : 0/0
  1224 ;;		On exit  : 0/0
  1225 ;;		Unchanged: 0/0
  1226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1227 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1228 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1230 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1231 ;;Total ram usage:        3 bytes
  1232 ;; Hardware stack levels used: 1
  1233 ;; Hardware stack levels required when called: 2
  1234 ;; This function calls:
  1235 ;;		_gpio_pin_write_logic
  1236 ;;		_lcd_4bit_send_enable_signal
  1237 ;;		_lcd_send_4bits
  1238 ;; This function is called by:
  1239 ;;		_lcd_4bit_send_char_data_pos
  1240 ;;		_lcd_4bit_send_custom_char_pos
  1241 ;;		_lcd_4bit_send_string
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           	psect	text5
  1246   00182A                     __ptext5:
  1247                           	callstack 0
  1248   00182A                     _lcd_4bit_send_char_data:
  1249                           	callstack 25
  1250   00182A                     
  1251                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 112:     if(lcd != ((void*)0))
  1252   00182A  505C               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  1253   00182C  B4D8               	btfsc	status,2,c
  1254   00182E  EF1B  F00C         	goto	u1401
  1255   001832  EF1D  F00C         	goto	u1400
  1256   001836                     u1401:
  1257   001836  EF3F  F00C         	goto	l2311
  1258   00183A                     u1400:
  1259   00183A                     
  1260                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 113:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 116:      
      +                             ret = gpio_pin_write_logic(&(lcd->lcd_rs),GPIO_LOGIC_HIGH);
  1261   00183A  C05C  F04E         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  1262   00183E  0E01               	movlw	1
  1263   001840  6E4F               	movwf	gpio_pin_write_logic@logic^0,c
  1264   001842  ECB7  F008         	call	_gpio_pin_write_logic	;wreg free
  1265   001846  6E5E               	movwf	lcd_4bit_send_char_data@ret^0,c
  1266                           
  1267                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 118:         ret = lcd_send_4bits(lcd,data >> 4);
  1268   001848  C05C  F056         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1269   00184C  385D               	swapf	lcd_4bit_send_char_data@data^0,w,c
  1270   00184E  0B0F               	andlw	15
  1271   001850  6E57               	movwf	lcd_send_4bits@_data_command^0,c
  1272   001852  ECE4  F00B         	call	_lcd_send_4bits	;wreg free
  1273   001856  6E5E               	movwf	lcd_4bit_send_char_data@ret^0,c
  1274                           
  1275                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 120:         ret = lcd_4bit_send_enable_signal(lcd);
  1276   001858  C05C  F056         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1277   00185C  ECE2  F00C         	call	_lcd_4bit_send_enable_signal	;wreg free
  1278   001860  6E5E               	movwf	lcd_4bit_send_char_data@ret^0,c
  1279                           
  1280                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 122:         ret = lcd_send_4bits(lcd,data);
  1281   001862  C05C  F056         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1282   001866  C05D  F057         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
  1283   00186A  ECE4  F00B         	call	_lcd_send_4bits	;wreg free
  1284   00186E  6E5E               	movwf	lcd_4bit_send_char_data@ret^0,c
  1285                           
  1286                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 124:         ret = lcd_4bit_send_enable_signal(lcd);
  1287   001870  C05C  F056         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1288   001874  ECE2  F00C         	call	_lcd_4bit_send_enable_signal	;wreg free
  1289   001878  6E5E               	movwf	lcd_4bit_send_char_data@ret^0,c
  1290                           
  1291                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 125:     }
  1292   00187A  EF41  F00C         	goto	l378
  1293   00187E                     l2311:
  1294   00187E  0E00               	movlw	0
  1295   001880  6E5E               	movwf	lcd_4bit_send_char_data@ret^0,c
  1296   001882                     l378:
  1297                           
  1298                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 128:     return ret;
  1299   001882  505E               	movf	lcd_4bit_send_char_data@ret^0,w,c
  1300   001884  0012               	return		;funcret
  1301   001886                     __end_of_lcd_4bit_send_char_data:
  1302                           	callstack 0
  1303                           
  1304 ;; *************** function _application_initialize *****************
  1305 ;; Defined at:
  1306 ;;		line 91 in file "Application1.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;		None
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;  ret_init        1    0        unsigned char 
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  1    wreg      void 
  1313 ;; Registers used:
  1314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1324 ;;Total ram usage:        0 bytes
  1325 ;; Hardware stack levels used: 1
  1326 ;; Hardware stack levels required when called: 5
  1327 ;; This function calls:
  1328 ;;		_ecu_layer_initialize
  1329 ;; This function is called by:
  1330 ;;		_main
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334                           	psect	text6
  1335   001A7E                     __ptext6:
  1336                           	callstack 0
  1337   001A7E                     _application_initialize:
  1338                           	callstack 25
  1339   001A7E  EC2C  F00D         	call	_ecu_layer_initialize	;wreg free
  1340   001A82  0012               	return		;funcret
  1341   001A84                     __end_of_application_initialize:
  1342                           	callstack 0
  1343                           
  1344 ;; *************** function _ecu_layer_initialize *****************
  1345 ;; Defined at:
  1346 ;;		line 134 in file "ECU_Layer/ecu_layer_init.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;		None
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;  ret_init        1   21[COMRAM] unsigned char 
  1351 ;; Return value:  Size  Location     Type
  1352 ;;                  1    wreg      unsigned char 
  1353 ;; Registers used:
  1354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1361 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1363 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1364 ;;Total ram usage:        1 bytes
  1365 ;; Hardware stack levels used: 1
  1366 ;; Hardware stack levels required when called: 4
  1367 ;; This function calls:
  1368 ;;		_lcd_4bit_initialize
  1369 ;;		_lcd_8bit_initialize
  1370 ;; This function is called by:
  1371 ;;		_application_initialize
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           	psect	text7
  1376   001A58                     __ptext7:
  1377                           	callstack 0
  1378   001A58                     _ecu_layer_initialize:
  1379                           	callstack 25
  1380   001A58  0E48               	movlw	low _lcd1
  1381   001A5A  6E5F               	movwf	lcd_4bit_initialize@lcd^0,c
  1382   001A5C  EC6A  F00A         	call	_lcd_4bit_initialize	;wreg free
  1383   001A60                     
  1384                           ;ECU_Layer/ecu_layer_init.c: 138:     ret_init = lcd_8bit_initialize(&lcd2);
  1385   001A60  0E16               	movlw	low _lcd2
  1386   001A62  6E5E               	movwf	lcd_8bit_initialize@lcd^0,c
  1387   001A64  ECF7  F009         	call	_lcd_8bit_initialize	;wreg free
  1388   001A68  6E63               	movwf	ecu_layer_initialize@ret_init^0,c
  1389                           
  1390                           ;ECU_Layer/ecu_layer_init.c: 139:     return ret_init;
  1391   001A6A  5063               	movf	ecu_layer_initialize@ret_init^0,w,c
  1392   001A6C  0012               	return		;funcret
  1393   001A6E                     __end_of_ecu_layer_initialize:
  1394                           	callstack 0
  1395                           
  1396 ;; *************** function _lcd_8bit_initialize *****************
  1397 ;; Defined at:
  1398 ;;		line 238 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;  lcd             1   16[COMRAM] PTR const struct .
  1401 ;;		 -> lcd2(10), 
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;  ret             1   19[COMRAM] unsigned char 
  1404 ;;  l_pins_count    1   18[COMRAM] unsigned char 
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  1    wreg      unsigned char 
  1407 ;; Registers used:
  1408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1414 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1415 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1416 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1417 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1418 ;;Total ram usage:        4 bytes
  1419 ;; Hardware stack levels used: 1
  1420 ;; Hardware stack levels required when called: 3
  1421 ;; This function calls:
  1422 ;;		_gpio_pin_initialize
  1423 ;;		_lcd_8bit_send_command
  1424 ;; This function is called by:
  1425 ;;		_ecu_layer_initialize
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           	psect	text8
  1430   0013EE                     __ptext8:
  1431                           	callstack 0
  1432   0013EE                     _lcd_8bit_initialize:
  1433                           	callstack 25
  1434   0013EE                     
  1435                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 241:     uint8 l_pins_counter = 0;
  1436   0013EE  0E00               	movlw	0
  1437   0013F0  6E60               	movwf	lcd_8bit_initialize@l_pins_counter^0,c
  1438                           
  1439                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 242:     if(lcd != ((void*)0))
  1440   0013F2  505E               	movf	lcd_8bit_initialize@lcd^0,w,c
  1441   0013F4  B4D8               	btfsc	status,2,c
  1442   0013F6  EFFF  F009         	goto	u1441
  1443   0013FA  EF01  F00A         	goto	u1440
  1444   0013FE                     u1441:
  1445   0013FE  EF66  F00A         	goto	l2419
  1446   001402                     u1440:
  1447   001402                     
  1448                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 243:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 244:      
      +                             ret = gpio_pin_initialize(&(lcd->lcd_rs));
  1449   001402  C05E  F056         	movff	lcd_8bit_initialize@lcd,gpio_pin_initialize@_pin_config
  1450   001406  EC33  F00B         	call	_gpio_pin_initialize	;wreg free
  1451   00140A  6E61               	movwf	lcd_8bit_initialize@ret^0,c
  1452                           
  1453                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 245:         ret = gpio_pin_initialize(&(lcd->lcd_en))
      +                          ;
  1454   00140C  285E               	incf	lcd_8bit_initialize@lcd^0,w,c
  1455   00140E  6E56               	movwf	gpio_pin_initialize@_pin_config^0,c
  1456   001410  EC33  F00B         	call	_gpio_pin_initialize	;wreg free
  1457   001414  6E61               	movwf	lcd_8bit_initialize@ret^0,c
  1458   001416                     
  1459                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 246:         for(l_pins_counter = 0 ; l_pins_counter<8
      +                           ; l_pins_counter++)
  1460   001416  0E00               	movlw	0
  1461   001418  6E60               	movwf	lcd_8bit_initialize@l_pins_counter^0,c
  1462   00141A                     l2391:
  1463   00141A  505E               	movf	lcd_8bit_initialize@lcd^0,w,c
  1464   00141C  2460               	addwf	lcd_8bit_initialize@l_pins_counter^0,w,c
  1465   00141E  0F02               	addlw	2
  1466   001420  6E56               	movwf	gpio_pin_initialize@_pin_config^0,c
  1467   001422  EC33  F00B         	call	_gpio_pin_initialize	;wreg free
  1468   001426                     
  1469                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 249:         }
  1470   001426  2A60               	incf	lcd_8bit_initialize@l_pins_counter^0,f,c
  1471   001428  0E07               	movlw	7
  1472   00142A  6460               	cpfsgt	lcd_8bit_initialize@l_pins_counter^0,c
  1473   00142C  EF1A  F00A         	goto	u1451
  1474   001430  EF1C  F00A         	goto	u1450
  1475   001434                     u1451:
  1476   001434  EF0D  F00A         	goto	l2391
  1477   001438                     u1450:
  1478   001438                     
  1479                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 251:         _delay((unsigned long)((20)*(8000000.0/40
      +                          00.0)));
  1480   001438  0E34               	movlw	52
  1481   00143A  6E5F               	movwf	??_lcd_8bit_initialize^0,c
  1482   00143C  0EF2               	movlw	242
  1483   00143E                     u2147:
  1484   00143E  2EE8               	decfsz	wreg,f,c
  1485   001440  D7FE               	bra	u2147
  1486   001442  2E5F               	decfsz	??_lcd_8bit_initialize^0,f,c
  1487   001444  D7FC               	bra	u2147
  1488   001446  C05E  F058         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1489   00144A  0E38               	movlw	56
  1490   00144C  6E59               	movwf	lcd_8bit_send_command@command^0,c
  1491   00144E  EC70  F00B         	call	_lcd_8bit_send_command	;wreg free
  1492   001452                     
  1493                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 254:         _delay((unsigned long)((5)*(8000000.0/400
      +                          0.0)));
  1494   001452  0E0D               	movlw	13
  1495   001454  6E5F               	movwf	??_lcd_8bit_initialize^0,c
  1496   001456  0EFC               	movlw	252
  1497   001458                     u2157:
  1498   001458  2EE8               	decfsz	wreg,f,c
  1499   00145A  D7FE               	bra	u2157
  1500   00145C  2E5F               	decfsz	??_lcd_8bit_initialize^0,f,c
  1501   00145E  D7FC               	bra	u2157
  1502   001460  C05E  F058         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1503   001464  0E38               	movlw	56
  1504   001466  6E59               	movwf	lcd_8bit_send_command@command^0,c
  1505   001468  EC70  F00B         	call	_lcd_8bit_send_command	;wreg free
  1506   00146C                     
  1507                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 256:         _delay((unsigned long)((150)*(8000000.0/4
      +                          000000.0)));
  1508   00146C  0E64               	movlw	100
  1509   00146E                     u2167:
  1510   00146E  2EE8               	decfsz	wreg,f,c
  1511   001470  D7FE               	bra	u2167
  1512   001472  C05E  F058         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1513   001476  0E38               	movlw	56
  1514   001478  6E59               	movwf	lcd_8bit_send_command@command^0,c
  1515   00147A  EC70  F00B         	call	_lcd_8bit_send_command	;wreg free
  1516   00147E  C05E  F058         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1517   001482  0E01               	movlw	1
  1518   001484  6E59               	movwf	lcd_8bit_send_command@command^0,c
  1519   001486  EC70  F00B         	call	_lcd_8bit_send_command	;wreg free
  1520   00148A  C05E  F058         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1521   00148E  0E02               	movlw	2
  1522   001490  6E59               	movwf	lcd_8bit_send_command@command^0,c
  1523   001492  EC70  F00B         	call	_lcd_8bit_send_command	;wreg free
  1524   001496  C05E  F058         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1525   00149A  0E06               	movlw	6
  1526   00149C  6E59               	movwf	lcd_8bit_send_command@command^0,c
  1527   00149E  EC70  F00B         	call	_lcd_8bit_send_command	;wreg free
  1528   0014A2  C05E  F058         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1529   0014A6  0E0C               	movlw	12
  1530   0014A8  6E59               	movwf	lcd_8bit_send_command@command^0,c
  1531   0014AA  EC70  F00B         	call	_lcd_8bit_send_command	;wreg free
  1532   0014AE  C05E  F058         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1533   0014B2  0E38               	movlw	56
  1534   0014B4  6E59               	movwf	lcd_8bit_send_command@command^0,c
  1535   0014B6  EC70  F00B         	call	_lcd_8bit_send_command	;wreg free
  1536   0014BA                     
  1537                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 269:         ret = lcd_8bit_send_command(lcd,0x80);
  1538   0014BA  C05E  F058         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1539   0014BE  0E80               	movlw	128
  1540   0014C0  6E59               	movwf	lcd_8bit_send_command@command^0,c
  1541   0014C2  EC70  F00B         	call	_lcd_8bit_send_command	;wreg free
  1542   0014C6  6E61               	movwf	lcd_8bit_initialize@ret^0,c
  1543                           
  1544                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 271:     }
  1545   0014C8  EF68  F00A         	goto	l410
  1546   0014CC                     l2419:
  1547   0014CC  0E00               	movlw	0
  1548   0014CE  6E61               	movwf	lcd_8bit_initialize@ret^0,c
  1549   0014D0                     l410:
  1550                           
  1551                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 274:     return ret;
  1552   0014D0  5061               	movf	lcd_8bit_initialize@ret^0,w,c
  1553   0014D2  0012               	return		;funcret
  1554   0014D4                     __end_of_lcd_8bit_initialize:
  1555                           	callstack 0
  1556                           
  1557 ;; *************** function _lcd_8bit_send_command *****************
  1558 ;; Defined at:
  1559 ;;		line 285 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;  lcd             1   10[COMRAM] PTR const struct .
  1562 ;;		 -> lcd2(10), 
  1563 ;;  command         1   11[COMRAM] unsigned char 
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;  l_pins_count    1   15[COMRAM] unsigned char 
  1566 ;;  ret             1   14[COMRAM] unsigned char 
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  1    wreg      unsigned char 
  1569 ;; Registers used:
  1570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1576 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1577 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1578 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1579 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1580 ;;Total ram usage:        6 bytes
  1581 ;; Hardware stack levels used: 1
  1582 ;; Hardware stack levels required when called: 2
  1583 ;; This function calls:
  1584 ;;		_gpio_pin_write_logic
  1585 ;;		_lcd_8bit_send_enable_signal
  1586 ;; This function is called by:
  1587 ;;		_lcd_8bit_initialize
  1588 ;;		_loading_screen
  1589 ;;		_lcd_8bit_send_custom_char_pos
  1590 ;;		_lcd_8bit_set_cursor
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text9
  1595   0016E0                     __ptext9:
  1596                           	callstack 0
  1597   0016E0                     _lcd_8bit_send_command:
  1598                           	callstack 25
  1599   0016E0                     
  1600                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 288:     uint8 l_pins_counter = 0 ;
  1601   0016E0  0E00               	movlw	0
  1602   0016E2  6E5D               	movwf	lcd_8bit_send_command@l_pins_counter^0,c
  1603                           
  1604                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 289:     if(lcd != ((void*)0))
  1605   0016E4  5058               	movf	lcd_8bit_send_command@lcd^0,w,c
  1606   0016E6  B4D8               	btfsc	status,2,c
  1607   0016E8  EF78  F00B         	goto	u1371
  1608   0016EC  EF7A  F00B         	goto	u1370
  1609   0016F0                     u1371:
  1610   0016F0  EFA7  F00B         	goto	l2303
  1611   0016F4                     u1370:
  1612   0016F4  C058  F04E         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  1613   0016F8  0E00               	movlw	0
  1614   0016FA  6E4F               	movwf	gpio_pin_write_logic@logic^0,c
  1615   0016FC  ECB7  F008         	call	_gpio_pin_write_logic	;wreg free
  1616   001700                     
  1617                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 295:         for(l_pins_counter = 0 ; l_pins_counter<8
      +                           ; l_pins_counter++)
  1618   001700  0E00               	movlw	0
  1619   001702  6E5D               	movwf	lcd_8bit_send_command@l_pins_counter^0,c
  1620   001704                     l2295:
  1621   001704  5058               	movf	lcd_8bit_send_command@lcd^0,w,c
  1622   001706  245D               	addwf	lcd_8bit_send_command@l_pins_counter^0,w,c
  1623   001708  0F02               	addlw	2
  1624   00170A  6E4E               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1625   00170C  C05D  F05A         	movff	lcd_8bit_send_command@l_pins_counter,??_lcd_8bit_send_command
  1626   001710  C059  F05B         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  1627   001714  2A5A               	incf	??_lcd_8bit_send_command^0,f,c
  1628   001716  EF8F  F00B         	goto	u1384
  1629   00171A                     u1385:
  1630   00171A  90D8               	bcf	status,0,c
  1631   00171C  325B               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  1632   00171E                     u1384:
  1633   00171E  2E5A               	decfsz	??_lcd_8bit_send_command^0,f,c
  1634   001720  EF8D  F00B         	goto	u1385
  1635   001724  505B               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  1636   001726  0B01               	andlw	1
  1637   001728  6E4F               	movwf	gpio_pin_write_logic@logic^0,c
  1638   00172A  ECB7  F008         	call	_gpio_pin_write_logic	;wreg free
  1639   00172E                     
  1640                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 298:         }
  1641   00172E  2A5D               	incf	lcd_8bit_send_command@l_pins_counter^0,f,c
  1642   001730  0E07               	movlw	7
  1643   001732  645D               	cpfsgt	lcd_8bit_send_command@l_pins_counter^0,c
  1644   001734  EF9E  F00B         	goto	u1391
  1645   001738  EFA0  F00B         	goto	u1390
  1646   00173C                     u1391:
  1647   00173C  EF82  F00B         	goto	l2295
  1648   001740                     u1390:
  1649   001740                     
  1650                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 300:         ret = lcd_8bit_send_enable_signal(lcd);
  1651   001740  C058  F056         	movff	lcd_8bit_send_command@lcd,lcd_8bit_send_enable_signal@lcd
  1652   001744  ECC3  F00C         	call	_lcd_8bit_send_enable_signal	;wreg free
  1653   001748  6E5C               	movwf	lcd_8bit_send_command@ret^0,c
  1654                           
  1655                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 301:     }
  1656   00174A  EFA9  F00B         	goto	l417
  1657   00174E                     l2303:
  1658   00174E  0E00               	movlw	0
  1659   001750  6E5C               	movwf	lcd_8bit_send_command@ret^0,c
  1660   001752                     l417:
  1661                           
  1662                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 304:     return ret;
  1663   001752  505C               	movf	lcd_8bit_send_command@ret^0,w,c
  1664   001754  0012               	return		;funcret
  1665   001756                     __end_of_lcd_8bit_send_command:
  1666                           	callstack 0
  1667                           
  1668 ;; *************** function _lcd_8bit_send_enable_signal *****************
  1669 ;; Defined at:
  1670 ;;		line 532 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;  lcd             1    8[COMRAM] PTR const struct .
  1673 ;;		 -> lcd2(10), 
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  ret             1    9[COMRAM] unsigned char 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      unsigned char 
  1678 ;; Registers used:
  1679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1685 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1688 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1689 ;;Total ram usage:        2 bytes
  1690 ;; Hardware stack levels used: 1
  1691 ;; Hardware stack levels required when called: 1
  1692 ;; This function calls:
  1693 ;;		_gpio_pin_write_logic
  1694 ;; This function is called by:
  1695 ;;		_lcd_8bit_send_command
  1696 ;;		_lcd_8bit_send_char_data
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text10
  1701   001986                     __ptext10:
  1702                           	callstack 0
  1703   001986                     _lcd_8bit_send_enable_signal:
  1704                           	callstack 25
  1705   001986                     
  1706                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 535:     if(lcd != ((void*)0))
  1707   001986  5056               	movf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1708   001988  B4D8               	btfsc	status,2,c
  1709   00198A  EFC9  F00C         	goto	u1331
  1710   00198E  EFCB  F00C         	goto	u1330
  1711   001992                     u1331:
  1712   001992  EFDE  F00C         	goto	l2269
  1713   001996                     u1330:
  1714   001996  2856               	incf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1715   001998  6E4E               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1716   00199A  0E01               	movlw	1
  1717   00199C  6E4F               	movwf	gpio_pin_write_logic@logic^0,c
  1718   00199E  ECB7  F008         	call	_gpio_pin_write_logic	;wreg free
  1719   0019A2                     
  1720                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 538:         _delay((unsigned long)((5)*(8000000.0/400
      +                          0000.0)));
  1721   0019A2  0E03               	movlw	3
  1722   0019A4                     u2177:
  1723   0019A4  2EE8               	decfsz	wreg,f,c
  1724   0019A6  D7FE               	bra	u2177
  1725   0019A8  0000               	nop	
  1726   0019AA                     
  1727                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 539:         ret = gpio_pin_write_logic(&(lcd->lcd_en)
      +                          ,GPIO_LOGIC_LOW);
  1728   0019AA  2856               	incf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1729   0019AC  6E4E               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1730   0019AE  0E00               	movlw	0
  1731   0019B0  6E4F               	movwf	gpio_pin_write_logic@logic^0,c
  1732   0019B2  ECB7  F008         	call	_gpio_pin_write_logic	;wreg free
  1733   0019B6  6E57               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  1734                           
  1735                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 540:     }
  1736   0019B8  EFE0  F00C         	goto	l481
  1737   0019BC                     l2269:
  1738   0019BC  0E00               	movlw	0
  1739   0019BE  6E57               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  1740   0019C0                     l481:
  1741                           
  1742                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 543:     return ret;
  1743   0019C0  5057               	movf	lcd_8bit_send_enable_signal@ret^0,w,c
  1744   0019C2  0012               	return		;funcret
  1745   0019C4                     __end_of_lcd_8bit_send_enable_signal:
  1746                           	callstack 0
  1747                           
  1748 ;; *************** function _lcd_4bit_initialize *****************
  1749 ;; Defined at:
  1750 ;;		line 32 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;  lcd             1   17[COMRAM] PTR const struct .
  1753 ;;		 -> lcd1(6), 
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;  ret             1   20[COMRAM] unsigned char 
  1756 ;;  l_pins_count    1   19[COMRAM] unsigned char 
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  1    wreg      unsigned char 
  1759 ;; Registers used:
  1760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1766 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1767 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1768 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1769 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1770 ;;Total ram usage:        4 bytes
  1771 ;; Hardware stack levels used: 1
  1772 ;; Hardware stack levels required when called: 3
  1773 ;; This function calls:
  1774 ;;		_gpio_pin_initialize
  1775 ;;		_lcd_4bit_send_command
  1776 ;; This function is called by:
  1777 ;;		_ecu_layer_initialize
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           	psect	text11
  1782   0014D4                     __ptext11:
  1783                           	callstack 0
  1784   0014D4                     _lcd_4bit_initialize:
  1785                           	callstack 25
  1786   0014D4                     
  1787                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 35:     uint8 l_pins_counter = 0;
  1788   0014D4  0E00               	movlw	0
  1789   0014D6  6E61               	movwf	lcd_4bit_initialize@l_pins_counter^0,c
  1790                           
  1791                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 36:     if(lcd != ((void*)0))
  1792   0014D8  505F               	movf	lcd_4bit_initialize@lcd^0,w,c
  1793   0014DA  B4D8               	btfsc	status,2,c
  1794   0014DC  EF72  F00A         	goto	u1421
  1795   0014E0  EF74  F00A         	goto	u1420
  1796   0014E4                     u1421:
  1797   0014E4  EFD9  F00A         	goto	l2377
  1798   0014E8                     u1420:
  1799   0014E8                     
  1800                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 37:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 38:        
      +                           ret = gpio_pin_initialize(&(lcd->lcd_rs));
  1801   0014E8  C05F  F056         	movff	lcd_4bit_initialize@lcd,gpio_pin_initialize@_pin_config
  1802   0014EC  EC33  F00B         	call	_gpio_pin_initialize	;wreg free
  1803   0014F0  6E62               	movwf	lcd_4bit_initialize@ret^0,c
  1804                           
  1805                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 39:         ret = gpio_pin_initialize(&(lcd->lcd_en));
  1806   0014F2  285F               	incf	lcd_4bit_initialize@lcd^0,w,c
  1807   0014F4  6E56               	movwf	gpio_pin_initialize@_pin_config^0,c
  1808   0014F6  EC33  F00B         	call	_gpio_pin_initialize	;wreg free
  1809   0014FA  6E62               	movwf	lcd_4bit_initialize@ret^0,c
  1810   0014FC                     
  1811                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 40:         for(l_pins_counter = 0 ; l_pins_counter<4 
      +                          ; l_pins_counter++)
  1812   0014FC  0E00               	movlw	0
  1813   0014FE  6E61               	movwf	lcd_4bit_initialize@l_pins_counter^0,c
  1814   001500                     l2349:
  1815   001500  505F               	movf	lcd_4bit_initialize@lcd^0,w,c
  1816   001502  2461               	addwf	lcd_4bit_initialize@l_pins_counter^0,w,c
  1817   001504  0F02               	addlw	2
  1818   001506  6E56               	movwf	gpio_pin_initialize@_pin_config^0,c
  1819   001508  EC33  F00B         	call	_gpio_pin_initialize	;wreg free
  1820   00150C                     
  1821                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 43:         }
  1822   00150C  2A61               	incf	lcd_4bit_initialize@l_pins_counter^0,f,c
  1823   00150E  0E03               	movlw	3
  1824   001510  6461               	cpfsgt	lcd_4bit_initialize@l_pins_counter^0,c
  1825   001512  EF8D  F00A         	goto	u1431
  1826   001516  EF8F  F00A         	goto	u1430
  1827   00151A                     u1431:
  1828   00151A  EF80  F00A         	goto	l2349
  1829   00151E                     u1430:
  1830   00151E                     
  1831                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 45:         _delay((unsigned long)((20)*(8000000.0/400
      +                          0.0)));
  1832   00151E  0E34               	movlw	52
  1833   001520  6E60               	movwf	??_lcd_4bit_initialize^0,c
  1834   001522  0EF2               	movlw	242
  1835   001524                     u2187:
  1836   001524  2EE8               	decfsz	wreg,f,c
  1837   001526  D7FE               	bra	u2187
  1838   001528  2E60               	decfsz	??_lcd_4bit_initialize^0,f,c
  1839   00152A  D7FC               	bra	u2187
  1840   00152C  C05F  F05C         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1841   001530  0E38               	movlw	56
  1842   001532  6E5D               	movwf	lcd_4bit_send_command@command^0,c
  1843   001534  EC43  F00C         	call	_lcd_4bit_send_command	;wreg free
  1844   001538                     
  1845                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 48:         _delay((unsigned long)((5)*(8000000.0/4000
      +                          .0)));
  1846   001538  0E0D               	movlw	13
  1847   00153A  6E60               	movwf	??_lcd_4bit_initialize^0,c
  1848   00153C  0EFC               	movlw	252
  1849   00153E                     u2197:
  1850   00153E  2EE8               	decfsz	wreg,f,c
  1851   001540  D7FE               	bra	u2197
  1852   001542  2E60               	decfsz	??_lcd_4bit_initialize^0,f,c
  1853   001544  D7FC               	bra	u2197
  1854   001546  C05F  F05C         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1855   00154A  0E38               	movlw	56
  1856   00154C  6E5D               	movwf	lcd_4bit_send_command@command^0,c
  1857   00154E  EC43  F00C         	call	_lcd_4bit_send_command	;wreg free
  1858   001552                     
  1859                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 50:         _delay((unsigned long)((150)*(8000000.0/40
      +                          00000.0)));
  1860   001552  0E64               	movlw	100
  1861   001554                     u2207:
  1862   001554  2EE8               	decfsz	wreg,f,c
  1863   001556  D7FE               	bra	u2207
  1864   001558  C05F  F05C         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1865   00155C  0E38               	movlw	56
  1866   00155E  6E5D               	movwf	lcd_4bit_send_command@command^0,c
  1867   001560  EC43  F00C         	call	_lcd_4bit_send_command	;wreg free
  1868   001564  C05F  F05C         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1869   001568  0E01               	movlw	1
  1870   00156A  6E5D               	movwf	lcd_4bit_send_command@command^0,c
  1871   00156C  EC43  F00C         	call	_lcd_4bit_send_command	;wreg free
  1872   001570  C05F  F05C         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1873   001574  0E02               	movlw	2
  1874   001576  6E5D               	movwf	lcd_4bit_send_command@command^0,c
  1875   001578  EC43  F00C         	call	_lcd_4bit_send_command	;wreg free
  1876   00157C  C05F  F05C         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1877   001580  0E06               	movlw	6
  1878   001582  6E5D               	movwf	lcd_4bit_send_command@command^0,c
  1879   001584  EC43  F00C         	call	_lcd_4bit_send_command	;wreg free
  1880   001588  C05F  F05C         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1881   00158C  0E0C               	movlw	12
  1882   00158E  6E5D               	movwf	lcd_4bit_send_command@command^0,c
  1883   001590  EC43  F00C         	call	_lcd_4bit_send_command	;wreg free
  1884   001594  C05F  F05C         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1885   001598  0E28               	movlw	40
  1886   00159A  6E5D               	movwf	lcd_4bit_send_command@command^0,c
  1887   00159C  EC43  F00C         	call	_lcd_4bit_send_command	;wreg free
  1888   0015A0                     
  1889                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 64:         ret = lcd_4bit_send_command(lcd,0x80);
  1890   0015A0  C05F  F05C         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1891   0015A4  0E80               	movlw	128
  1892   0015A6  6E5D               	movwf	lcd_4bit_send_command@command^0,c
  1893   0015A8  EC43  F00C         	call	_lcd_4bit_send_command	;wreg free
  1894   0015AC  6E62               	movwf	lcd_4bit_initialize@ret^0,c
  1895                           
  1896                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 65:     }
  1897   0015AE  EFDB  F00A         	goto	l368
  1898   0015B2                     l2377:
  1899   0015B2  0E00               	movlw	0
  1900   0015B4  6E62               	movwf	lcd_4bit_initialize@ret^0,c
  1901   0015B6                     l368:
  1902                           
  1903                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 68:     return ret;
  1904   0015B6  5062               	movf	lcd_4bit_initialize@ret^0,w,c
  1905   0015B8  0012               	return		;funcret
  1906   0015BA                     __end_of_lcd_4bit_initialize:
  1907                           	callstack 0
  1908                           
  1909 ;; *************** function _lcd_4bit_send_command *****************
  1910 ;; Defined at:
  1911 ;;		line 79 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;  lcd             1   14[COMRAM] PTR const struct .
  1914 ;;		 -> lcd1(6), 
  1915 ;;  command         1   15[COMRAM] unsigned char 
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;  ret             1   16[COMRAM] unsigned char 
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      unsigned char 
  1920 ;; Registers used:
  1921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1927 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1930 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1931 ;;Total ram usage:        3 bytes
  1932 ;; Hardware stack levels used: 1
  1933 ;; Hardware stack levels required when called: 2
  1934 ;; This function calls:
  1935 ;;		_gpio_pin_write_logic
  1936 ;;		_lcd_4bit_send_enable_signal
  1937 ;;		_lcd_send_4bits
  1938 ;; This function is called by:
  1939 ;;		_lcd_4bit_initialize
  1940 ;;		_lcd_4bit_send_custom_char_pos
  1941 ;;		_lcd_4bit_set_cursor
  1942 ;;		_welcome_message
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text12
  1947   001886                     __ptext12:
  1948                           	callstack 0
  1949   001886                     _lcd_4bit_send_command:
  1950                           	callstack 26
  1951   001886                     
  1952                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 82:     if(lcd != ((void*)0))
  1953   001886  505C               	movf	lcd_4bit_send_command@lcd^0,w,c
  1954   001888  B4D8               	btfsc	status,2,c
  1955   00188A  EF49  F00C         	goto	u1321
  1956   00188E  EF4B  F00C         	goto	u1320
  1957   001892                     u1321:
  1958   001892  EF6D  F00C         	goto	l2257
  1959   001896                     u1320:
  1960   001896                     
  1961                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 83:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 86:        
      +                           ret = gpio_pin_write_logic(&(lcd->lcd_rs),GPIO_LOGIC_LOW);
  1962   001896  C05C  F04E         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  1963   00189A  0E00               	movlw	0
  1964   00189C  6E4F               	movwf	gpio_pin_write_logic@logic^0,c
  1965   00189E  ECB7  F008         	call	_gpio_pin_write_logic	;wreg free
  1966   0018A2  6E5E               	movwf	lcd_4bit_send_command@ret^0,c
  1967                           
  1968                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 88:         ret = lcd_send_4bits(lcd,command >> 4);
  1969   0018A4  C05C  F056         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1970   0018A8  385D               	swapf	lcd_4bit_send_command@command^0,w,c
  1971   0018AA  0B0F               	andlw	15
  1972   0018AC  6E57               	movwf	lcd_send_4bits@_data_command^0,c
  1973   0018AE  ECE4  F00B         	call	_lcd_send_4bits	;wreg free
  1974   0018B2  6E5E               	movwf	lcd_4bit_send_command@ret^0,c
  1975                           
  1976                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 90:         ret = lcd_4bit_send_enable_signal(lcd);
  1977   0018B4  C05C  F056         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  1978   0018B8  ECE2  F00C         	call	_lcd_4bit_send_enable_signal	;wreg free
  1979   0018BC  6E5E               	movwf	lcd_4bit_send_command@ret^0,c
  1980                           
  1981                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 92:         ret = lcd_send_4bits(lcd,command);
  1982   0018BE  C05C  F056         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1983   0018C2  C05D  F057         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  1984   0018C6  ECE4  F00B         	call	_lcd_send_4bits	;wreg free
  1985   0018CA  6E5E               	movwf	lcd_4bit_send_command@ret^0,c
  1986                           
  1987                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 94:         ret = lcd_4bit_send_enable_signal(lcd);
  1988   0018CC  C05C  F056         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  1989   0018D0  ECE2  F00C         	call	_lcd_4bit_send_enable_signal	;wreg free
  1990   0018D4  6E5E               	movwf	lcd_4bit_send_command@ret^0,c
  1991                           
  1992                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 95:     }
  1993   0018D6  EF6F  F00C         	goto	l373
  1994   0018DA                     l2257:
  1995   0018DA  0E00               	movlw	0
  1996   0018DC  6E5E               	movwf	lcd_4bit_send_command@ret^0,c
  1997   0018DE                     l373:
  1998                           
  1999                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 98:     return ret;
  2000   0018DE  505E               	movf	lcd_4bit_send_command@ret^0,w,c
  2001   0018E0  0012               	return		;funcret
  2002   0018E2                     __end_of_lcd_4bit_send_command:
  2003                           	callstack 0
  2004                           
  2005 ;; *************** function _lcd_send_4bits *****************
  2006 ;; Defined at:
  2007 ;;		line 502 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;  lcd             1    8[COMRAM] PTR const struct .
  2010 ;;		 -> lcd1(6), 
  2011 ;;  _data_comman    1    9[COMRAM] unsigned char 
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  l_pins_count    1   13[COMRAM] unsigned char 
  2014 ;;  ret             1   12[COMRAM] unsigned char 
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      unsigned char 
  2017 ;; Registers used:
  2018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2024 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2026 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2027 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;Total ram usage:        6 bytes
  2029 ;; Hardware stack levels used: 1
  2030 ;; Hardware stack levels required when called: 1
  2031 ;; This function calls:
  2032 ;;		_gpio_pin_write_logic
  2033 ;; This function is called by:
  2034 ;;		_lcd_4bit_send_command
  2035 ;;		_lcd_4bit_send_char_data
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text13
  2040   0017C8                     __ptext13:
  2041                           	callstack 0
  2042   0017C8                     _lcd_send_4bits:
  2043                           	callstack 26
  2044   0017C8                     
  2045                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 505:     uint8 l_pins_counter = 0;
  2046   0017C8  0E00               	movlw	0
  2047   0017CA  6E5B               	movwf	lcd_send_4bits@l_pins_counter^0,c
  2048                           
  2049                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 506:     if(lcd != ((void*)0))
  2050   0017CC  5056               	movf	lcd_send_4bits@lcd^0,w,c
  2051   0017CE  B4D8               	btfsc	status,2,c
  2052   0017D0  EFEC  F00B         	goto	u1211
  2053   0017D4  EFEE  F00B         	goto	u1210
  2054   0017D8                     u1211:
  2055   0017D8  EF11  F00C         	goto	l2213
  2056   0017DC                     u1210:
  2057   0017DC                     
  2058                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 507:     {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 508:      
      +                             for(l_pins_counter = 0 ; l_pins_counter<4 ; l_pins_counter++)
  2059   0017DC  0E00               	movlw	0
  2060   0017DE  6E5B               	movwf	lcd_send_4bits@l_pins_counter^0,c
  2061   0017E0                     l2207:
  2062                           
  2063                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 509:         {;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 510:  
      +                                     ret = gpio_pin_write_logic(&(lcd->lcd_data[l_pins_counter]),(_data_command >>
      +                           l_pins_counter) & (uint8)0x01);
  2064   0017E0  5056               	movf	lcd_send_4bits@lcd^0,w,c
  2065   0017E2  245B               	addwf	lcd_send_4bits@l_pins_counter^0,w,c
  2066   0017E4  0F02               	addlw	2
  2067   0017E6  6E4E               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2068   0017E8  C05B  F058         	movff	lcd_send_4bits@l_pins_counter,??_lcd_send_4bits
  2069   0017EC  C057  F059         	movff	lcd_send_4bits@_data_command,??_lcd_send_4bits+1
  2070   0017F0  2A58               	incf	??_lcd_send_4bits^0,f,c
  2071   0017F2  EFFD  F00B         	goto	u1224
  2072   0017F6                     u1225:
  2073   0017F6  90D8               	bcf	status,0,c
  2074   0017F8  3259               	rrcf	(??_lcd_send_4bits+1)^0,f,c
  2075   0017FA                     u1224:
  2076   0017FA  2E58               	decfsz	??_lcd_send_4bits^0,f,c
  2077   0017FC  EFFB  F00B         	goto	u1225
  2078   001800  5059               	movf	(??_lcd_send_4bits+1)^0,w,c
  2079   001802  0B01               	andlw	1
  2080   001804  6E4F               	movwf	gpio_pin_write_logic@logic^0,c
  2081   001806  ECB7  F008         	call	_gpio_pin_write_logic	;wreg free
  2082   00180A  6E5A               	movwf	lcd_send_4bits@ret^0,c
  2083   00180C                     
  2084                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 511:         }
  2085   00180C  2A5B               	incf	lcd_send_4bits@l_pins_counter^0,f,c
  2086   00180E  0E03               	movlw	3
  2087   001810  645B               	cpfsgt	lcd_send_4bits@l_pins_counter^0,c
  2088   001812  EF0D  F00C         	goto	u1231
  2089   001816  EF0F  F00C         	goto	u1230
  2090   00181A                     u1231:
  2091   00181A  EFF0  F00B         	goto	l2207
  2092   00181E                     u1230:
  2093   00181E  EF13  F00C         	goto	l471
  2094   001822                     l2213:
  2095   001822  0E00               	movlw	0
  2096   001824  6E5A               	movwf	lcd_send_4bits@ret^0,c
  2097   001826                     l471:
  2098                           
  2099                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 515:     return ret;
  2100   001826  505A               	movf	lcd_send_4bits@ret^0,w,c
  2101   001828  0012               	return		;funcret
  2102   00182A                     __end_of_lcd_send_4bits:
  2103                           	callstack 0
  2104                           
  2105 ;; *************** function _lcd_4bit_send_enable_signal *****************
  2106 ;; Defined at:
  2107 ;;		line 518 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;  lcd             1    8[COMRAM] PTR const struct .
  2110 ;;		 -> lcd1(6), 
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  ret             1    9[COMRAM] unsigned char 
  2113 ;; Return value:  Size  Location     Type
  2114 ;;                  1    wreg      unsigned char 
  2115 ;; Registers used:
  2116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2122 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2123 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2125 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2126 ;;Total ram usage:        2 bytes
  2127 ;; Hardware stack levels used: 1
  2128 ;; Hardware stack levels required when called: 1
  2129 ;; This function calls:
  2130 ;;		_gpio_pin_write_logic
  2131 ;; This function is called by:
  2132 ;;		_lcd_4bit_send_command
  2133 ;;		_lcd_4bit_send_char_data
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text14
  2138   0019C4                     __ptext14:
  2139                           	callstack 0
  2140   0019C4                     _lcd_4bit_send_enable_signal:
  2141                           	callstack 26
  2142   0019C4                     
  2143                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 521:     if(lcd != ((void*)0))
  2144   0019C4  5056               	movf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2145   0019C6  B4D8               	btfsc	status,2,c
  2146   0019C8  EFE8  F00C         	goto	u1241
  2147   0019CC  EFEA  F00C         	goto	u1240
  2148   0019D0                     u1241:
  2149   0019D0  EFFD  F00C         	goto	l2225
  2150   0019D4                     u1240:
  2151   0019D4  2856               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2152   0019D6  6E4E               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2153   0019D8  0E01               	movlw	1
  2154   0019DA  6E4F               	movwf	gpio_pin_write_logic@logic^0,c
  2155   0019DC  ECB7  F008         	call	_gpio_pin_write_logic	;wreg free
  2156   0019E0                     
  2157                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 524:         _delay((unsigned long)((5)*(8000000.0/400
      +                          0000.0)));
  2158   0019E0  0E03               	movlw	3
  2159   0019E2                     u2217:
  2160   0019E2  2EE8               	decfsz	wreg,f,c
  2161   0019E4  D7FE               	bra	u2217
  2162   0019E6  0000               	nop	
  2163   0019E8                     
  2164                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 525:         ret = gpio_pin_write_logic(&(lcd->lcd_en)
      +                          ,GPIO_LOGIC_LOW);
  2165   0019E8  2856               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2166   0019EA  6E4E               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2167   0019EC  0E00               	movlw	0
  2168   0019EE  6E4F               	movwf	gpio_pin_write_logic@logic^0,c
  2169   0019F0  ECB7  F008         	call	_gpio_pin_write_logic	;wreg free
  2170   0019F4  6E57               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  2171                           
  2172                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 526:     }
  2173   0019F6  EFFF  F00C         	goto	l476
  2174   0019FA                     l2225:
  2175   0019FA  0E00               	movlw	0
  2176   0019FC  6E57               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  2177   0019FE                     l476:
  2178                           
  2179                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 529:     return ret;
  2180   0019FE  5057               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  2181   001A00  0012               	return		;funcret
  2182   001A02                     __end_of_lcd_4bit_send_enable_signal:
  2183                           	callstack 0
  2184                           
  2185 ;; *************** function _gpio_pin_initialize *****************
  2186 ;; Defined at:
  2187 ;;		line 160 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  _pin_config     1    8[COMRAM] PTR const struct .
  2190 ;;		 -> lcd2$lcd_data(8), lcd2(10), lcd1$lcd_data(4), lcd1(6), 
  2191 ;;		 -> relay_initialize@pin(1), led_initialize@pin(1), 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  ret             1   10[COMRAM] unsigned char 
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  1    wreg      unsigned char 
  2196 ;; Registers used:
  2197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2203 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2204 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2205 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2206 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;Total ram usage:        3 bytes
  2208 ;; Hardware stack levels used: 1
  2209 ;; Hardware stack levels required when called: 1
  2210 ;; This function calls:
  2211 ;;		_gpio_pin_direction_initialize
  2212 ;;		_gpio_pin_write_logic
  2213 ;; This function is called by:
  2214 ;;		_lcd_4bit_initialize
  2215 ;;		_lcd_8bit_initialize
  2216 ;;		_dc_motor_initialize
  2217 ;;		_keypad_initialize
  2218 ;;		_led_initialize
  2219 ;;		_relay_initialize
  2220 ;;		_seven_segment_initialize
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           	psect	text15
  2225   001666                     __ptext15:
  2226                           	callstack 0
  2227   001666                     _gpio_pin_initialize:
  2228                           	callstack 26
  2229   001666                     
  2230                           ;MCAL_Layer/GPIO/hal_gpio.c: 163:     if((_pin_config != ((void*)0)) && (_pin_config->po
      +                          rt <= 5 -1) && (_pin_config->pin <= 8 -1))
  2231   001666  5056               	movf	gpio_pin_initialize@_pin_config^0,w,c
  2232   001668  B4D8               	btfsc	status,2,c
  2233   00166A  EF39  F00B         	goto	u1341
  2234   00166E  EF3B  F00B         	goto	u1340
  2235   001672                     u1341:
  2236   001672  EF6C  F00B         	goto	l2281
  2237   001676                     u1340:
  2238   001676  5056               	movf	gpio_pin_initialize@_pin_config^0,w,c
  2239   001678  6ED9               	movwf	fsr2l,c
  2240   00167A  6ADA               	clrf	fsr2h,c
  2241   00167C  50DF               	movf	223,w,c
  2242   00167E  0B07               	andlw	7
  2243   001680  6E57               	movwf	??_gpio_pin_initialize^0,c
  2244   001682  0E05               	movlw	5
  2245   001684  6057               	cpfslt	??_gpio_pin_initialize^0,c
  2246   001686  EF47  F00B         	goto	u1351
  2247   00168A  EF49  F00B         	goto	u1350
  2248   00168E                     u1351:
  2249   00168E  EF6C  F00B         	goto	l2281
  2250   001692                     u1350:
  2251   001692  5056               	movf	gpio_pin_initialize@_pin_config^0,w,c
  2252   001694  6ED9               	movwf	fsr2l,c
  2253   001696  6ADA               	clrf	fsr2h,c
  2254   001698  30DF               	rrcf	223,w,c
  2255   00169A  32E8               	rrcf	wreg,f,c
  2256   00169C  32E8               	rrcf	wreg,f,c
  2257   00169E  0B07               	andlw	7
  2258   0016A0  6E57               	movwf	??_gpio_pin_initialize^0,c
  2259   0016A2  0E08               	movlw	8
  2260   0016A4  6057               	cpfslt	??_gpio_pin_initialize^0,c
  2261   0016A6  EF57  F00B         	goto	u1361
  2262   0016AA  EF59  F00B         	goto	u1360
  2263   0016AE                     u1361:
  2264   0016AE  EF6C  F00B         	goto	l2281
  2265   0016B2                     u1360:
  2266   0016B2                     
  2267                           ;MCAL_Layer/GPIO/hal_gpio.c: 164:     {;MCAL_Layer/GPIO/hal_gpio.c: 165:         ret = g
      +                          pio_pin_direction_initialize(_pin_config);
  2268   0016B2  C056  F04E         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_initialize@_pin_config
  2269   0016B6  EC14  F008         	call	_gpio_pin_direction_initialize	;wreg free
  2270   0016BA  6E58               	movwf	gpio_pin_initialize@ret^0,c
  2271                           
  2272                           ;MCAL_Layer/GPIO/hal_gpio.c: 166:         ret = gpio_pin_write_logic(_pin_config,_pin_co
      +                          nfig->logic);
  2273   0016BC  C056  F04E         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
  2274   0016C0  5056               	movf	gpio_pin_initialize@_pin_config^0,w,c
  2275   0016C2  6ED9               	movwf	fsr2l,c
  2276   0016C4  6ADA               	clrf	fsr2h,c
  2277   0016C6  0E00               	movlw	0
  2278   0016C8  BEDF               	btfsc	indf2,7,c
  2279   0016CA  0E01               	movlw	1
  2280   0016CC  6E4F               	movwf	gpio_pin_write_logic@logic^0,c
  2281   0016CE  ECB7  F008         	call	_gpio_pin_write_logic	;wreg free
  2282   0016D2  6E58               	movwf	gpio_pin_initialize@ret^0,c
  2283                           
  2284                           ;MCAL_Layer/GPIO/hal_gpio.c: 167:     }
  2285   0016D4  EF6E  F00B         	goto	l243
  2286   0016D8                     l2281:
  2287   0016D8  0E00               	movlw	0
  2288   0016DA  6E58               	movwf	gpio_pin_initialize@ret^0,c
  2289   0016DC                     l243:
  2290                           
  2291                           ;MCAL_Layer/GPIO/hal_gpio.c: 169:     return ret;
  2292   0016DC  5058               	movf	gpio_pin_initialize@ret^0,w,c
  2293   0016DE  0012               	return		;funcret
  2294   0016E0                     __end_of_gpio_pin_initialize:
  2295                           	callstack 0
  2296                           
  2297 ;; *************** function _gpio_pin_write_logic *****************
  2298 ;; Defined at:
  2299 ;;		line 86 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  2302 ;;		 -> lcd2$lcd_data(8), lcd2(10), lcd1$lcd_data(4), lcd1(6), 
  2303 ;;		 -> relay_turn_off@pin(1), relay_turn_on@pin(1), relay_initialize@pin(1), led_turn_off@pin(1), 
  2304 ;;		 -> led_turn_on@pin(1), led_initialize@pin(1), 
  2305 ;;  logic           1    1[COMRAM] enum E2999
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;  ret             1    7[COMRAM] unsigned char 
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  1    wreg      unsigned char 
  2310 ;; Registers used:
  2311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2317 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2318 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2319 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2320 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2321 ;;Total ram usage:        8 bytes
  2322 ;; Hardware stack levels used: 1
  2323 ;; This function calls:
  2324 ;;		Nothing
  2325 ;; This function is called by:
  2326 ;;		_gpio_pin_initialize
  2327 ;;		_lcd_4bit_send_command
  2328 ;;		_lcd_4bit_send_char_data
  2329 ;;		_lcd_8bit_send_command
  2330 ;;		_lcd_send_4bits
  2331 ;;		_lcd_4bit_send_enable_signal
  2332 ;;		_lcd_8bit_send_enable_signal
  2333 ;;		_dc_motor_move_right
  2334 ;;		_dc_motor_move_left
  2335 ;;		_dc_motor_stop
  2336 ;;		_keypad_get_value
  2337 ;;		_led_turn_on
  2338 ;;		_led_turn_off
  2339 ;;		_relay_turn_on
  2340 ;;		_relay_turn_off
  2341 ;;		_seven_segment_write_number
  2342 ;;		_lcd_8bit_send_char_data
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           	psect	text16
  2347   00116E                     __ptext16:
  2348                           	callstack 0
  2349   00116E                     _gpio_pin_write_logic:
  2350                           	callstack 26
  2351   00116E                     
  2352                           ;MCAL_Layer/GPIO/hal_gpio.c: 86: Std_ReturnType gpio_pin_write_logic(const pin_config_t 
      +                          *_pin_config , logic_t logic);MCAL_Layer/GPIO/hal_gpio.c: 87: {;MCAL_Layer/GPIO/hal_gpio
      +                          .c: 88:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2353   00116E  0E01               	movlw	1
  2354   001170  6E55               	movwf	gpio_pin_write_logic@ret^0,c
  2355                           
  2356                           ;MCAL_Layer/GPIO/hal_gpio.c: 89:     if((_pin_config != ((void*)0)) && (_pin_config->por
      +                          t <= 5 -1) && (_pin_config->pin <= 8 -1))
  2357   001172  504E               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2358   001174  B4D8               	btfsc	status,2,c
  2359   001176  EFBF  F008         	goto	u1151
  2360   00117A  EFC1  F008         	goto	u1150
  2361   00117E                     u1151:
  2362   00117E  EF3E  F009         	goto	l2185
  2363   001182                     u1150:
  2364   001182  504E               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2365   001184  6ED9               	movwf	fsr2l,c
  2366   001186  6ADA               	clrf	fsr2h,c
  2367   001188  50DF               	movf	223,w,c
  2368   00118A  0B07               	andlw	7
  2369   00118C  6E50               	movwf	??_gpio_pin_write_logic^0,c
  2370   00118E  0E05               	movlw	5
  2371   001190  6050               	cpfslt	??_gpio_pin_write_logic^0,c
  2372   001192  EFCD  F008         	goto	u1161
  2373   001196  EFCF  F008         	goto	u1160
  2374   00119A                     u1161:
  2375   00119A  EF3E  F009         	goto	l2185
  2376   00119E                     u1160:
  2377   00119E  504E               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2378   0011A0  6ED9               	movwf	fsr2l,c
  2379   0011A2  6ADA               	clrf	fsr2h,c
  2380   0011A4  30DF               	rrcf	223,w,c
  2381   0011A6  32E8               	rrcf	wreg,f,c
  2382   0011A8  32E8               	rrcf	wreg,f,c
  2383   0011AA  0B07               	andlw	7
  2384   0011AC  6E50               	movwf	??_gpio_pin_write_logic^0,c
  2385   0011AE  0E08               	movlw	8
  2386   0011B0  6050               	cpfslt	??_gpio_pin_write_logic^0,c
  2387   0011B2  EFDD  F008         	goto	u1171
  2388   0011B6  EFDF  F008         	goto	u1170
  2389   0011BA                     u1171:
  2390   0011BA  EF3E  F009         	goto	l2185
  2391   0011BE                     u1170:
  2392   0011BE                     
  2393                           ;MCAL_Layer/GPIO/hal_gpio.c: 90:     {;MCAL_Layer/GPIO/hal_gpio.c: 91:         if(_pin_c
      +                          onfig->direction == GPIO_DIRECTION_OUTPUT)
  2394   0011BE  504E               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2395   0011C0  6ED9               	movwf	fsr2l,c
  2396   0011C2  6ADA               	clrf	fsr2h,c
  2397   0011C4  BCDF               	btfsc	indf2,6,c
  2398   0011C6  EFE7  F008         	goto	u1181
  2399   0011CA  EFE9  F008         	goto	u1180
  2400   0011CE                     u1181:
  2401   0011CE  EF3E  F009         	goto	l2185
  2402   0011D2                     u1180:
  2403   0011D2  EF42  F009         	goto	l2187
  2404   0011D6                     l2181:
  2405                           
  2406                           ;MCAL_Layer/GPIO/hal_gpio.c: 96:                     (*lat_registers[_pin_config->port] 
      +                          &=~ ((uint8)0x01 << _pin_config->pin));
  2407   0011D6  504E               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2408   0011D8  6ED9               	movwf	fsr2l,c
  2409   0011DA  6ADA               	clrf	fsr2h,c
  2410   0011DC  30DF               	rrcf	223,w,c
  2411   0011DE  32E8               	rrcf	wreg,f,c
  2412   0011E0  32E8               	rrcf	wreg,f,c
  2413   0011E2  0B07               	andlw	7
  2414   0011E4  6E50               	movwf	??_gpio_pin_write_logic^0,c
  2415   0011E6  0E01               	movlw	1
  2416   0011E8  6E51               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2417   0011EA  2A50               	incf	??_gpio_pin_write_logic^0,f,c
  2418   0011EC  EFFA  F008         	goto	u1194
  2419   0011F0                     u1195:
  2420   0011F0  90D8               	bcf	status,0,c
  2421   0011F2  3651               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2422   0011F4                     u1194:
  2423   0011F4  2E50               	decfsz	??_gpio_pin_write_logic^0,f,c
  2424   0011F6  EFF8  F008         	goto	u1195
  2425   0011FA  5051               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2426   0011FC  0AFF               	xorlw	255
  2427   0011FE  6E52               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2428   001200  504E               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2429   001202  6ED9               	movwf	fsr2l,c
  2430   001204  6ADA               	clrf	fsr2h,c
  2431   001206  50DF               	movf	223,w,c
  2432   001208  0B07               	andlw	7
  2433   00120A  0D02               	mullw	2
  2434   00120C  50F3               	movf	243,w,c
  2435   00120E  0F01               	addlw	low _lat_registers
  2436   001210  6ED9               	movwf	fsr2l,c
  2437   001212  6ADA               	clrf	fsr2h,c
  2438   001214  CFDE F053          	movff	postinc2,??_gpio_pin_write_logic+3
  2439   001218  CFDD F054          	movff	postdec2,??_gpio_pin_write_logic+4
  2440   00121C  C053  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2441   001220  C054  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2442   001224  5052               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2443   001226  16DF               	andwf	indf2,f,c
  2444                           
  2445                           ;MCAL_Layer/GPIO/hal_gpio.c: 97:                     break;
  2446   001228  EF57  F009         	goto	l228
  2447   00122C                     l2183:
  2448                           
  2449                           ;MCAL_Layer/GPIO/hal_gpio.c: 99:                     (*lat_registers[_pin_config->port] 
      +                          |= ((uint8)0x01 << _pin_config->pin));
  2450   00122C  504E               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2451   00122E  6ED9               	movwf	fsr2l,c
  2452   001230  6ADA               	clrf	fsr2h,c
  2453   001232  30DF               	rrcf	223,w,c
  2454   001234  32E8               	rrcf	wreg,f,c
  2455   001236  32E8               	rrcf	wreg,f,c
  2456   001238  0B07               	andlw	7
  2457   00123A  6E50               	movwf	??_gpio_pin_write_logic^0,c
  2458   00123C  0E01               	movlw	1
  2459   00123E  6E51               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2460   001240  2A50               	incf	??_gpio_pin_write_logic^0,f,c
  2461   001242  EF25  F009         	goto	u1204
  2462   001246                     u1205:
  2463   001246  90D8               	bcf	status,0,c
  2464   001248  3651               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2465   00124A                     u1204:
  2466   00124A  2E50               	decfsz	??_gpio_pin_write_logic^0,f,c
  2467   00124C  EF23  F009         	goto	u1205
  2468   001250  504E               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2469   001252  6ED9               	movwf	fsr2l,c
  2470   001254  6ADA               	clrf	fsr2h,c
  2471   001256  50DF               	movf	223,w,c
  2472   001258  0B07               	andlw	7
  2473   00125A  0D02               	mullw	2
  2474   00125C  50F3               	movf	243,w,c
  2475   00125E  0F01               	addlw	low _lat_registers
  2476   001260  6ED9               	movwf	fsr2l,c
  2477   001262  6ADA               	clrf	fsr2h,c
  2478   001264  CFDE F052          	movff	postinc2,??_gpio_pin_write_logic+2
  2479   001268  CFDD F053          	movff	postdec2,??_gpio_pin_write_logic+3
  2480   00126C  C052  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  2481   001270  C053  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  2482   001274  5051               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2483   001276  12DF               	iorwf	indf2,f,c
  2484                           
  2485                           ;MCAL_Layer/GPIO/hal_gpio.c: 100:                     break;
  2486   001278  EF57  F009         	goto	l228
  2487   00127C                     l2185:
  2488   00127C  0E00               	movlw	0
  2489   00127E  6E55               	movwf	gpio_pin_write_logic@ret^0,c
  2490                           
  2491                           ;MCAL_Layer/GPIO/hal_gpio.c: 102:             }
  2492   001280  EF57  F009         	goto	l228
  2493   001284                     l2187:
  2494   001284  504F               	movf	gpio_pin_write_logic@logic^0,w,c
  2495   001286  6E50               	movwf	??_gpio_pin_write_logic^0,c
  2496   001288  6A51               	clrf	(??_gpio_pin_write_logic+1)^0,c
  2497                           
  2498                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2499                           ; Switch size 1, requested type "simple"
  2500                           ; Number of cases is 1, Range of values is 0 to 0
  2501                           ; switch strategies available:
  2502                           ; Name         Instructions Cycles
  2503                           ; simple_byte            4     3 (average)
  2504                           ;	Chosen strategy is simple_byte
  2505   00128A  5051               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2506   00128C  0A00               	xorlw	0	; case 0
  2507   00128E  B4D8               	btfsc	status,2,c
  2508   001290  EF4C  F009         	goto	l3017
  2509   001294  EF3E  F009         	goto	l2185
  2510   001298                     l3017:
  2511                           
  2512                           ; Switch size 1, requested type "simple"
  2513                           ; Number of cases is 2, Range of values is 0 to 1
  2514                           ; switch strategies available:
  2515                           ; Name         Instructions Cycles
  2516                           ; simple_byte            7     4 (average)
  2517                           ;	Chosen strategy is simple_byte
  2518   001298  5050               	movf	??_gpio_pin_write_logic^0,w,c
  2519   00129A  0A00               	xorlw	0	; case 0
  2520   00129C  B4D8               	btfsc	status,2,c
  2521   00129E  EFEB  F008         	goto	l2181
  2522   0012A2  0A01               	xorlw	1	; case 1
  2523   0012A4  B4D8               	btfsc	status,2,c
  2524   0012A6  EF16  F009         	goto	l2183
  2525   0012AA  EF3E  F009         	goto	l2185
  2526   0012AE                     l228:
  2527                           
  2528                           ;MCAL_Layer/GPIO/hal_gpio.c: 107:     return ret;
  2529   0012AE  5055               	movf	gpio_pin_write_logic@ret^0,w,c
  2530   0012B0  0012               	return		;funcret
  2531   0012B2                     __end_of_gpio_pin_write_logic:
  2532                           	callstack 0
  2533                           
  2534 ;; *************** function _gpio_pin_direction_initialize *****************
  2535 ;; Defined at:
  2536 ;;		line 34 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  2539 ;;		 -> lcd2$lcd_data(8), lcd2(10), lcd1$lcd_data(4), lcd1(6), 
  2540 ;;		 -> relay_initialize@pin(1), led_initialize@pin(1), 
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;  ret             1    6[COMRAM] unsigned char 
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  1    wreg      unsigned char 
  2545 ;; Registers used:
  2546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2552 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2553 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2554 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2555 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2556 ;;Total ram usage:        7 bytes
  2557 ;; Hardware stack levels used: 1
  2558 ;; This function calls:
  2559 ;;		Nothing
  2560 ;; This function is called by:
  2561 ;;		_gpio_pin_initialize
  2562 ;;		_button_initialize
  2563 ;;		_keypad_initialize
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text17
  2568   001028                     __ptext17:
  2569                           	callstack 0
  2570   001028                     _gpio_pin_direction_initialize:
  2571                           	callstack 26
  2572   001028                     
  2573                           ;MCAL_Layer/GPIO/hal_gpio.c: 34: Std_ReturnType gpio_pin_direction_initialize(const pin_
      +                          config_t *_pin_config);MCAL_Layer/GPIO/hal_gpio.c: 35: {;MCAL_Layer/GPIO/hal_gpio.c: 36:
      +                               Std_ReturnType ret = (Std_ReturnType)0x01;
  2574   001028  0E01               	movlw	1
  2575   00102A  6E54               	movwf	gpio_pin_direction_initialize@ret^0,c
  2576                           
  2577                           ;MCAL_Layer/GPIO/hal_gpio.c: 37:     if((_pin_config != ((void*)0)) && (_pin_config->por
      +                          t <= 5 -1) && (_pin_config->pin <= 8 -1))
  2578   00102C  504E               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2579   00102E  B4D8               	btfsc	status,2,c
  2580   001030  EF1C  F008         	goto	u1251
  2581   001034  EF1E  F008         	goto	u1250
  2582   001038                     u1251:
  2583   001038  EF91  F008         	goto	l2241
  2584   00103C                     u1250:
  2585   00103C  504E               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2586   00103E  6ED9               	movwf	fsr2l,c
  2587   001040  6ADA               	clrf	fsr2h,c
  2588   001042  50DF               	movf	223,w,c
  2589   001044  0B07               	andlw	7
  2590   001046  6E4F               	movwf	??_gpio_pin_direction_initialize^0,c
  2591   001048  0E05               	movlw	5
  2592   00104A  604F               	cpfslt	??_gpio_pin_direction_initialize^0,c
  2593   00104C  EF2A  F008         	goto	u1261
  2594   001050  EF2C  F008         	goto	u1260
  2595   001054                     u1261:
  2596   001054  EF91  F008         	goto	l2241
  2597   001058                     u1260:
  2598   001058  504E               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2599   00105A  6ED9               	movwf	fsr2l,c
  2600   00105C  6ADA               	clrf	fsr2h,c
  2601   00105E  30DF               	rrcf	223,w,c
  2602   001060  32E8               	rrcf	wreg,f,c
  2603   001062  32E8               	rrcf	wreg,f,c
  2604   001064  0B07               	andlw	7
  2605   001066  6E4F               	movwf	??_gpio_pin_direction_initialize^0,c
  2606   001068  0E08               	movlw	8
  2607   00106A  604F               	cpfslt	??_gpio_pin_direction_initialize^0,c
  2608   00106C  EF3A  F008         	goto	u1271
  2609   001070  EF3C  F008         	goto	u1270
  2610   001074                     u1271:
  2611   001074  EF91  F008         	goto	l2241
  2612   001078                     u1270:
  2613   001078  EF95  F008         	goto	l2243
  2614   00107C                     l2237:
  2615                           
  2616                           ;MCAL_Layer/GPIO/hal_gpio.c: 42:                 (*tris_registers[_pin_config->port] &=~
      +                           ((uint8)0x01 << _pin_config->pin));
  2617   00107C  504E               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2618   00107E  6ED9               	movwf	fsr2l,c
  2619   001080  6ADA               	clrf	fsr2h,c
  2620   001082  30DF               	rrcf	223,w,c
  2621   001084  32E8               	rrcf	wreg,f,c
  2622   001086  32E8               	rrcf	wreg,f,c
  2623   001088  0B07               	andlw	7
  2624   00108A  6E4F               	movwf	??_gpio_pin_direction_initialize^0,c
  2625   00108C  0E01               	movlw	1
  2626   00108E  6E50               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  2627   001090  2A4F               	incf	??_gpio_pin_direction_initialize^0,f,c
  2628   001092  EF4D  F008         	goto	u1284
  2629   001096                     u1285:
  2630   001096  90D8               	bcf	status,0,c
  2631   001098  3650               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  2632   00109A                     u1284:
  2633   00109A  2E4F               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  2634   00109C  EF4B  F008         	goto	u1285
  2635   0010A0  5050               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  2636   0010A2  0AFF               	xorlw	255
  2637   0010A4  6E51               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  2638   0010A6  504E               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2639   0010A8  6ED9               	movwf	fsr2l,c
  2640   0010AA  6ADA               	clrf	fsr2h,c
  2641   0010AC  50DF               	movf	223,w,c
  2642   0010AE  0B07               	andlw	7
  2643   0010B0  0D02               	mullw	2
  2644   0010B2  50F3               	movf	243,w,c
  2645   0010B4  0F0B               	addlw	low _tris_registers
  2646   0010B6  6ED9               	movwf	fsr2l,c
  2647   0010B8  6ADA               	clrf	fsr2h,c
  2648   0010BA  CFDE F052          	movff	postinc2,??_gpio_pin_direction_initialize+3
  2649   0010BE  CFDD F053          	movff	postdec2,??_gpio_pin_direction_initialize+4
  2650   0010C2  C052  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  2651   0010C6  C053  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  2652   0010CA  5051               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  2653   0010CC  16DF               	andwf	indf2,f,c
  2654                           
  2655                           ;MCAL_Layer/GPIO/hal_gpio.c: 43:                 break;
  2656   0010CE  EFB5  F008         	goto	l211
  2657   0010D2                     l2239:
  2658                           
  2659                           ;MCAL_Layer/GPIO/hal_gpio.c: 45:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8)0x01 << _pin_config->pin));
  2660   0010D2  504E               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2661   0010D4  6ED9               	movwf	fsr2l,c
  2662   0010D6  6ADA               	clrf	fsr2h,c
  2663   0010D8  30DF               	rrcf	223,w,c
  2664   0010DA  32E8               	rrcf	wreg,f,c
  2665   0010DC  32E8               	rrcf	wreg,f,c
  2666   0010DE  0B07               	andlw	7
  2667   0010E0  6E4F               	movwf	??_gpio_pin_direction_initialize^0,c
  2668   0010E2  0E01               	movlw	1
  2669   0010E4  6E50               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  2670   0010E6  2A4F               	incf	??_gpio_pin_direction_initialize^0,f,c
  2671   0010E8  EF78  F008         	goto	u1294
  2672   0010EC                     u1295:
  2673   0010EC  90D8               	bcf	status,0,c
  2674   0010EE  3650               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  2675   0010F0                     u1294:
  2676   0010F0  2E4F               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  2677   0010F2  EF76  F008         	goto	u1295
  2678   0010F6  504E               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2679   0010F8  6ED9               	movwf	fsr2l,c
  2680   0010FA  6ADA               	clrf	fsr2h,c
  2681   0010FC  50DF               	movf	223,w,c
  2682   0010FE  0B07               	andlw	7
  2683   001100  0D02               	mullw	2
  2684   001102  50F3               	movf	243,w,c
  2685   001104  0F0B               	addlw	low _tris_registers
  2686   001106  6ED9               	movwf	fsr2l,c
  2687   001108  6ADA               	clrf	fsr2h,c
  2688   00110A  CFDE F051          	movff	postinc2,??_gpio_pin_direction_initialize+2
  2689   00110E  CFDD F052          	movff	postdec2,??_gpio_pin_direction_initialize+3
  2690   001112  C051  FFD9         	movff	??_gpio_pin_direction_initialize+2,fsr2l
  2691   001116  C052  FFDA         	movff	??_gpio_pin_direction_initialize+3,fsr2h
  2692   00111A  5050               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  2693   00111C  12DF               	iorwf	indf2,f,c
  2694                           
  2695                           ;MCAL_Layer/GPIO/hal_gpio.c: 46:                 break;
  2696   00111E  EFB5  F008         	goto	l211
  2697   001122                     l2241:
  2698   001122  0E00               	movlw	0
  2699   001124  6E54               	movwf	gpio_pin_direction_initialize@ret^0,c
  2700                           
  2701                           ;MCAL_Layer/GPIO/hal_gpio.c: 48:         }
  2702   001126  EFB5  F008         	goto	l211
  2703   00112A                     l2243:
  2704   00112A  504E               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  2705   00112C  6ED9               	movwf	fsr2l,c
  2706   00112E  6ADA               	clrf	fsr2h,c
  2707   001130  BCDF               	btfsc	indf2,6,c
  2708   001132  EF9D  F008         	goto	u1301
  2709   001136  EFA0  F008         	goto	u1300
  2710   00113A                     u1301:
  2711   00113A  0E01               	movlw	1
  2712   00113C  EFA1  F008         	goto	u1310
  2713   001140                     u1300:
  2714   001140  0E00               	movlw	0
  2715   001142                     u1310:
  2716   001142  6E4F               	movwf	??_gpio_pin_direction_initialize^0,c
  2717   001144  6A50               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  2718                           
  2719                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2720                           ; Switch size 1, requested type "simple"
  2721                           ; Number of cases is 1, Range of values is 0 to 0
  2722                           ; switch strategies available:
  2723                           ; Name         Instructions Cycles
  2724                           ; simple_byte            4     3 (average)
  2725                           ;	Chosen strategy is simple_byte
  2726   001146  5050               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  2727   001148  0A00               	xorlw	0	; case 0
  2728   00114A  B4D8               	btfsc	status,2,c
  2729   00114C  EFAA  F008         	goto	l3019
  2730   001150  EF91  F008         	goto	l2241
  2731   001154                     l3019:
  2732                           
  2733                           ; Switch size 1, requested type "simple"
  2734                           ; Number of cases is 2, Range of values is 0 to 1
  2735                           ; switch strategies available:
  2736                           ; Name         Instructions Cycles
  2737                           ; simple_byte            7     4 (average)
  2738                           ;	Chosen strategy is simple_byte
  2739   001154  504F               	movf	??_gpio_pin_direction_initialize^0,w,c
  2740   001156  0A00               	xorlw	0	; case 0
  2741   001158  B4D8               	btfsc	status,2,c
  2742   00115A  EF3E  F008         	goto	l2237
  2743   00115E  0A01               	xorlw	1	; case 1
  2744   001160  B4D8               	btfsc	status,2,c
  2745   001162  EF69  F008         	goto	l2239
  2746   001166  EF91  F008         	goto	l2241
  2747   00116A                     l211:
  2748                           
  2749                           ;MCAL_Layer/GPIO/hal_gpio.c: 52:     return ret;
  2750   00116A  5054               	movf	gpio_pin_direction_initialize@ret^0,w,c
  2751   00116C  0012               	return		;funcret
  2752   00116E                     __end_of_gpio_pin_direction_initialize:
  2753                           	callstack 0
  2754                           
  2755                           	psect	rparam
  2756   000000                     
  2757                           	psect	config
  2758                           
  2759                           ; Padding undefined space
  2760   300000                     	org	3145728
  2761   300000  FF                 	db	255
  2762                           
  2763                           ;Config register CONFIG1H @ 0x300001
  2764                           ;	Oscillator Selection bits
  2765                           ;	OSC = HS, HS oscillator
  2766                           ;	Fail-Safe Clock Monitor Enable bit
  2767                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2768                           ;	Internal/External Oscillator Switchover bit
  2769                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2770   300001                     	org	3145729
  2771   300001  02                 	db	2
  2772                           
  2773                           ;Config register CONFIG2L @ 0x300002
  2774                           ;	Power-up Timer Enable bit
  2775                           ;	PWRT = OFF, PWRT disabled
  2776                           ;	Brown-out Reset Enable bits
  2777                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2778                           ;	Brown Out Reset Voltage bits
  2779                           ;	BORV = 1, 
  2780   300002                     	org	3145730
  2781   300002  09                 	db	9
  2782                           
  2783                           ;Config register CONFIG2H @ 0x300003
  2784                           ;	Watchdog Timer Enable bit
  2785                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2786                           ;	Watchdog Timer Postscale Select bits
  2787                           ;	WDTPS = 32768, 1:32768
  2788   300003                     	org	3145731
  2789   300003  1E                 	db	30
  2790                           
  2791                           ; Padding undefined space
  2792   300004                     	org	3145732
  2793   300004  FF                 	db	255
  2794                           
  2795                           ;Config register CONFIG3H @ 0x300005
  2796                           ;	CCP2 MUX bit
  2797                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2798                           ;	PORTB A/D Enable bit
  2799                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2800                           ;	Low-Power Timer1 Oscillator Enable bit
  2801                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2802                           ;	MCLR Pin Enable bit
  2803                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2804   300005                     	org	3145733
  2805   300005  81                 	db	129
  2806                           
  2807                           ;Config register CONFIG4L @ 0x300006
  2808                           ;	Stack Full/Underflow Reset Enable bit
  2809                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2810                           ;	Single-Supply ICSP Enable bit
  2811                           ;	LVP = OFF, Single-Supply ICSP disabled
  2812                           ;	Extended Instruction Set Enable bit
  2813                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2814                           ;	Background Debugger Enable bit
  2815                           ;	DEBUG = 0x1, unprogrammed default
  2816   300006                     	org	3145734
  2817   300006  81                 	db	129
  2818                           
  2819                           ; Padding undefined space
  2820   300007                     	org	3145735
  2821   300007  FF                 	db	255
  2822                           
  2823                           ;Config register CONFIG5L @ 0x300008
  2824                           ;	Code Protection bit
  2825                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2826                           ;	Code Protection bit
  2827                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2828                           ;	Code Protection bit
  2829                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2830                           ;	Code Protection bit
  2831                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2832   300008                     	org	3145736
  2833   300008  0F                 	db	15
  2834                           
  2835                           ;Config register CONFIG5H @ 0x300009
  2836                           ;	Boot Block Code Protection bit
  2837                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2838                           ;	Data EEPROM Code Protection bit
  2839                           ;	CPD = OFF, Data EEPROM not code-protected
  2840   300009                     	org	3145737
  2841   300009  C0                 	db	192
  2842                           
  2843                           ;Config register CONFIG6L @ 0x30000A
  2844                           ;	Write Protection bit
  2845                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2846                           ;	Write Protection bit
  2847                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2848                           ;	Write Protection bit
  2849                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2850                           ;	Write Protection bit
  2851                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2852   30000A                     	org	3145738
  2853   30000A  0F                 	db	15
  2854                           
  2855                           ;Config register CONFIG6H @ 0x30000B
  2856                           ;	Configuration Register Write Protection bit
  2857                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2858                           ;	Boot Block Write Protection bit
  2859                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2860                           ;	Data EEPROM Write Protection bit
  2861                           ;	WRTD = OFF, Data EEPROM not write-protected
  2862   30000B                     	org	3145739
  2863   30000B  E0                 	db	224
  2864                           
  2865                           ;Config register CONFIG7L @ 0x30000C
  2866                           ;	Table Read Protection bit
  2867                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2868                           ;	Table Read Protection bit
  2869                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2870                           ;	Table Read Protection bit
  2871                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2872                           ;	Table Read Protection bit
  2873                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2874   30000C                     	org	3145740
  2875   30000C  0F                 	db	15
  2876                           
  2877                           ;Config register CONFIG7H @ 0x30000D
  2878                           ;	Boot Block Table Read Protection bit
  2879                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2880   30000D                     	org	3145741
  2881   30000D  40                 	db	64
  2882                           tosu	equ	0xFFF
  2883                           tosh	equ	0xFFE
  2884                           tosl	equ	0xFFD
  2885                           stkptr	equ	0xFFC
  2886                           pclatu	equ	0xFFB
  2887                           pclath	equ	0xFFA
  2888                           pcl	equ	0xFF9
  2889                           tblptru	equ	0xFF8
  2890                           tblptrh	equ	0xFF7
  2891                           tblptrl	equ	0xFF6
  2892                           tablat	equ	0xFF5
  2893                           prodh	equ	0xFF4
  2894                           prodl	equ	0xFF3
  2895                           indf0	equ	0xFEF
  2896                           postinc0	equ	0xFEE
  2897                           postdec0	equ	0xFED
  2898                           preinc0	equ	0xFEC
  2899                           plusw0	equ	0xFEB
  2900                           fsr0h	equ	0xFEA
  2901                           fsr0l	equ	0xFE9
  2902                           wreg	equ	0xFE8
  2903                           indf1	equ	0xFE7
  2904                           postinc1	equ	0xFE6
  2905                           postdec1	equ	0xFE5
  2906                           preinc1	equ	0xFE4
  2907                           plusw1	equ	0xFE3
  2908                           fsr1h	equ	0xFE2
  2909                           fsr1l	equ	0xFE1
  2910                           bsr	equ	0xFE0
  2911                           indf2	equ	0xFDF
  2912                           postinc2	equ	0xFDE
  2913                           postdec2	equ	0xFDD
  2914                           preinc2	equ	0xFDC
  2915                           plusw2	equ	0xFDB
  2916                           fsr2h	equ	0xFDA
  2917                           fsr2l	equ	0xFD9
  2918                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    16
    Data        103
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     38     123
    BANK0           128      0      26
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_initialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[6]), lcd1$lcd_data(COMRAM[4]), lcd2(COMRAM[10]), lcd2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin(COMRAM[1]), relay_initialize@pin(COMRAM[1]), 

    gpio_pin_initialize@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[6]), lcd1$lcd_data(COMRAM[4]), lcd2(COMRAM[10]), lcd2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin(COMRAM[1]), relay_initialize@pin(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[6]), lcd1$lcd_data(COMRAM[4]), lcd2(COMRAM[10]), lcd2$lcd_data(COMRAM[8]), 
		 -> led_initialize@pin(COMRAM[1]), led_turn_off@pin(COMRAM[1]), led_turn_on@pin(COMRAM[1]), relay_initialize@pin(COMRAM[1]), 
		 -> relay_turn_off@pin(COMRAM[1]), relay_turn_on@pin(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_char_data_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_custom_char_pos@_char	PTR const unsigned char  size(1) Largest target is 8
		 -> customChar1(COMRAM[8]), customChar2(COMRAM[8]), customChar3(COMRAM[8]), customChar4(COMRAM[8]), 
		 -> customChar5(COMRAM[8]), customChar6(BANK0[8]), 

    lcd_4bit_send_custom_char_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_8bit_initialize@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_8bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    S1349$buffer	PTR unsigned char  size(2) Largest target is 0

    S1349$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), STR_4(CODE[3]), STR_5(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_battary_charging2
    _battary_charging2->_lcd_4bit_send_custom_char_pos
    _lcd_4bit_send_custom_char_pos->_lcd_4bit_send_char_data_pos
    _lcd_4bit_send_char_data_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _application_initialize->_ecu_layer_initialize
    _ecu_layer_initialize->_lcd_4bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  110782
             _application_initialize
                  _battary_charging2
 ---------------------------------------------------------------------------------
 (1) _battary_charging2                                    3     3      0   68584
                                             35 COMRAM     3     3      0
      _lcd_4bit_send_custom_char_pos
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_custom_char_pos                        7     2      5   68537
                                             28 COMRAM     7     2      5
            _lcd_4bit_send_char_data
        _lcd_4bit_send_char_data_pos
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_char_data_pos                          5     1      4   33565
                                             23 COMRAM     5     1      4
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_set_cursor                                  6     3      3   17816
                                             17 COMRAM     6     3      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_char_data                              3     1      2   15287
                                             14 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               1     1      0   42198
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 1     1      0   42196
                                             21 COMRAM     1     1      0
                _lcd_4bit_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_initialize                                  4     3      1   18386
                                             16 COMRAM     4     3      1
                _gpio_pin_initialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_command                                6     4      2   11712
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (5) _lcd_8bit_send_enable_signal                          2     1      1    4724
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  4     3      1   23785
                                             17 COMRAM     4     3      1
                _gpio_pin_initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   17111
                                             14 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       6     4      2    5270
                                              8 COMRAM     6     4      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          2     1      1    4876
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  3     2      1    6207
                                              8 COMRAM     3     2      1
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    4480
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        7     6      1     429
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _ecu_layer_initialize
       _lcd_4bit_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send_enable_signal
             _gpio_pin_write_logic
           _lcd_send_4bits
             _gpio_pin_write_logic
       _lcd_8bit_initialize
         _gpio_pin_initialize
         _lcd_8bit_send_command
           _gpio_pin_write_logic
           _lcd_8bit_send_enable_signal
             _gpio_pin_write_logic
   _battary_charging2
     _lcd_4bit_send_custom_char_pos
       _lcd_4bit_send_char_data
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_signal
         _lcd_send_4bits
       _lcd_4bit_send_char_data_pos
         _lcd_4bit_send_char_data
         _lcd_4bit_set_cursor
           _lcd_4bit_send_command
       _lcd_4bit_send_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      1A       5       20.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     26      7B       1       96.9%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      95      39        0.0%
DATA                 0      0      95       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Feb 01 05:38:50 2024

     lcd_4bit_send_custom_char_pos@column 006C      lcd_4bit_send_custom_char_pos@mem_pos 006E  
                         ?_lcd_send_4bits 0056                                       l211 116A  
                                     l212 116C                                       l410 14D0  
                                     l243 16DC                                       l411 14D2  
                                     l403 17C4                                       l228 12AE  
                                     l244 16DE                                       l404 17C6  
                                     l332 1A76                                       l229 12B0  
                                     l333 1A76                                       l166 1A6C  
                                     l327 13EC                                       l417 1752  
                                     l418 1754                                       l338 1A82  
                                     l373 18DE                                       l374 18E0  
                                     l471 1826                                       l383 1A3A  
                                     l472 1828                                       l368 15B6  
                                     l384 1A3C                                       l369 15B8  
                                     l481 19C0                                       l482 19C2  
                                     l378 1882                                       l379 1884  
                                     l476 19FE                                       l477 1A00  
                                     l493 1662                                       l494 1664  
                                     _ret 0074       __end_of_lcd_4bit_send_enable_signal 1A02  
             _lcd_4bit_send_enable_signal 19C4                       led_initialize@F3059 007B  
                                     wreg 0FE8                     relay_initialize@F3057 0077  
             lcd_send_4bits@_data_command 0057                                      l2201 17DC  
                                    l2211 180E                                      l2221 19E0  
                                    l2213 1822                                      l2301 1740  
                                    l2231 103C                                      l2223 19E8  
                                    l2207 17E0                                      l2303 174E  
                                    l2311 187E                                      l3015 1638  
                                    l2233 1058                                      l2241 1122  
                                    l3017 1298                                      l2225 19FA  
                                    l2217 19C4                                      l2209 180C  
                                    l2401 1452                                      l2321 15E8  
                                    l3019 1154                                      l2243 112A  
                                    l2171 116E                                      l2219 19D4  
                                    l2411 1496                                      l2403 146C  
                                    l2307 182A                                      l2323 15FC  
                                    l2331 165E                                      l2315 15BA  
                                    l2237 107C                                      l2229 1028  
                                    l2181 11D6                                      l2173 1182  
                                    l2253 1886                                      l2341 14E8  
                                    l2261 1986                                      l2413 14A2  
                                    l2405 1472                                      l2309 183A  
                                    l2325 1610                                      l2317 15CE  
                                    l2501 137A                                      l2239 10D2  
                                    l2183 122C                                      l2175 119E  
                                    l2255 1896                                      l2351 150C  
                                    l2343 14FC                                      l2263 1996  
                                    l2415 14AE                                      l2407 147E  
                                    l2431 1A58                                      l2511 1A7E  
                                    l2319 15D4                                      l2423 1A02  
                                    l2503 13AA                                      l2177 11BE  
                                    l2185 127C                                      l2281 16D8  
                                    l2273 1666                                      l2257 18DA  
                                    l2361 1552                                      l2353 150E  
                                    l2265 19A2                                      l2417 14BA  
                                    l2409 148A                                      l2433 1A58  
                                    l2513 1A7E                                      l2329 1624  
                                    l2425 1A12                                      l2505 13C4  
                                    l2187 1284                                      l2275 1676  
                                    l2371 1588                                      l2363 1558  
                                    l2355 151E                                      l2339 14D4  
                                    l2267 19AA                                      l2419 14CC  
                                    l2435 1A60                                      l2427 1A36  
                                    l2507 13DA                                      l2277 1692  
                                    l2373 1594                                      l2365 1564  
                                    l2357 152C                                      l2349 1500  
                                    l2269 19BC                                      l2285 16E0  
                                    l2381 13EE                                      l2461 1756  
                                    l2509 13DC                                      l2279 16B2  
                                    l2199 17C8                                      l2375 15A0  
                                    l2367 1570                                      l2359 1538  
                                    l2295 1704                                      l2287 16F4  
                                    l2391 141A                                      l2383 1402  
                                    l2471 1780                                      l2463 176A  
                                    l2369 157C                                      l2377 15B2  
                                    l2297 172E                                      l2289 1700  
                                    l2393 1426                                      l2385 1416  
                                    l2473 1794                                      l2465 177C  
                                    l2299 1730                                      l2395 1428  
                                    l2475 1796                                      l2491 12D4  
                                    l2483 12B2                                      l2397 1438  
                                    l2477 17A6                                      l2493 12EA  
                                    l2399 1446                                      l2479 17C0  
                                    l2495 131A                                      l2497 1334  
                                    l2489 12BA                                      l2499 1364  
                                    l2977 1A6E                                      STR_1 1011  
                                    STR_2 101B                                      STR_3 1023  
                                    u1210 17DC                                      u1211 17D8  
                                    u1300 1140                                      u1204 124A  
                                    u1301 113A                                      u1205 1246  
                                    u1310 1142                                      u1150 1182  
                                    u1230 181E                                      u1151 117E  
                                    u1231 181A                                      u1160 119E  
                                    u1240 19D4                                      u1224 17FA  
                                    u1320 1896                                      u1400 183A  
                                    u1161 119A                                      u1241 19D0  
                                    u1225 17F6                                      u1321 1892  
                                    u1401 1836                                      u1250 103C  
                                    u1170 11BE                                      u1330 1996  
                                    u1410 15CE                                      u1251 1038  
                                    u1171 11BA                                      u1331 1992  
                                    u1411 15CA                                      u2107 133E  
                                    u1260 1058                                      u1180 11D2  
                                    u1340 1676                                      u1420 14E8  
                                    u1500 176A                                      u1261 1054  
                                    u1181 11CE                                      u1341 1672  
                                    u1421 14E4                                      u1501 1766  
                                    u2117 136E                                      _LATA 0F89  
                                    u1270 1078                                      u1350 1692  
                                    u1430 151E                                      u1510 17A6  
                                    _LATB 0F8A                                      u1271 1074  
                                    u1351 168E                                      u2207 1554  
                                    u1431 151A                                      u1511 17A2  
                                    u2127 139E                                      _LATC 0F8B  
                                    u1360 16B2                                      u1440 1402  
                                    u1520 13EC                                      _LATD 0F8C  
                                    u1361 16AE                                      u2217 19E2  
                                    u1441 13FE                                      u1521 13E8  
                                    u2137 13CE                                      _LATE 0F8D  
                                    u1194 11F4                                      u1370 16F4  
                                    u1450 1438                                      u1195 11F0  
                                    u1371 16F0                                      u2147 143E  
                                    u1451 1434                                      u1284 109A  
                                    u1460 1A12                                      u1285 1096  
                                    u2157 1458                                      u1461 1A0E  
                                    u1294 10F0                                      u1390 1740  
                                    u1295 10EC                                      u1391 173C  
                                    u2167 146E                                      u2087 12DE  
                                    u1384 171E                                      u2177 19A4  
                                    u1385 171A                                      u2097 130E  
                                    u2187 1524                                      u2197 153E  
           ??_lcd_4bit_send_enable_signal 0057                                      _lcd1 0048  
                                    _lcd2 0016                                      _led1 0015  
                                    _main 1A6E                                      fsr2h 0FDA  
                                    indf2 0FDF                                      fsr1l 0FE1  
                                    fsr2l 0FD9         lcd_4bit_send_char_data_pos@column 0067  
                                    prodl 0FF3                                      start 0000  
           __end_of_lcd_8bit_send_command 1756                              ___param_bank 0000  
                   _lcd_4bit_send_command 1886                      _gpio_pin_write_logic 116E  
                                   ?_main 004E                  ??_application_initialize 0064  
                     relay_turn_off@F3067 0075                                     _PORTA 0F80  
                                   _PORTB 0F81                                     _PORTC 0F82  
                                   _PORTD 0F83                                     _PORTE 0F84  
                                   _TRISA 0F92                                     _TRISB 0F93  
                                   _TRISC 0F94                                     _TRISD 0F95  
                                   _TRISE 0F96                 lcd_4bit_set_cursor@column 0061  
                                   tablat 0FF5                                     status 0FD8  
          ?_gpio_pin_direction_initialize 004E                           __initialization 18E2  
                            __end_of_main 1A7E                     ?_gpio_pin_write_logic 004E  
                           _lat_registers 0001       lcd_8bit_send_command@l_pins_counter 005D  
                                  ??_main 0074                             __activetblptr 0002  
                        led_turn_on@F3064 007A                    ?_lcd_4bit_send_command 005C  
                                  clear_0 1928                                    isa$std 0001  
                            __pdataCOMRAM 0001                              __mediumconst 0000  
                                  tblptrh 0FF7                                    tblptrl 0FF6  
                                  tblptru 0FF8                                __accesstop 0080  
                 __end_of__initialization 192E                             ___rparam_used 0001  
                        ??_lcd_send_4bits 0058                   _lcd_4bit_send_char_data 182A  
                  ??_gpio_pin_write_logic 0050                            __pcstackCOMRAM 004E  
       lcd_4bit_initialize@l_pins_counter 0061                              __pidataBANK0 1A3E  
         ??_lcd_4bit_send_custom_char_pos 006F                  lcd_4bit_send_command@lcd 005C  
                lcd_4bit_send_command@ret 005E           battary_charging2@l_lcd1_counter 0073  
gpio_pin_direction_initialize@_pin_config 004E              ?_lcd_4bit_send_char_data_pos 0065  
                  _application_initialize 1A7E                    lcd_8bit_initialize@lcd 005E  
                  lcd_8bit_initialize@ret 0061                         led_turn_off@F3069 0079  
            ecu_layer_initialize@ret_init 0063                             _keypad_values 1001  
                    led_turn_toggle@F3074 0078       __end_of_lcd_8bit_send_enable_signal 19C4  
             _lcd_8bit_send_enable_signal 1986            lcd_8bit_send_enable_signal@lcd 0056  
          lcd_8bit_send_enable_signal@ret 0057                            _tris_registers 000B  
               ??_lcd_4bit_send_char_data 005E             ??_lcd_8bit_send_enable_signal 0057  
                                 __Hparam 0000                                   __Lparam 0000  
                     _gpio_pin_initialize 1666                     _lcd_8bit_send_command 16E0  
                            __psmallconst 1000                                   __pcinit 18E2  
                                 __ramtop 1000                                   __ptext0 1A6E  
                                 __ptext1 12B2                                   __ptext2 1756  
                                 __ptext3 1A02                                   __ptext4 15BA  
                                 __ptext5 182A                                   __ptext6 1A7E  
                                 __ptext7 1A58                                   __ptext8 13EE  
                                 __ptext9 16E0           ??_gpio_pin_direction_initialize 004F  
                                 _keypad1 008A     __end_of_lcd_4bit_send_custom_char_pos 17C8  
           _lcd_4bit_send_custom_char_pos 1756                      ?_gpio_pin_initialize 0056  
                    end_of_initialization 192E                         lcd_send_4bits@lcd 0056  
                       lcd_send_4bits@ret 005A                             __Lmediumconst 0000  
                 ??_lcd_4bit_send_command 005E                                   postdec1 0FE5  
                                 postdec2 0FDD                                   postinc0 0FEE  
                                 postinc2 0FDE                       _lcd_4bit_initialize 14D4  
         __end_of_lcd_4bit_send_char_data 1886                lcd_4bit_send_char_data@lcd 005C  
              lcd_4bit_send_char_data@ret 005E                     ??_gpio_pin_initialize 0057  
         lcd_4bit_send_char_data_pos@data 0068                      ?_lcd_4bit_initialize 005F  
                     _lcd_4bit_set_cursor 15BA                        relay_turn_on@F3062 0076  
                  ?_lcd_8bit_send_command 0058                             __pidataCOMRAM 1938  
                     start_initialization 18E2              ?_lcd_4bit_send_enable_signal 0056  
                    ?_lcd_4bit_set_cursor 005F                       _lcd_8bit_initialize 13EE  
   __end_of_gpio_pin_direction_initialize 116E             _gpio_pin_direction_initialize 1028  
                 ?_application_initialize 004E            ?_lcd_4bit_send_custom_char_pos 006A  
                   ??_lcd_4bit_initialize 0060                      ?_lcd_8bit_initialize 005E  
                             __pdataBANK0 0080              __end_of_ecu_layer_initialize 1A6E  
            lcd_4bit_send_command@command 005D                  lcd_8bit_send_command@lcd 0058  
                lcd_8bit_send_command@ret 005C                               __pbssCOMRAM 0074  
                   ??_lcd_4bit_set_cursor 0062            __end_of_application_initialize 1A84  
                   ??_lcd_8bit_initialize 005F           gpio_pin_write_logic@_pin_config 004E  
               gpio_pin_write_logic@logic 004F                               __smallconst 1000  
           __end_of_lcd_4bit_send_command 18E2          gpio_pin_direction_initialize@ret 0054  
        lcd_4bit_send_custom_char_pos@lcd 006A          lcd_4bit_send_custom_char_pos@ret 006F  
        lcd_4bit_send_custom_char_pos@row 006B            lcd_4bit_send_char_data_pos@lcd 0065  
          lcd_4bit_send_char_data_pos@ret 0069  lcd_4bit_send_custom_char_pos@lcd_counter 0070  
          lcd_4bit_send_char_data_pos@row 0066                    gpio_pin_initialize@ret 0058  
     __end_of_lcd_4bit_send_char_data_pos 1A3E               _lcd_4bit_send_char_data_pos 1A02  
                 gpio_pin_write_logic@ret 0055                  ?_lcd_4bit_send_char_data 005C  
                               copy_data0 18F6                                 copy_data1 1916  
                    _ecu_layer_initialize 1A58             ??_lcd_4bit_send_char_data_pos 0069  
                 ??_lcd_8bit_send_command 005A                                  __Hrparam 0000  
                                __Lrparam 0000                    lcd_4bit_set_cursor@lcd 005F  
                  lcd_4bit_set_cursor@ret 0064                    lcd_4bit_set_cursor@row 0060  
                       _battary_charging2 12B2               __end_of_gpio_pin_initialize 16E0  
                      ?_battary_charging2 004E            gpio_pin_initialize@_pin_config 0056  
                             _customChar1 0040                               _customChar2 0038  
                             _customChar3 0030                               _customChar4 0028  
                             _customChar5 0020                               _customChar6 0092  
                                __ptext10 1986                                  __ptext11 14D4  
                                __ptext12 1886                                  __ptext13 17C8  
                                __ptext14 19C4                                  __ptext15 1666  
                                __ptext16 116E                                  __ptext17 1028  
                     ??_battary_charging2 0071                     ?_ecu_layer_initialize 004E  
                                isa$xinst 0000                 __end_of_battary_charging2 13EE  
                          _lcd_send_4bits 17C8                     __end_of_keypad_values 1011  
             __end_of_lcd_4bit_initialize 15BA              __end_of_gpio_pin_write_logic 12B2  
            ?_lcd_8bit_send_enable_signal 0056            lcd_4bit_send_enable_signal@lcd 0056  
          lcd_4bit_send_enable_signal@ret 0057                    __end_of_lcd_send_4bits 182A  
             __end_of_lcd_4bit_set_cursor 1666                            _port_registers 0080  
       lcd_8bit_initialize@l_pins_counter 0060                    ??_ecu_layer_initialize 0063  
             __end_of_lcd_8bit_initialize 14D4              lcd_8bit_send_command@command 0059  
             lcd_4bit_send_char_data@data 005D              lcd_send_4bits@l_pins_counter 005B  
                  lcd_4bit_initialize@lcd 005F                    lcd_4bit_initialize@ret 0062  
      lcd_4bit_send_custom_char_pos@_char 006D  
