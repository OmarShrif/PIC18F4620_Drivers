

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Sep 12 01:50:56 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,inline
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,inline
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,inline
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60   000000                     
    61                           ; Generated 17/10/2023 GMT
    62                           ; 
    63                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F4620 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95   000000                     
    96                           	psect	idataCOMRAM
    97   002474                     __pidataCOMRAM:
    98                           	callstack 0
    99                           
   100                           ;initializer for _lat_registers
   101   002474  89                 	db	137
   102   002475  0F                 	db	15
   103   002476  8A                 	db	138
   104   002477  0F                 	db	15
   105   002478  8B                 	db	139
   106   002479  0F                 	db	15
   107   00247A  8C                 	db	140
   108   00247B  0F                 	db	15
   109   00247C  8D                 	db	141
   110   00247D  0F                 	db	15
   111                           
   112                           ;initializer for _motor1
   113   00247E  02                 	db	2
   114   00247F  0A                 	db	10
   115                           
   116                           ;initializer for _ret
   117   002480  01                 	db	1
   118                           
   119                           ;initializer for _led1
   120   002481  02                 	db	2
   121                           
   122                           ;initializer for _lcd1
   123   002482  02                 	db	2
   124   002483  0A                 	db	10
   125   002484  12                 	db	18
   126   002485  1A                 	db	26
   127   002486  22                 	db	34
   128   002487  2A                 	db	42
   129                           
   130                           ;initializer for _adc1
   131   002488  05                 	db	5
   132   002489  05                 	db	5
   133   00248A  00                 	db	0
   134   00248B  02                 	db	2
   135                           
   136                           	psect	idataBANK0
   137   0023BC                     __pidataBANK0:
   138                           	callstack 0
   139                           
   140                           ;initializer for _port_registers
   141   0023BC  80                 	db	128
   142   0023BD  0F                 	db	15
   143   0023BE  81                 	db	129
   144   0023BF  0F                 	db	15
   145   0023C0  82                 	db	130
   146   0023C1  0F                 	db	15
   147   0023C2  83                 	db	131
   148   0023C3  0F                 	db	15
   149   0023C4  84                 	db	132
   150   0023C5  0F                 	db	15
   151                           
   152                           ;initializer for _tris_registers
   153   0023C6  92                 	db	146
   154   0023C7  0F                 	db	15
   155   0023C8  93                 	db	147
   156   0023C9  0F                 	db	15
   157   0023CA  94                 	db	148
   158   0023CB  0F                 	db	15
   159   0023CC  95                 	db	149
   160   0023CD  0F                 	db	15
   161   0023CE  96                 	db	150
   162   0023CF  0F                 	db	15
   163                           
   164                           ;initializer for _lcd2
   165   0023D0  32                 	db	50
   166   0023D1  3A                 	db	58
   167   0023D2  03                 	db	3
   168   0023D3  0B                 	db	11
   169   0023D4  13                 	db	19
   170   0023D5  1B                 	db	27
   171   0023D6  23                 	db	35
   172   0023D7  2B                 	db	43
   173   0023D8  33                 	db	51
   174   0023D9  3B                 	db	59
   175                           
   176                           ;initializer for _keypad1
   177   0023DA  02                 	db	2
   178   0023DB  0A                 	db	10
   179   0023DC  12                 	db	18
   180   0023DD  1A                 	db	26
   181   0023DE  62                 	db	98
   182   0023DF  6A                 	db	106
   183   0023E0  72                 	db	114
   184   0023E1  7A                 	db	122
   185                           
   186                           ;initializer for _segment1
   187   0023E2  02                 	db	2
   188   0023E3  0A                 	db	10
   189   0023E4  12                 	db	18
   190   0023E5  1A                 	db	26
   191   0023E6  00                 	db	0
   192                           
   193                           ;initializer for _btn1
   194   0023E7  4B                 	db	75
   195   0023E8  00                 	db	0
   196   0023E9  01                 	db	1
   197                           
   198                           	psect	smallconst
   199   001000                     __psmallconst:
   200                           	callstack 0
   201   001000  00                 	db	0
   202   001001                     _keypad_values:
   203                           	callstack 0
   204   001001  37                 	db	55
   205   001002  38                 	db	56
   206   001003  39                 	db	57
   207   001004  2F                 	db	47
   208   001005  34                 	db	52
   209   001006  35                 	db	53
   210   001007  36                 	db	54
   211   001008  2A                 	db	42
   212   001009  31                 	db	49
   213   00100A  32                 	db	50
   214   00100B  33                 	db	51
   215   00100C  2D                 	db	45
   216   00100D  63                 	db	99
   217   00100E  30                 	db	48
   218   00100F  3D                 	db	61
   219   001010  2B                 	db	43
   220   001011                     __end_of_keypad_values:
   221                           	callstack 0
   222   000000                     _INTCON2bits	set	4081
   223   000000                     _EECON2	set	4007
   224   000000                     _ADRESL	set	4035
   225   000000                     _ADRESH	set	4036
   226   000000                     _TRISD	set	3989
   227   000000                     _TRISC	set	3988
   228   000000                     _TRISB	set	3987
   229   000000                     _TRISE	set	3990
   230   000000                     _PORTBbits	set	3969
   231   000000                     _ADCON2bits	set	4032
   232   000000                     _ADCON1bits	set	4033
   233   000000                     _ADCON0bits	set	4034
   234   000000                     _PORTE	set	3972
   235   000000                     _PORTD	set	3971
   236   000000                     _PORTC	set	3970
   237   000000                     _PORTB	set	3969
   238   000000                     _PORTA	set	3968
   239   000000                     _LATA	set	3977
   240   000000                     _TRISA	set	3986
   241   000000                     _RCONbits	set	4048
   242   000000                     _INTCON3bits	set	4080
   243   000000                     _INTCONbits	set	4082
   244   000000                     _EECON1bits	set	4006
   245   000000                     _EEDATA	set	4008
   246   000000                     _EEADR	set	4009
   247   000000                     _EEADRH	set	4010
   248   000000                     _LATE	set	3981
   249   000000                     _LATD	set	3980
   250   000000                     _LATC	set	3979
   251   000000                     _LATB	set	3978
   252   001011                     STR_4:
   253   001011  41                 	db	65	;'A'
   254   001012  44                 	db	68	;'D'
   255   001013  43                 	db	67	;'C'
   256   001014  20                 	db	32
   257   001015  54                 	db	84	;'T'
   258   001016  65                 	db	101	;'e'
   259   001017  73                 	db	115	;'s'
   260   001018  74                 	db	116	;'t'
   261   001019  00                 	db	0
   262   00101A                     STR_5:
   263   00101A  50                 	db	80	;'P'
   264   00101B  6F                 	db	111	;'o'
   265   00101C  74                 	db	116	;'t'
   266   00101D  30                 	db	48	;'0'
   267   00101E  3A                 	db	58	;':'
   268   00101F  20                 	db	32
   269   001020  00                 	db	0
   270   001021                     STR_6:
   271   001021  50                 	db	80	;'P'
   272   001022  6F                 	db	111	;'o'
   273   001023  74                 	db	116	;'t'
   274   001024  31                 	db	49	;'1'
   275   001025  3A                 	db	58	;':'
   276   001026  20                 	db	32
   277   001027  00                 	db	0
   278   001028                     STR_7:
   279   001028  50                 	db	80	;'P'
   280   001029  6F                 	db	111	;'o'
   281   00102A  74                 	db	116	;'t'
   282   00102B  32                 	db	50	;'2'
   283   00102C  3A                 	db	58	;':'
   284   00102D  20                 	db	32
   285   00102E  00                 	db	0
   286   00102F                     STR_8:
   287   00102F  50                 	db	80	;'P'
   288   001030  6F                 	db	111	;'o'
   289   001031  74                 	db	116	;'t'
   290   001032  33                 	db	51	;'3'
   291   001033  3A                 	db	58	;':'
   292   001034  20                 	db	32
   293   001035  00                 	db	0
   294   001036                     STR_1:
   295   001036  25                 	db	37
   296   001037  69                 	db	105	;'i'
   297   001038  00                 	db	0
   298   001039  00                 	db	0	; dummy byte at the end
   299   000000                     
   300                           ; #config settings
   301                           
   302                           	psect	cinit
   303   001F98                     __pcinit:
   304                           	callstack 0
   305   001F98                     start_initialization:
   306                           	callstack 0
   307   001F98                     __initialization:
   308                           	callstack 0
   309                           
   310                           ; Initialize objects allocated to BANK0 (46 bytes)
   311                           ; load TBLPTR registers with __pidataBANK0
   312   001F98  0EBC               	movlw	low __pidataBANK0
   313   001F9A  6EF6               	movwf	tblptrl,c
   314   001F9C  0E23               	movlw	high __pidataBANK0
   315   001F9E  6EF7               	movwf	tblptrh,c
   316   001FA0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   317   001FA2  6EF8               	movwf	tblptru,c
   318   001FA4  EE00  F0B8         	lfsr	0,__pdataBANK0
   319   001FA8  EE10 F02E          	lfsr	1,46
   320   001FAC                     copy_data0:
   321   001FAC  0009               	tblrd		*+
   322   001FAE  CFF5 FFEE          	movff	tablat,postinc0
   323   001FB2  50E5               	movf	postdec1,w,c
   324   001FB4  50E1               	movf	fsr1l,w,c
   325   001FB6  E1FA               	bnz	copy_data0
   326                           
   327                           ; Initialize objects allocated to COMRAM (24 bytes)
   328                           ; load TBLPTR registers with __pidataCOMRAM
   329   001FB8  0E74               	movlw	low __pidataCOMRAM
   330   001FBA  6EF6               	movwf	tblptrl,c
   331   001FBC  0E24               	movlw	high __pidataCOMRAM
   332   001FBE  6EF7               	movwf	tblptrh,c
   333   001FC0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   334   001FC2  6EF8               	movwf	tblptru,c
   335   001FC4  EE00  F065         	lfsr	0,__pdataCOMRAM
   336   001FC8  EE10 F018          	lfsr	1,24
   337   001FCC                     copy_data1:
   338   001FCC  0009               	tblrd		*+
   339   001FCE  CFF5 FFEE          	movff	tablat,postinc0
   340   001FD2  50E5               	movf	postdec1,w,c
   341   001FD4  50E1               	movf	fsr1l,w,c
   342   001FD6  E1FA               	bnz	copy_data1
   343                           
   344                           ; Clear objects allocated to BANK0 (56 bytes)
   345   001FD8  EE00  F080         	lfsr	0,__pbssBANK0
   346   001FDC  0E38               	movlw	56
   347   001FDE                     clear_0:
   348   001FDE  6AEE               	clrf	postinc0,c
   349   001FE0  06E8               	decf	wreg,f,c
   350   001FE2  E1FD               	bnz	clear_0
   351                           
   352                           ; Clear objects allocated to COMRAM (48 bytes)
   353   001FE4  EE00  F035         	lfsr	0,__pbssCOMRAM
   354   001FE8  0E30               	movlw	48
   355   001FEA                     clear_1:
   356   001FEA  6AEE               	clrf	postinc0,c
   357   001FEC  06E8               	decf	wreg,f,c
   358   001FEE  E1FD               	bnz	clear_1
   359   001FF0                     end_of_initialization:
   360                           	callstack 0
   361   001FF0                     __end_of__initialization:
   362                           	callstack 0
   363   001FF0  907D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   364   001FF2  927D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   365   001FF4  0100               	movlb	0
   366   001FF6  EF20  F00A         	goto	_main	;jump to C main() function
   367                           
   368                           	psect	bssCOMRAM
   369   000035                     __pbssCOMRAM:
   370                           	callstack 0
   371   000035                     _width:
   372                           	callstack 0
   373   000035                     	ds	2
   374   000037                     _prec:
   375                           	callstack 0
   376   000037                     	ds	2
   377   000039                     _RB7_High_InterruptHandler:
   378                           	callstack 0
   379   000039                     	ds	2
   380   00003B                     _RB7_Low_InterruptHandler:
   381                           	callstack 0
   382   00003B                     	ds	2
   383   00003D                     _RB6_High_InterruptHandler:
   384                           	callstack 0
   385   00003D                     	ds	2
   386   00003F                     _RB6_Low_InterruptHandler:
   387                           	callstack 0
   388   00003F                     	ds	2
   389   000041                     _RB5_High_InterruptHandler:
   390                           	callstack 0
   391   000041                     	ds	2
   392   000043                     _RB5_Low_InterruptHandler:
   393                           	callstack 0
   394   000043                     	ds	2
   395   000045                     _RB4_High_InterruptHandler:
   396                           	callstack 0
   397   000045                     	ds	2
   398   000047                     _RB4_Low_InterruptHandler:
   399                           	callstack 0
   400   000047                     	ds	2
   401   000049                     _INT2_InterruptHandler:
   402                           	callstack 0
   403   000049                     	ds	2
   404   00004B                     _INT1_InterruptHandler:
   405                           	callstack 0
   406   00004B                     	ds	2
   407   00004D                     _INT0_InterruptHandler:
   408                           	callstack 0
   409   00004D                     	ds	2
   410   00004F                     _flags:
   411                           	callstack 0
   412   00004F                     	ds	1
   413   000050                     _ADC_Req:
   414                           	callstack 0
   415   000050                     	ds	1
   416   000051                     _RB7_flag:
   417                           	callstack 0
   418   000051                     	ds	1
   419   000052                     _RB6_flag:
   420                           	callstack 0
   421   000052                     	ds	1
   422   000053                     _RB5_flag:
   423                           	callstack 0
   424   000053                     	ds	1
   425   000054                     _RB4_flag:
   426                           	callstack 0
   427   000054                     	ds	1
   428   000055                     _relay1:
   429                           	callstack 0
   430   000055                     	ds	1
   431   000056                     relay_turn_off@F3070:
   432                           	callstack 0
   433   000056                     	ds	1
   434   000057                     relay_turn_on@F3065:
   435                           	callstack 0
   436   000057                     	ds	1
   437   000058                     relay_initialize@F3060:
   438                           	callstack 0
   439   000058                     	ds	1
   440   000059                     led_turn_toggle@F3077:
   441                           	callstack 0
   442   000059                     	ds	1
   443   00005A                     led_turn_off@F3072:
   444                           	callstack 0
   445   00005A                     	ds	1
   446   00005B                     led_turn_on@F3067:
   447                           	callstack 0
   448   00005B                     	ds	1
   449   00005C                     led_initialize@F3062:
   450                           	callstack 0
   451   00005C                     	ds	1
   452   00005D                     _adc_res_4:
   453                           	callstack 0
   454   00005D                     	ds	2
   455   00005F                     _adc_res_3:
   456                           	callstack 0
   457   00005F                     	ds	2
   458   000061                     _adc_res_2:
   459                           	callstack 0
   460   000061                     	ds	2
   461   000063                     _adc_res_1:
   462                           	callstack 0
   463   000063                     	ds	2
   464                           
   465                           	psect	dataCOMRAM
   466   000065                     __pdataCOMRAM:
   467                           	callstack 0
   468   000065                     _lat_registers:
   469                           	callstack 0
   470   000065                     	ds	10
   471   00006F                     _motor1:
   472                           	callstack 0
   473   00006F                     	ds	2
   474   000071                     _ret:
   475                           	callstack 0
   476   000071                     	ds	1
   477   000072                     _led1:
   478                           	callstack 0
   479   000072                     	ds	1
   480   000073                     _lcd1:
   481                           	callstack 0
   482   000073                     	ds	6
   483   000079                     _adc1:
   484                           	callstack 0
   485   000079                     	ds	4
   486                           
   487                           	psect	bssBANK0
   488   000080                     __pbssBANK0:
   489                           	callstack 0
   490   000080                     _dbuf:
   491                           	callstack 0
   492   000080                     	ds	32
   493   0000A0                     _adc_res_4_txt:
   494                           	callstack 0
   495   0000A0                     	ds	6
   496   0000A6                     _adc_res_3_txt:
   497                           	callstack 0
   498   0000A6                     	ds	6
   499   0000AC                     _adc_res_2_txt:
   500                           	callstack 0
   501   0000AC                     	ds	6
   502   0000B2                     _adc_res_1_txt:
   503                           	callstack 0
   504   0000B2                     	ds	6
   505                           
   506                           	psect	dataBANK0
   507   0000B8                     __pdataBANK0:
   508                           	callstack 0
   509   0000B8                     _port_registers:
   510                           	callstack 0
   511   0000B8                     	ds	10
   512   0000C2                     _tris_registers:
   513                           	callstack 0
   514   0000C2                     	ds	10
   515   0000CC                     _lcd2:
   516                           	callstack 0
   517   0000CC                     	ds	10
   518   0000D6                     _keypad1:
   519                           	callstack 0
   520   0000D6                     	ds	8
   521   0000DE                     _segment1:
   522                           	callstack 0
   523   0000DE                     	ds	5
   524   0000E3                     _btn1:
   525                           	callstack 0
   526   0000E3                     	ds	3
   527                           
   528                           	psect	cstackCOMRAM
   529   000001                     __pcstackCOMRAM:
   530                           	callstack 0
   531   000001                     RB4_ISR@source:
   532                           	callstack 0
   533   000001                     RB5_ISR@source:
   534                           	callstack 0
   535   000001                     RB6_ISR@source:
   536                           	callstack 0
   537   000001                     RB7_ISR@source:
   538                           	callstack 0
   539   000001                     
   540                           ; 1 bytes @ 0x0
   541   000001                     	ds	1
   542   000002                     ??_InterruptManagerLow:
   543                           
   544                           ; 1 bytes @ 0x1
   545   000002                     	ds	1
   546   000003                     ??_adc_input_channel_port_configure:
   547   000003                     ?___awdiv:
   548                           	callstack 0
   549   000003                     ?___awmod:
   550                           	callstack 0
   551   000003                     adc_StartConversion@_adc:
   552                           	callstack 0
   553   000003                     adc_GetConversionResult@_adc:
   554                           	callstack 0
   555   000003                     select_result_format@_adc:
   556                           	callstack 0
   557   000003                     configure_voltage_reference@_adc:
   558                           	callstack 0
   559   000003                     gpio_pin_direction_initialize@_pin_config:
   560                           	callstack 0
   561   000003                     gpio_pin_write_logic@_pin_config:
   562                           	callstack 0
   563   000003                     memset@dest:
   564                           	callstack 0
   565   000003                     ___awdiv@dividend:
   566                           	callstack 0
   567   000003                     ___awmod@dividend:
   568                           	callstack 0
   569   000003                     fputc@c:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x2
   573   000003                     	ds	1
   574   000004                     ??_gpio_pin_direction_initialize:
   575   000004                     adc_StartConversion@ret:
   576                           	callstack 0
   577   000004                     adc_GetConversionResult@conversion_result:
   578                           	callstack 0
   579   000004                     select_result_format@ret:
   580                           	callstack 0
   581   000004                     configure_voltage_reference@ret:
   582                           	callstack 0
   583   000004                     gpio_pin_write_logic@logic:
   584                           	callstack 0
   585   000004                     memset@c:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x3
   589   000004                     	ds	1
   590   000005                     ??_gpio_pin_write_logic:
   591   000005                     ??_adc_GetConversionResult:
   592   000005                     adc_input_channel_port_configure@channel:
   593                           	callstack 0
   594   000005                     fputc@fp:
   595                           	callstack 0
   596   000005                     ___awdiv@divisor:
   597                           	callstack 0
   598   000005                     ___awmod@divisor:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x4
   602   000005                     	ds	1
   603   000006                     ??_fputc:
   604   000006                     adc_SelectChannel@_adc:
   605                           	callstack 0
   606   000006                     memset@n:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x5
   610   000006                     	ds	1
   611   000007                     adc_SelectChannel@channel:
   612                           	callstack 0
   613   000007                     ___awdiv@counter:
   614                           	callstack 0
   615   000007                     ___awmod@counter:
   616                           	callstack 0
   617                           
   618                           ; 1 bytes @ 0x6
   619   000007                     	ds	1
   620   000008                     ??_adc_SelectChannel:
   621   000008                     adc_GetConversionResult@ret:
   622                           	callstack 0
   623   000008                     ___awdiv@sign:
   624                           	callstack 0
   625   000008                     ___awmod@sign:
   626                           	callstack 0
   627   000008                     memset@p:
   628                           	callstack 0
   629                           
   630                           ; 1 bytes @ 0x7
   631   000008                     	ds	1
   632   000009                     ?_abs:
   633                           	callstack 0
   634   000009                     adc_SelectChannel@ret:
   635                           	callstack 0
   636   000009                     gpio_pin_direction_initialize@ret:
   637                           	callstack 0
   638   000009                     ___awdiv@quotient:
   639                           	callstack 0
   640   000009                     abs@a:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x8
   644   000009                     	ds	1
   645   00000A                     adc_Init@_adc:
   646                           	callstack 0
   647   00000A                     adc_GetConversion_Blocking@_adc:
   648                           	callstack 0
   649   00000A                     gpio_pin_write_logic@ret:
   650                           	callstack 0
   651                           
   652                           ; 1 bytes @ 0x9
   653   00000A                     	ds	1
   654   00000B                     ??_abs:
   655   00000B                     ??_adc_Init:
   656   00000B                     lcd_send_4bits@lcd:
   657                           	callstack 0
   658   00000B                     lcd_4bit_send_enable_signal@lcd:
   659                           	callstack 0
   660   00000B                     adc_GetConversion_Blocking@channel:
   661                           	callstack 0
   662   00000B                     gpio_pin_initialize@_pin_config:
   663                           	callstack 0
   664                           
   665                           ; 1 bytes @ 0xA
   666   00000B                     	ds	1
   667   00000C                     ??_gpio_pin_initialize:
   668   00000C                     lcd_send_4bits@_data_command:
   669                           	callstack 0
   670   00000C                     lcd_4bit_send_enable_signal@ret:
   671                           	callstack 0
   672   00000C                     adc_Init@ret:
   673                           	callstack 0
   674   00000C                     adc_GetConversion_Blocking@conversion_result:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0xB
   678   00000C                     	ds	1
   679   00000D                     ??_lcd_send_4bits:
   680   00000D                     adc_GetConversion_Blocking@ret:
   681                           	callstack 0
   682   00000D                     gpio_pin_initialize@ret:
   683                           	callstack 0
   684   00000D                     vfpfcnvrt@fp:
   685                           	callstack 0
   686                           
   687                           ; 1 bytes @ 0xC
   688   00000D                     	ds	1
   689   00000E                     vfpfcnvrt@fmt:
   690                           	callstack 0
   691                           
   692                           ; 1 bytes @ 0xD
   693   00000E                     	ds	1
   694   00000F                     lcd_send_4bits@ret:
   695                           	callstack 0
   696   00000F                     vfpfcnvrt@ap:
   697                           	callstack 0
   698                           
   699                           ; 1 bytes @ 0xE
   700   00000F                     	ds	1
   701   000010                     ??_vfpfcnvrt:
   702   000010                     lcd_send_4bits@l_pins_counter:
   703                           	callstack 0
   704                           
   705                           ; 1 bytes @ 0xF
   706   000010                     	ds	1
   707   000011                     lcd_4bit_send_command@lcd:
   708                           	callstack 0
   709   000011                     lcd_4bit_send_char_data@lcd:
   710                           	callstack 0
   711   000011                     vfpfcnvrt@done:
   712                           	callstack 0
   713                           
   714                           ; 1 bytes @ 0x10
   715   000011                     	ds	1
   716   000012                     lcd_4bit_send_command@command:
   717                           	callstack 0
   718   000012                     lcd_4bit_send_char_data@data:
   719                           	callstack 0
   720   000012                     vfpfcnvrt@cp:
   721                           	callstack 0
   722                           
   723                           ; 1 bytes @ 0x11
   724   000012                     	ds	1
   725   000013                     lcd_4bit_send_command@ret:
   726                           	callstack 0
   727   000013                     lcd_4bit_send_char_data@ret:
   728                           	callstack 0
   729   000013                     vfpfcnvrt@convarg:
   730                           	callstack 0
   731                           
   732                           ; 4 bytes @ 0x12
   733   000013                     	ds	1
   734   000014                     lcd_4bit_initialize@lcd:
   735                           	callstack 0
   736   000014                     lcd_4bit_send_string@lcd:
   737                           	callstack 0
   738   000014                     lcd_4bit_set_cursor@lcd:
   739                           	callstack 0
   740                           
   741                           ; 1 bytes @ 0x13
   742   000014                     	ds	1
   743   000015                     ??_lcd_4bit_initialize:
   744   000015                     lcd_4bit_set_cursor@row:
   745                           	callstack 0
   746   000015                     lcd_4bit_send_string@str:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x14
   750   000015                     	ds	1
   751   000016                     lcd_4bit_initialize@l_pins_counter:
   752                           	callstack 0
   753   000016                     lcd_4bit_set_cursor@column:
   754                           	callstack 0
   755                           
   756                           ; 1 bytes @ 0x15
   757   000016                     	ds	1
   758   000017                     lcd_4bit_initialize@ret:
   759                           	callstack 0
   760   000017                     lcd_4bit_send_string@ret:
   761                           	callstack 0
   762   000017                     lcd_4bit_set_cursor@ret:
   763                           	callstack 0
   764   000017                     vfpfcnvrt@c:
   765                           	callstack 0
   766                           
   767                           ; 1 bytes @ 0x16
   768   000017                     	ds	1
   769   000018                     ?_vfprintf:
   770                           	callstack 0
   771   000018                     lcd_4bit_send_string_at_pos@lcd:
   772                           	callstack 0
   773   000018                     ecu_layer_initialize@ret_init:
   774                           	callstack 0
   775   000018                     vfprintf@fp:
   776                           	callstack 0
   777                           
   778                           ; 1 bytes @ 0x17
   779   000018                     	ds	1
   780   000019                     lcd_4bit_send_string_at_pos@row:
   781                           	callstack 0
   782   000019                     vfprintf@fmt:
   783                           	callstack 0
   784                           
   785                           ; 1 bytes @ 0x18
   786   000019                     	ds	1
   787   00001A                     lcd_4bit_send_string_at_pos@column:
   788                           	callstack 0
   789   00001A                     vfprintf@ap:
   790                           	callstack 0
   791                           
   792                           ; 1 bytes @ 0x19
   793   00001A                     	ds	1
   794   00001B                     vfprintf@cfmt:
   795                           	callstack 0
   796   00001B                     lcd_4bit_send_string_at_pos@str:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x1A
   800   00001B                     	ds	1
   801   00001C                     ?_sprintf:
   802                           	callstack 0
   803   00001C                     sprintf@s:
   804                           	callstack 0
   805                           
   806                           ; 1 bytes @ 0x1B
   807   00001C                     	ds	1
   808   00001D                     lcd_4bit_send_string_at_pos@ret:
   809                           	callstack 0
   810   00001D                     sprintf@fmt:
   811                           	callstack 0
   812                           
   813                           ; 1 bytes @ 0x1C
   814   00001D                     	ds	5
   815   000022                     sprintf@ap:
   816                           	callstack 0
   817                           
   818                           ; 1 bytes @ 0x21
   819   000022                     	ds	1
   820   000023                     sprintf@f:
   821                           	callstack 0
   822                           
   823                           ; 12 bytes @ 0x22
   824   000023                     	ds	12
   825   00002F                     convert_uint16_to_string@value:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x2E
   829   00002F                     	ds	2
   830   000031                     convert_uint16_to_string@str:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0x30
   834   000031                     	ds	1
   835   000032                     convert_uint16_to_string@ret:
   836                           	callstack 0
   837                           
   838                           ; 1 bytes @ 0x31
   839   000032                     	ds	1
   840   000033                     ??_main:
   841                           
   842                           ; 1 bytes @ 0x32
   843   000033                     	ds	2
   844                           
   845 ;;
   846 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   847 ;;
   848 ;; *************** function _main *****************
   849 ;; Defined at:
   850 ;;		line 38 in file "Application1.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;		None
   853 ;; Auto vars:     Size  Location     Type
   854 ;;		None
   855 ;; Return value:  Size  Location     Type
   856 ;;                  2  928[None  ] int 
   857 ;; Registers used:
   858 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   866 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   867 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   868 ;;Total ram usage:        2 bytes
   869 ;; Hardware stack levels required when called: 10
   870 ;; This function calls:
   871 ;;		_adc_GetConversion_Blocking
   872 ;;		_application_initialize
   873 ;;		_convert_uint16_to_string
   874 ;;		_lcd_4bit_send_command
   875 ;;		_lcd_4bit_send_string_at_pos
   876 ;; This function is called by:
   877 ;;		Startup code after reset
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           	psect	text0
   882   001440                     __ptext0:
   883                           	callstack 0
   884   001440                     _main:
   885                           	callstack 21
   886   001440                     
   887                           ;Application1.c: 40:     application_initialize();
   888   001440  EC46  F012         	call	_application_initialize	;wreg free
   889   001444                     
   890                           ;Application1.c: 41:     ret = lcd_4bit_send_string_at_pos(&lcd1, 1, 7, "ADC Test");
   891   001444  0E73               	movlw	low _lcd1
   892   001446  6E18               	movwf	lcd_4bit_send_string_at_pos@lcd^0,c
   893   001448  0E01               	movlw	1
   894   00144A  6E19               	movwf	lcd_4bit_send_string_at_pos@row^0,c
   895   00144C  0E07               	movlw	7
   896   00144E  6E1A               	movwf	lcd_4bit_send_string_at_pos@column^0,c
   897   001450  0E11               	movlw	low STR_4
   898   001452  6E1B               	movwf	lcd_4bit_send_string_at_pos@str^0,c
   899   001454  501B               	movf	lcd_4bit_send_string_at_pos@str^0,w,c
   900   001456  A4D8               	btfss	status,2,c
   901   001458  0E10               	movlw	high __smallconst
   902   00145A  6E1C               	movwf	(lcd_4bit_send_string_at_pos@str+1)^0,c
   903   00145C  ECE9  F010         	call	_lcd_4bit_send_string_at_pos	;wreg free
   904   001460  6E71               	movwf	_ret^0,c
   905   001462                     
   906                           ;Application1.c: 42:     _delay((unsigned long)((2000)*(8000000UL/4000.0)));
   907   001462  0E15               	movlw	21
   908   001464  6E34               	movwf	(??_main+1)^0,c
   909   001466  0E4B               	movlw	75
   910   001468  6E33               	movwf	??_main^0,c
   911   00146A  0EBE               	movlw	190
   912   00146C                     u3777:
   913   00146C  2EE8               	decfsz	wreg,f,c
   914   00146E  D7FE               	bra	u3777
   915   001470  2E33               	decfsz	??_main^0,f,c
   916   001472  D7FC               	bra	u3777
   917   001474  2E34               	decfsz	(??_main+1)^0,f,c
   918   001476  D7FA               	bra	u3777
   919   001478  D000               	nop2	
   920   00147A                     
   921                           ;Application1.c: 43:     ret = lcd_4bit_send_command(&lcd1, 0X01);
   922   00147A  0E73               	movlw	low _lcd1
   923   00147C  6E11               	movwf	lcd_4bit_send_command@lcd^0,c
   924   00147E  0E01               	movlw	1
   925   001480  6E12               	movwf	lcd_4bit_send_command@command^0,c
   926   001482  ECBB  F010         	call	_lcd_4bit_send_command	;wreg free
   927   001486  6E71               	movwf	_ret^0,c
   928   001488                     
   929                           ;Application1.c: 45:     ret = lcd_4bit_send_string_at_pos(&lcd1, 1, 1, "Pot0: ");
   930   001488  0E73               	movlw	low _lcd1
   931   00148A  6E18               	movwf	lcd_4bit_send_string_at_pos@lcd^0,c
   932   00148C  0E01               	movlw	1
   933   00148E  6E19               	movwf	lcd_4bit_send_string_at_pos@row^0,c
   934   001490  0E01               	movlw	1
   935   001492  6E1A               	movwf	lcd_4bit_send_string_at_pos@column^0,c
   936   001494  0E1A               	movlw	low STR_5
   937   001496  6E1B               	movwf	lcd_4bit_send_string_at_pos@str^0,c
   938   001498  501B               	movf	lcd_4bit_send_string_at_pos@str^0,w,c
   939   00149A  A4D8               	btfss	status,2,c
   940   00149C  0E10               	movlw	high __smallconst
   941   00149E  6E1C               	movwf	(lcd_4bit_send_string_at_pos@str+1)^0,c
   942   0014A0  ECE9  F010         	call	_lcd_4bit_send_string_at_pos	;wreg free
   943   0014A4  6E71               	movwf	_ret^0,c
   944   0014A6                     
   945                           ;Application1.c: 46:     ret = lcd_4bit_send_string_at_pos(&lcd1, 2, 1, "Pot1: ");
   946   0014A6  0E73               	movlw	low _lcd1
   947   0014A8  6E18               	movwf	lcd_4bit_send_string_at_pos@lcd^0,c
   948   0014AA  0E02               	movlw	2
   949   0014AC  6E19               	movwf	lcd_4bit_send_string_at_pos@row^0,c
   950   0014AE  0E01               	movlw	1
   951   0014B0  6E1A               	movwf	lcd_4bit_send_string_at_pos@column^0,c
   952   0014B2  0E21               	movlw	low STR_6
   953   0014B4  6E1B               	movwf	lcd_4bit_send_string_at_pos@str^0,c
   954   0014B6  501B               	movf	lcd_4bit_send_string_at_pos@str^0,w,c
   955   0014B8  A4D8               	btfss	status,2,c
   956   0014BA  0E10               	movlw	high __smallconst
   957   0014BC  6E1C               	movwf	(lcd_4bit_send_string_at_pos@str+1)^0,c
   958   0014BE  ECE9  F010         	call	_lcd_4bit_send_string_at_pos	;wreg free
   959   0014C2  6E71               	movwf	_ret^0,c
   960   0014C4                     
   961                           ;Application1.c: 47:     ret = lcd_4bit_send_string_at_pos(&lcd1, 3, 1, "Pot2: ");
   962   0014C4  0E73               	movlw	low _lcd1
   963   0014C6  6E18               	movwf	lcd_4bit_send_string_at_pos@lcd^0,c
   964   0014C8  0E03               	movlw	3
   965   0014CA  6E19               	movwf	lcd_4bit_send_string_at_pos@row^0,c
   966   0014CC  0E01               	movlw	1
   967   0014CE  6E1A               	movwf	lcd_4bit_send_string_at_pos@column^0,c
   968   0014D0  0E28               	movlw	low STR_7
   969   0014D2  6E1B               	movwf	lcd_4bit_send_string_at_pos@str^0,c
   970   0014D4  501B               	movf	lcd_4bit_send_string_at_pos@str^0,w,c
   971   0014D6  A4D8               	btfss	status,2,c
   972   0014D8  0E10               	movlw	high __smallconst
   973   0014DA  6E1C               	movwf	(lcd_4bit_send_string_at_pos@str+1)^0,c
   974   0014DC  ECE9  F010         	call	_lcd_4bit_send_string_at_pos	;wreg free
   975   0014E0  6E71               	movwf	_ret^0,c
   976   0014E2                     
   977                           ;Application1.c: 48:     ret = lcd_4bit_send_string_at_pos(&lcd1, 4, 1, "Pot3: ");
   978   0014E2  0E73               	movlw	low _lcd1
   979   0014E4  6E18               	movwf	lcd_4bit_send_string_at_pos@lcd^0,c
   980   0014E6  0E04               	movlw	4
   981   0014E8  6E19               	movwf	lcd_4bit_send_string_at_pos@row^0,c
   982   0014EA  0E01               	movlw	1
   983   0014EC  6E1A               	movwf	lcd_4bit_send_string_at_pos@column^0,c
   984   0014EE  0E2F               	movlw	low STR_8
   985   0014F0  6E1B               	movwf	lcd_4bit_send_string_at_pos@str^0,c
   986   0014F2  501B               	movf	lcd_4bit_send_string_at_pos@str^0,w,c
   987   0014F4  A4D8               	btfss	status,2,c
   988   0014F6  0E10               	movlw	high __smallconst
   989   0014F8  6E1C               	movwf	(lcd_4bit_send_string_at_pos@str+1)^0,c
   990   0014FA  ECE9  F010         	call	_lcd_4bit_send_string_at_pos	;wreg free
   991   0014FE  6E71               	movwf	_ret^0,c
   992   001500                     l4746:
   993                           
   994                           ;Application1.c: 51:     {;Application1.c: 52:         ret = adc_GetConversion_Blocking(
      +                          &adc1,ADC_CHANNEL_AN0,&adc_res_1);
   995   001500  0E79               	movlw	low _adc1
   996   001502  6E0A               	movwf	adc_GetConversion_Blocking@_adc^0,c
   997   001504  0E00               	movlw	0
   998   001506  6E0B               	movwf	adc_GetConversion_Blocking@channel^0,c
   999   001508  0E63               	movlw	low _adc_res_1
  1000   00150A  6E0C               	movwf	adc_GetConversion_Blocking@conversion_result^0,c
  1001   00150C  EC2E  F010         	call	_adc_GetConversion_Blocking	;wreg free
  1002   001510  6E71               	movwf	_ret^0,c
  1003   001512                     
  1004                           ;Application1.c: 53:         ret = adc_GetConversion_Blocking(&adc1,ADC_CHANNEL_AN1,&adc
      +                          _res_2);
  1005   001512  0E79               	movlw	low _adc1
  1006   001514  6E0A               	movwf	adc_GetConversion_Blocking@_adc^0,c
  1007   001516  0E01               	movlw	1
  1008   001518  6E0B               	movwf	adc_GetConversion_Blocking@channel^0,c
  1009   00151A  0E61               	movlw	low _adc_res_2
  1010   00151C  6E0C               	movwf	adc_GetConversion_Blocking@conversion_result^0,c
  1011   00151E  EC2E  F010         	call	_adc_GetConversion_Blocking	;wreg free
  1012   001522  6E71               	movwf	_ret^0,c
  1013   001524                     
  1014                           ;Application1.c: 54:         ret = adc_GetConversion_Blocking(&adc1,ADC_CHANNEL_AN2,&adc
      +                          _res_3);
  1015   001524  0E79               	movlw	low _adc1
  1016   001526  6E0A               	movwf	adc_GetConversion_Blocking@_adc^0,c
  1017   001528  0E02               	movlw	2
  1018   00152A  6E0B               	movwf	adc_GetConversion_Blocking@channel^0,c
  1019   00152C  0E5F               	movlw	low _adc_res_3
  1020   00152E  6E0C               	movwf	adc_GetConversion_Blocking@conversion_result^0,c
  1021   001530  EC2E  F010         	call	_adc_GetConversion_Blocking	;wreg free
  1022   001534  6E71               	movwf	_ret^0,c
  1023   001536                     
  1024                           ;Application1.c: 55:         ret = adc_GetConversion_Blocking(&adc1,ADC_CHANNEL_AN3,&adc
      +                          _res_4);
  1025   001536  0E79               	movlw	low _adc1
  1026   001538  6E0A               	movwf	adc_GetConversion_Blocking@_adc^0,c
  1027   00153A  0E03               	movlw	3
  1028   00153C  6E0B               	movwf	adc_GetConversion_Blocking@channel^0,c
  1029   00153E  0E5D               	movlw	low _adc_res_4
  1030   001540  6E0C               	movwf	adc_GetConversion_Blocking@conversion_result^0,c
  1031   001542  EC2E  F010         	call	_adc_GetConversion_Blocking	;wreg free
  1032   001546  6E71               	movwf	_ret^0,c
  1033   001548                     
  1034                           ;Application1.c: 57:         ret = convert_uint16_to_string(adc_res_1,adc_res_1_txt);
  1035   001548  C063  F02F         	movff	_adc_res_1,convert_uint16_to_string@value
  1036   00154C  C064  F030         	movff	_adc_res_1+1,convert_uint16_to_string@value+1
  1037   001550  0EB2               	movlw	low _adc_res_1_txt
  1038   001552  6E31               	movwf	convert_uint16_to_string@str^0,c
  1039   001554  EC11  F011         	call	_convert_uint16_to_string	;wreg free
  1040   001558  6E71               	movwf	_ret^0,c
  1041   00155A                     
  1042                           ;Application1.c: 58:         ret = convert_uint16_to_string(adc_res_2,adc_res_2_txt);
  1043   00155A  C061  F02F         	movff	_adc_res_2,convert_uint16_to_string@value
  1044   00155E  C062  F030         	movff	_adc_res_2+1,convert_uint16_to_string@value+1
  1045   001562  0EAC               	movlw	low _adc_res_2_txt
  1046   001564  6E31               	movwf	convert_uint16_to_string@str^0,c
  1047   001566  EC11  F011         	call	_convert_uint16_to_string	;wreg free
  1048   00156A  6E71               	movwf	_ret^0,c
  1049   00156C                     
  1050                           ;Application1.c: 59:         ret = convert_uint16_to_string(adc_res_3,adc_res_3_txt);
  1051   00156C  C05F  F02F         	movff	_adc_res_3,convert_uint16_to_string@value
  1052   001570  C060  F030         	movff	_adc_res_3+1,convert_uint16_to_string@value+1
  1053   001574  0EA6               	movlw	low _adc_res_3_txt
  1054   001576  6E31               	movwf	convert_uint16_to_string@str^0,c
  1055   001578  EC11  F011         	call	_convert_uint16_to_string	;wreg free
  1056   00157C  6E71               	movwf	_ret^0,c
  1057   00157E                     
  1058                           ;Application1.c: 60:         ret = convert_uint16_to_string(adc_res_4,adc_res_4_txt);
  1059   00157E  C05D  F02F         	movff	_adc_res_4,convert_uint16_to_string@value
  1060   001582  C05E  F030         	movff	_adc_res_4+1,convert_uint16_to_string@value+1
  1061   001586  0EA0               	movlw	low _adc_res_4_txt
  1062   001588  6E31               	movwf	convert_uint16_to_string@str^0,c
  1063   00158A  EC11  F011         	call	_convert_uint16_to_string	;wreg free
  1064   00158E  6E71               	movwf	_ret^0,c
  1065   001590                     
  1066                           ;Application1.c: 62:         ret = lcd_4bit_send_string_at_pos(&lcd1, 1, 7, adc_res_1_tx
      +                          t);
  1067   001590  0E73               	movlw	low _lcd1
  1068   001592  6E18               	movwf	lcd_4bit_send_string_at_pos@lcd^0,c
  1069   001594  0E01               	movlw	1
  1070   001596  6E19               	movwf	lcd_4bit_send_string_at_pos@row^0,c
  1071   001598  0E07               	movlw	7
  1072   00159A  6E1A               	movwf	lcd_4bit_send_string_at_pos@column^0,c
  1073   00159C  0EB2               	movlw	low _adc_res_1_txt
  1074   00159E  6E1B               	movwf	lcd_4bit_send_string_at_pos@str^0,c
  1075   0015A0  6A1C               	clrf	(lcd_4bit_send_string_at_pos@str+1)^0,c
  1076   0015A2  ECE9  F010         	call	_lcd_4bit_send_string_at_pos	;wreg free
  1077   0015A6  6E71               	movwf	_ret^0,c
  1078   0015A8                     
  1079                           ;Application1.c: 63:         ret = lcd_4bit_send_string_at_pos(&lcd1, 2, 7, adc_res_2_tx
      +                          t);
  1080   0015A8  0E73               	movlw	low _lcd1
  1081   0015AA  6E18               	movwf	lcd_4bit_send_string_at_pos@lcd^0,c
  1082   0015AC  0E02               	movlw	2
  1083   0015AE  6E19               	movwf	lcd_4bit_send_string_at_pos@row^0,c
  1084   0015B0  0E07               	movlw	7
  1085   0015B2  6E1A               	movwf	lcd_4bit_send_string_at_pos@column^0,c
  1086   0015B4  0EAC               	movlw	low _adc_res_2_txt
  1087   0015B6  6E1B               	movwf	lcd_4bit_send_string_at_pos@str^0,c
  1088   0015B8  6A1C               	clrf	(lcd_4bit_send_string_at_pos@str+1)^0,c
  1089   0015BA  ECE9  F010         	call	_lcd_4bit_send_string_at_pos	;wreg free
  1090   0015BE  6E71               	movwf	_ret^0,c
  1091   0015C0                     
  1092                           ;Application1.c: 64:         ret = lcd_4bit_send_string_at_pos(&lcd1, 3, 7, adc_res_3_tx
      +                          t);
  1093   0015C0  0E73               	movlw	low _lcd1
  1094   0015C2  6E18               	movwf	lcd_4bit_send_string_at_pos@lcd^0,c
  1095   0015C4  0E03               	movlw	3
  1096   0015C6  6E19               	movwf	lcd_4bit_send_string_at_pos@row^0,c
  1097   0015C8  0E07               	movlw	7
  1098   0015CA  6E1A               	movwf	lcd_4bit_send_string_at_pos@column^0,c
  1099   0015CC  0EA6               	movlw	low _adc_res_3_txt
  1100   0015CE  6E1B               	movwf	lcd_4bit_send_string_at_pos@str^0,c
  1101   0015D0  6A1C               	clrf	(lcd_4bit_send_string_at_pos@str+1)^0,c
  1102   0015D2  ECE9  F010         	call	_lcd_4bit_send_string_at_pos	;wreg free
  1103   0015D6  6E71               	movwf	_ret^0,c
  1104   0015D8                     
  1105                           ;Application1.c: 65:         ret = lcd_4bit_send_string_at_pos(&lcd1, 4, 7, adc_res_4_tx
      +                          t);
  1106   0015D8  0E73               	movlw	low _lcd1
  1107   0015DA  6E18               	movwf	lcd_4bit_send_string_at_pos@lcd^0,c
  1108   0015DC  0E04               	movlw	4
  1109   0015DE  6E19               	movwf	lcd_4bit_send_string_at_pos@row^0,c
  1110   0015E0  0E07               	movlw	7
  1111   0015E2  6E1A               	movwf	lcd_4bit_send_string_at_pos@column^0,c
  1112   0015E4  0EA0               	movlw	low _adc_res_4_txt
  1113   0015E6  6E1B               	movwf	lcd_4bit_send_string_at_pos@str^0,c
  1114   0015E8  6A1C               	clrf	(lcd_4bit_send_string_at_pos@str+1)^0,c
  1115   0015EA  ECE9  F010         	call	_lcd_4bit_send_string_at_pos	;wreg free
  1116   0015EE  6E71               	movwf	_ret^0,c
  1117   0015F0  EF80  F00A         	goto	l4746
  1118   0015F4  EF33  F000         	goto	start
  1119   0015F8                     __end_of_main:
  1120                           	callstack 0
  1121                           
  1122 ;; *************** function _lcd_4bit_send_string_at_pos *****************
  1123 ;; Defined at:
  1124 ;;		line 196 in file "ECU_Layer/LCD/ecu_lcd.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;  lcd             1   23[COMRAM] PTR const struct .
  1127 ;;		 -> lcd1(6), 
  1128 ;;  row             1   24[COMRAM] unsigned char 
  1129 ;;  column          1   25[COMRAM] unsigned char 
  1130 ;;  str             2   26[COMRAM] PTR unsigned char 
  1131 ;;		 -> adc_res_4_txt(6), adc_res_3_txt(6), adc_res_2_txt(6), adc_res_1_txt(6), 
  1132 ;;		 -> STR_8(7), STR_7(7), STR_6(7), STR_5(7), 
  1133 ;;		 -> STR_4(9), 
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;  ret             1   28[COMRAM] unsigned char 
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1    wreg      unsigned char 
  1138 ;; Registers used:
  1139 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1145 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1146 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1148 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1149 ;;Total ram usage:        6 bytes
  1150 ;; Hardware stack levels used: 1
  1151 ;; Hardware stack levels required when called: 8
  1152 ;; This function calls:
  1153 ;;		_lcd_4bit_send_string
  1154 ;;		_lcd_4bit_set_cursor
  1155 ;; This function is called by:
  1156 ;;		_main
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           	psect	text1
  1161   0021D2                     __ptext1:
  1162                           	callstack 0
  1163   0021D2                     _lcd_4bit_send_string_at_pos:
  1164                           	callstack 22
  1165   0021D2                     
  1166                           ;ECU_Layer/LCD/ecu_lcd.c: 199:     if((lcd != ((void*)0)) && (str != ((void*)0)))
  1167   0021D2  5018               	movf	lcd_4bit_send_string_at_pos@lcd^0,w,c
  1168   0021D4  B4D8               	btfsc	status,2,c
  1169   0021D6  EFEF  F010         	goto	u3011
  1170   0021DA  EFF1  F010         	goto	u3010
  1171   0021DE                     u3011:
  1172   0021DE  EF0D  F011         	goto	l4056
  1173   0021E2                     u3010:
  1174   0021E2  501B               	movf	lcd_4bit_send_string_at_pos@str^0,w,c
  1175   0021E4  101C               	iorwf	(lcd_4bit_send_string_at_pos@str+1)^0,w,c
  1176   0021E6  B4D8               	btfsc	status,2,c
  1177   0021E8  EFF8  F010         	goto	u3021
  1178   0021EC  EFFA  F010         	goto	u3020
  1179   0021F0                     u3021:
  1180   0021F0  EF0D  F011         	goto	l4056
  1181   0021F4                     u3020:
  1182   0021F4  C018  F014         	movff	lcd_4bit_send_string_at_pos@lcd,lcd_4bit_set_cursor@lcd
  1183   0021F8  C019  F015         	movff	lcd_4bit_send_string_at_pos@row,lcd_4bit_set_cursor@row
  1184   0021FC  C01A  F016         	movff	lcd_4bit_send_string_at_pos@column,lcd_4bit_set_cursor@column
  1185   002200  ECD0  F00E         	call	_lcd_4bit_set_cursor	;wreg free
  1186   002204                     
  1187                           ;ECU_Layer/LCD/ecu_lcd.c: 202:         ret = lcd_4bit_send_string(lcd,str);
  1188   002204  C018  F014         	movff	lcd_4bit_send_string_at_pos@lcd,lcd_4bit_send_string@lcd
  1189   002208  C01B  F015         	movff	lcd_4bit_send_string_at_pos@str,lcd_4bit_send_string@str
  1190   00220C  C01C  F016         	movff	lcd_4bit_send_string_at_pos@str+1,lcd_4bit_send_string@str+1
  1191   002210  EC83  F00E         	call	_lcd_4bit_send_string	;wreg free
  1192   002214  6E1D               	movwf	lcd_4bit_send_string_at_pos@ret^0,c
  1193                           
  1194                           ;ECU_Layer/LCD/ecu_lcd.c: 203:     }
  1195   002216  EF0F  F011         	goto	l136
  1196   00221A                     l4056:
  1197   00221A  0E00               	movlw	0
  1198   00221C  6E1D               	movwf	lcd_4bit_send_string_at_pos@ret^0,c
  1199   00221E                     l136:
  1200                           
  1201                           ;ECU_Layer/LCD/ecu_lcd.c: 206:     return ret;
  1202   00221E  501D               	movf	lcd_4bit_send_string_at_pos@ret^0,w,c
  1203   002220  0012               	return		;funcret
  1204   002222                     __end_of_lcd_4bit_send_string_at_pos:
  1205                           	callstack 0
  1206                           
  1207 ;; *************** function _lcd_4bit_set_cursor *****************
  1208 ;; Defined at:
  1209 ;;		line 609 in file "ECU_Layer/LCD/ecu_lcd.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;  lcd             1   19[COMRAM] PTR const struct .
  1212 ;;		 -> lcd1(6), 
  1213 ;;  row             1   20[COMRAM] unsigned char 
  1214 ;;  column          1   21[COMRAM] unsigned char 
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;  ret             1   22[COMRAM] unsigned char 
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      unsigned char 
  1219 ;; Registers used:
  1220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1226 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1227 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1229 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1230 ;;Total ram usage:        4 bytes
  1231 ;; Hardware stack levels used: 1
  1232 ;; Hardware stack levels required when called: 7
  1233 ;; This function calls:
  1234 ;;		_lcd_4bit_send_command
  1235 ;; This function is called by:
  1236 ;;		_lcd_4bit_send_string_at_pos
  1237 ;;		_lcd_4bit_send_char_data_at_pos
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           	psect	text2
  1242   001DA0                     __ptext2:
  1243                           	callstack 0
  1244   001DA0                     _lcd_4bit_set_cursor:
  1245                           	callstack 22
  1246   001DA0                     
  1247                           ;ECU_Layer/LCD/ecu_lcd.c: 609: static Std_ReturnType lcd_4bit_set_cursor(const lcd_4bit_
      +                          t *lcd,uint8 row,uint8 column);ECU_Layer/LCD/ecu_lcd.c: 610: {;ECU_Layer/LCD/ecu_lcd.c: 
      +                          611:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1248   001DA0  0E01               	movlw	1
  1249   001DA2  6E17               	movwf	lcd_4bit_set_cursor@ret^0,c
  1250                           
  1251                           ;ECU_Layer/LCD/ecu_lcd.c: 612:     if(lcd != ((void*)0))
  1252   001DA4  5014               	movf	lcd_4bit_set_cursor@lcd^0,w,c
  1253   001DA6  B4D8               	btfsc	status,2,c
  1254   001DA8  EFD8  F00E         	goto	u2821
  1255   001DAC  EFDA  F00E         	goto	u2820
  1256   001DB0                     u2821:
  1257   001DB0  EF18  F00F         	goto	l3904
  1258   001DB4                     u2820:
  1259   001DB4                     
  1260                           ;ECU_Layer/LCD/ecu_lcd.c: 613:     {;ECU_Layer/LCD/ecu_lcd.c: 614:         column--;
  1261   001DB4  0616               	decf	lcd_4bit_set_cursor@column^0,f,c
  1262                           
  1263                           ;ECU_Layer/LCD/ecu_lcd.c: 615:         switch (row)
  1264   001DB6  EF05  F00F         	goto	l3902
  1265   001DBA                     l3892:
  1266   001DBA  C014  F011         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1267   001DBE  5016               	movf	lcd_4bit_set_cursor@column^0,w,c
  1268   001DC0  0F80               	addlw	128
  1269   001DC2  6E12               	movwf	lcd_4bit_send_command@command^0,c
  1270   001DC4  ECBB  F010         	call	_lcd_4bit_send_command	;wreg free
  1271   001DC8  6E17               	movwf	lcd_4bit_set_cursor@ret^0,c
  1272   001DCA  EF1A  F00F         	goto	l242
  1273   001DCE                     l3894:
  1274   001DCE  C014  F011         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1275   001DD2  5016               	movf	lcd_4bit_set_cursor@column^0,w,c
  1276   001DD4  0FC0               	addlw	192
  1277   001DD6  6E12               	movwf	lcd_4bit_send_command@command^0,c
  1278   001DD8  ECBB  F010         	call	_lcd_4bit_send_command	;wreg free
  1279   001DDC  6E17               	movwf	lcd_4bit_set_cursor@ret^0,c
  1280   001DDE  EF1A  F00F         	goto	l242
  1281   001DE2                     l3896:
  1282   001DE2  C014  F011         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1283   001DE6  5016               	movf	lcd_4bit_set_cursor@column^0,w,c
  1284   001DE8  0F94               	addlw	148
  1285   001DEA  6E12               	movwf	lcd_4bit_send_command@command^0,c
  1286   001DEC  ECBB  F010         	call	_lcd_4bit_send_command	;wreg free
  1287   001DF0  6E17               	movwf	lcd_4bit_set_cursor@ret^0,c
  1288   001DF2  EF1A  F00F         	goto	l242
  1289   001DF6                     l3898:
  1290   001DF6  C014  F011         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  1291   001DFA  5016               	movf	lcd_4bit_set_cursor@column^0,w,c
  1292   001DFC  0FD4               	addlw	212
  1293   001DFE  6E12               	movwf	lcd_4bit_send_command@command^0,c
  1294   001E00  ECBB  F010         	call	_lcd_4bit_send_command	;wreg free
  1295   001E04  6E17               	movwf	lcd_4bit_set_cursor@ret^0,c
  1296   001E06  EF1A  F00F         	goto	l242
  1297   001E0A                     l3902:
  1298   001E0A  5015               	movf	lcd_4bit_set_cursor@row^0,w,c
  1299                           
  1300                           ; Switch size 1, requested type "simple"
  1301                           ; Number of cases is 4, Range of values is 1 to 4
  1302                           ; switch strategies available:
  1303                           ; Name         Instructions Cycles
  1304                           ; simple_byte           13     7 (average)
  1305                           ;	Chosen strategy is simple_byte
  1306   001E0C  0A01               	xorlw	1	; case 1
  1307   001E0E  B4D8               	btfsc	status,2,c
  1308   001E10  EFDD  F00E         	goto	l3892
  1309   001E14  0A03               	xorlw	3	; case 2
  1310   001E16  B4D8               	btfsc	status,2,c
  1311   001E18  EFE7  F00E         	goto	l3894
  1312   001E1C  0A01               	xorlw	1	; case 3
  1313   001E1E  B4D8               	btfsc	status,2,c
  1314   001E20  EFF1  F00E         	goto	l3896
  1315   001E24  0A07               	xorlw	7	; case 4
  1316   001E26  B4D8               	btfsc	status,2,c
  1317   001E28  EFFB  F00E         	goto	l3898
  1318   001E2C  EF1A  F00F         	goto	l242
  1319   001E30                     l3904:
  1320   001E30  0E00               	movlw	0
  1321   001E32  6E17               	movwf	lcd_4bit_set_cursor@ret^0,c
  1322   001E34                     l242:
  1323                           
  1324                           ;ECU_Layer/LCD/ecu_lcd.c: 626:     return ret;
  1325   001E34  5017               	movf	lcd_4bit_set_cursor@ret^0,w,c
  1326   001E36  0012               	return		;funcret
  1327   001E38                     __end_of_lcd_4bit_set_cursor:
  1328                           	callstack 0
  1329                           
  1330 ;; *************** function _lcd_4bit_send_string *****************
  1331 ;; Defined at:
  1332 ;;		line 171 in file "ECU_Layer/LCD/ecu_lcd.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;  lcd             1   19[COMRAM] PTR const struct .
  1335 ;;		 -> lcd1(6), 
  1336 ;;  str             2   20[COMRAM] PTR unsigned char 
  1337 ;;		 -> adc_res_4_txt(6), adc_res_3_txt(6), adc_res_2_txt(6), adc_res_1_txt(6), 
  1338 ;;		 -> STR_8(7), STR_7(7), STR_6(7), STR_5(7), 
  1339 ;;		 -> STR_4(9), 
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  ret             1   22[COMRAM] unsigned char 
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      unsigned char 
  1344 ;; Registers used:
  1345 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1351 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1352 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1354 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1355 ;;Total ram usage:        4 bytes
  1356 ;; Hardware stack levels used: 1
  1357 ;; Hardware stack levels required when called: 7
  1358 ;; This function calls:
  1359 ;;		_lcd_4bit_send_char_data
  1360 ;; This function is called by:
  1361 ;;		_lcd_4bit_send_string_at_pos
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           	psect	text3
  1366   001D06                     __ptext3:
  1367                           	callstack 0
  1368   001D06                     _lcd_4bit_send_string:
  1369                           	callstack 22
  1370   001D06                     
  1371                           ;ECU_Layer/LCD/ecu_lcd.c: 171: Std_ReturnType lcd_4bit_send_string(const lcd_4bit_t *lcd
      +                          ,uint8 *str);ECU_Layer/LCD/ecu_lcd.c: 172: {;ECU_Layer/LCD/ecu_lcd.c: 173:     Std_Retur
      +                          nType ret = (Std_ReturnType)0x01;
  1372   001D06  0E01               	movlw	1
  1373   001D08  6E17               	movwf	lcd_4bit_send_string@ret^0,c
  1374                           
  1375                           ;ECU_Layer/LCD/ecu_lcd.c: 174:     if((lcd != ((void*)0)) && (str != ((void*)0)))
  1376   001D0A  5014               	movf	lcd_4bit_send_string@lcd^0,w,c
  1377   001D0C  B4D8               	btfsc	status,2,c
  1378   001D0E  EF8B  F00E         	goto	u2831
  1379   001D12  EF8D  F00E         	goto	u2830
  1380   001D16                     u2831:
  1381   001D16  EFCC  F00E         	goto	l3920
  1382   001D1A                     u2830:
  1383   001D1A  5015               	movf	lcd_4bit_send_string@str^0,w,c
  1384   001D1C  1016               	iorwf	(lcd_4bit_send_string@str+1)^0,w,c
  1385   001D1E  B4D8               	btfsc	status,2,c
  1386   001D20  EF94  F00E         	goto	u2841
  1387   001D24  EF96  F00E         	goto	u2840
  1388   001D28                     u2841:
  1389   001D28  EFCC  F00E         	goto	l3920
  1390   001D2C                     u2840:
  1391   001D2C  EFB1  F00E         	goto	l3918
  1392   001D30                     l3914:
  1393                           
  1394                           ;ECU_Layer/LCD/ecu_lcd.c: 177:         {;ECU_Layer/LCD/ecu_lcd.c: 178:             ret =
      +                           lcd_4bit_send_char_data(lcd,*str++);
  1395   001D30  C014  F011         	movff	lcd_4bit_send_string@lcd,lcd_4bit_send_char_data@lcd
  1396   001D34  C015  FFF6         	movff	lcd_4bit_send_string@str,tblptrl
  1397   001D38  C016  FFF7         	movff	lcd_4bit_send_string@str+1,tblptrh
  1398   001D3C  0E00               	movlw	low (__smallconst shr (0+16))
  1399   001D3E  6EF8               	movwf	tblptru,c
  1400   001D40  0E0F               	movlw	(high __ramtop+-1)
  1401   001D42  64F7               	cpfsgt	tblptrh,c
  1402   001D44  D003               	bra	u2857
  1403   001D46  0008               	tblrd		*
  1404   001D48  50F5               	movf	tablat,w,c
  1405   001D4A  D005               	bra	u2850
  1406   001D4C                     u2857:
  1407   001D4C  CFF6 FFE9          	movff	tblptrl,fsr0l
  1408   001D50  CFF7 FFEA          	movff	tblptrh,fsr0h
  1409   001D54  50EF               	movf	indf0,w,c
  1410   001D56                     u2850:
  1411   001D56  6E12               	movwf	lcd_4bit_send_char_data@data^0,c
  1412   001D58  EC8D  F010         	call	_lcd_4bit_send_char_data	;wreg free
  1413   001D5C  6E17               	movwf	lcd_4bit_send_string@ret^0,c
  1414   001D5E  4A15               	infsnz	lcd_4bit_send_string@str^0,f,c
  1415   001D60  2A16               	incf	(lcd_4bit_send_string@str+1)^0,f,c
  1416   001D62                     l3918:
  1417                           
  1418                           ;ECU_Layer/LCD/ecu_lcd.c: 176:         while(*str)
  1419   001D62  C015  FFF6         	movff	lcd_4bit_send_string@str,tblptrl
  1420   001D66  C016  FFF7         	movff	lcd_4bit_send_string@str+1,tblptrh
  1421   001D6A  0E00               	movlw	low (__smallconst shr (0+16))
  1422   001D6C  6EF8               	movwf	tblptru,c
  1423   001D6E  0E0F               	movlw	(high __ramtop+-1)
  1424   001D70  64F7               	cpfsgt	tblptrh,c
  1425   001D72  D003               	bra	u2867
  1426   001D74  0008               	tblrd		*
  1427   001D76  50F5               	movf	tablat,w,c
  1428   001D78  D005               	bra	u2860
  1429   001D7A                     u2867:
  1430   001D7A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1431   001D7E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1432   001D82  50EF               	movf	indf0,w,c
  1433   001D84                     u2860:
  1434   001D84  0900               	iorlw	0
  1435   001D86  A4D8               	btfss	status,2,c
  1436   001D88  EFC8  F00E         	goto	u2871
  1437   001D8C  EFCA  F00E         	goto	u2870
  1438   001D90                     u2871:
  1439   001D90  EF98  F00E         	goto	l3914
  1440   001D94                     u2870:
  1441   001D94  EFCE  F00E         	goto	l131
  1442   001D98                     l3920:
  1443   001D98  0E00               	movlw	0
  1444   001D9A  6E17               	movwf	lcd_4bit_send_string@ret^0,c
  1445   001D9C                     l131:
  1446                           
  1447                           ;ECU_Layer/LCD/ecu_lcd.c: 183:     return ret;
  1448   001D9C  5017               	movf	lcd_4bit_send_string@ret^0,w,c
  1449   001D9E  0012               	return		;funcret
  1450   001DA0                     __end_of_lcd_4bit_send_string:
  1451                           	callstack 0
  1452                           
  1453 ;; *************** function _lcd_4bit_send_char_data *****************
  1454 ;; Defined at:
  1455 ;;		line 118 in file "ECU_Layer/LCD/ecu_lcd.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;  lcd             1   16[COMRAM] PTR const struct .
  1458 ;;		 -> lcd1(6), 
  1459 ;;  data            1   17[COMRAM] unsigned char 
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;  ret             1   18[COMRAM] unsigned char 
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      unsigned char 
  1464 ;; Registers used:
  1465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1471 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1472 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1474 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1475 ;;Total ram usage:        3 bytes
  1476 ;; Hardware stack levels used: 1
  1477 ;; Hardware stack levels required when called: 6
  1478 ;; This function calls:
  1479 ;;		_gpio_pin_write_logic
  1480 ;;		_lcd_4bit_send_enable_signal
  1481 ;;		_lcd_send_4bits
  1482 ;; This function is called by:
  1483 ;;		_lcd_4bit_send_string
  1484 ;;		_lcd_4bit_send_char_data_at_pos
  1485 ;;		_lcd_4bit_send_custom_char
  1486 ;;		_lcd_4bit_send_custom_char_at_pos
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           	psect	text4
  1491   00211A                     __ptext4:
  1492                           	callstack 0
  1493   00211A                     _lcd_4bit_send_char_data:
  1494                           	callstack 22
  1495   00211A                     
  1496                           ;ECU_Layer/LCD/ecu_lcd.c: 121:     if(lcd != ((void*)0))
  1497   00211A  5011               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  1498   00211C  B4D8               	btfsc	status,2,c
  1499   00211E  EF93  F010         	goto	u2731
  1500   002122  EF95  F010         	goto	u2730
  1501   002126                     u2731:
  1502   002126  EFB7  F010         	goto	l3836
  1503   00212A                     u2730:
  1504   00212A                     
  1505                           ;ECU_Layer/LCD/ecu_lcd.c: 122:     {;ECU_Layer/LCD/ecu_lcd.c: 125:         ret = gpio_pi
      +                          n_write_logic(&(lcd->lcd_rs),GPIO_LOGIC_HIGH);
  1506   00212A  C011  F003         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  1507   00212E  0E01               	movlw	1
  1508   002130  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  1509   002132  ECFC  F00A         	call	_gpio_pin_write_logic	;wreg free
  1510   002136  6E13               	movwf	lcd_4bit_send_char_data@ret^0,c
  1511                           
  1512                           ;ECU_Layer/LCD/ecu_lcd.c: 127:         ret = lcd_send_4bits(lcd,data >> 4);
  1513   002138  C011  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1514   00213C  3812               	swapf	lcd_4bit_send_char_data@data^0,w,c
  1515   00213E  0B0F               	andlw	15
  1516   002140  6E0C               	movwf	lcd_send_4bits@_data_command^0,c
  1517   002142  ECFD  F00F         	call	_lcd_send_4bits	;wreg free
  1518   002146  6E13               	movwf	lcd_4bit_send_char_data@ret^0,c
  1519                           
  1520                           ;ECU_Layer/LCD/ecu_lcd.c: 129:         ret = lcd_4bit_send_enable_signal(lcd);
  1521   002148  C011  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1522   00214C  EC57  F011         	call	_lcd_4bit_send_enable_signal	;wreg free
  1523   002150  6E13               	movwf	lcd_4bit_send_char_data@ret^0,c
  1524                           
  1525                           ;ECU_Layer/LCD/ecu_lcd.c: 131:         ret = lcd_send_4bits(lcd,data);
  1526   002152  C011  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1527   002156  C012  F00C         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
  1528   00215A  ECFD  F00F         	call	_lcd_send_4bits	;wreg free
  1529   00215E  6E13               	movwf	lcd_4bit_send_char_data@ret^0,c
  1530                           
  1531                           ;ECU_Layer/LCD/ecu_lcd.c: 133:         ret = lcd_4bit_send_enable_signal(lcd);
  1532   002160  C011  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  1533   002164  EC57  F011         	call	_lcd_4bit_send_enable_signal	;wreg free
  1534   002168  6E13               	movwf	lcd_4bit_send_char_data@ret^0,c
  1535                           
  1536                           ;ECU_Layer/LCD/ecu_lcd.c: 134:     }
  1537   00216A  EFB9  F010         	goto	l118
  1538   00216E                     l3836:
  1539   00216E  0E00               	movlw	0
  1540   002170  6E13               	movwf	lcd_4bit_send_char_data@ret^0,c
  1541   002172                     l118:
  1542                           
  1543                           ;ECU_Layer/LCD/ecu_lcd.c: 137:     return ret;
  1544   002172  5013               	movf	lcd_4bit_send_char_data@ret^0,w,c
  1545   002174  0012               	return		;funcret
  1546   002176                     __end_of_lcd_4bit_send_char_data:
  1547                           	callstack 0
  1548                           
  1549 ;; *************** function _convert_uint16_to_string *****************
  1550 ;; Defined at:
  1551 ;;		line 537 in file "ECU_Layer/LCD/ecu_lcd.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;  value           2   46[COMRAM] unsigned short 
  1554 ;;  str             1   48[COMRAM] PTR unsigned char 
  1555 ;;		 -> adc_res_4_txt(6), adc_res_3_txt(6), adc_res_2_txt(6), adc_res_1_txt(6), 
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;  ret             1   49[COMRAM] unsigned char 
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  1    wreg      unsigned char 
  1560 ;; Registers used:
  1561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1567 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1568 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1570 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1571 ;;Total ram usage:        4 bytes
  1572 ;; Hardware stack levels used: 1
  1573 ;; Hardware stack levels required when called: 9
  1574 ;; This function calls:
  1575 ;;		_memset
  1576 ;;		_sprintf
  1577 ;; This function is called by:
  1578 ;;		_main
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text5
  1583   002222                     __ptext5:
  1584                           	callstack 0
  1585   002222                     _convert_uint16_to_string:
  1586                           	callstack 21
  1587   002222                     
  1588                           ;ECU_Layer/LCD/ecu_lcd.c: 537: Std_ReturnType convert_uint16_to_string(uint16 value,uint
      +                          8 *str);ECU_Layer/LCD/ecu_lcd.c: 538: {;ECU_Layer/LCD/ecu_lcd.c: 539:     Std_ReturnType
      +                           ret = (Std_ReturnType)0x01;
  1589   002222  0E01               	movlw	1
  1590   002224  6E32               	movwf	convert_uint16_to_string@ret^0,c
  1591                           
  1592                           ;ECU_Layer/LCD/ecu_lcd.c: 540:     if(str != ((void*)0))
  1593   002226  5031               	movf	convert_uint16_to_string@str^0,w,c
  1594   002228  B4D8               	btfsc	status,2,c
  1595   00222A  EF19  F011         	goto	u3101
  1596   00222E  EF1B  F011         	goto	u3100
  1597   002232                     u3101:
  1598   002232  EF33  F011         	goto	l4118
  1599   002236                     u3100:
  1600   002236                     
  1601                           ;ECU_Layer/LCD/ecu_lcd.c: 541:     {;ECU_Layer/LCD/ecu_lcd.c: 543:         memset((char 
      +                          *)str,'\0',6);
  1602   002236  C031  F003         	movff	convert_uint16_to_string@str,memset@dest
  1603   00223A  0E00               	movlw	0
  1604   00223C  6E05               	movwf	(memset@c+1)^0,c
  1605   00223E  0E00               	movlw	0
  1606   002240  6E04               	movwf	memset@c^0,c
  1607   002242  0E00               	movlw	0
  1608   002244  6E07               	movwf	(memset@n+1)^0,c
  1609   002246  0E06               	movlw	6
  1610   002248  6E06               	movwf	memset@n^0,c
  1611   00224A  ECC6  F011         	call	_memset	;wreg free
  1612   00224E                     
  1613                           ;ECU_Layer/LCD/ecu_lcd.c: 544:         sprintf((char *)str,"%i",value);
  1614   00224E  C031  F01C         	movff	convert_uint16_to_string@str,sprintf@s
  1615   002252  0E36               	movlw	low STR_1
  1616   002254  6E1D               	movwf	sprintf@fmt^0,c
  1617   002256  C02F  F01E         	movff	convert_uint16_to_string@value,?_sprintf+2
  1618   00225A  C030  F01F         	movff	convert_uint16_to_string@value+1,?_sprintf+3
  1619   00225E  EC92  F011         	call	_sprintf	;wreg free
  1620                           
  1621                           ;ECU_Layer/LCD/ecu_lcd.c: 545:     }
  1622   002262  EF35  F011         	goto	l213
  1623   002266                     l4118:
  1624   002266  0E00               	movlw	0
  1625   002268  6E32               	movwf	convert_uint16_to_string@ret^0,c
  1626   00226A                     l213:
  1627                           
  1628                           ;ECU_Layer/LCD/ecu_lcd.c: 548:     return ret;
  1629   00226A  5032               	movf	convert_uint16_to_string@ret^0,w,c
  1630   00226C  0012               	return		;funcret
  1631   00226E                     __end_of_convert_uint16_to_string:
  1632                           	callstack 0
  1633                           
  1634 ;; *************** function _sprintf *****************
  1635 ;; Defined at:
  1636 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;  s               1   27[COMRAM] PTR unsigned char 
  1639 ;;		 -> adc_res_4_txt(6), adc_res_3_txt(6), adc_res_2_txt(6), adc_res_1_txt(6), 
  1640 ;;  fmt             1   28[COMRAM] PTR const unsigned char 
  1641 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;  f              12   34[COMRAM] struct _IO_FILE
  1644 ;;  ret             2    0        int 
  1645 ;;  ap              1   33[COMRAM] PTR void [1]
  1646 ;;		 -> ?_sprintf(2), 
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  2   27[COMRAM] int 
  1649 ;; Registers used:
  1650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1656 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1657 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1659 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1660 ;;Total ram usage:       19 bytes
  1661 ;; Hardware stack levels used: 1
  1662 ;; Hardware stack levels required when called: 8
  1663 ;; This function calls:
  1664 ;;		_vfprintf
  1665 ;; This function is called by:
  1666 ;;		_convert_uint16_to_string
  1667 ;;		_convert_uin8_to_string
  1668 ;;		_convert_uint32_to_string
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text6
  1673   002324                     __ptext6:
  1674                           	callstack 0
  1675   002324                     _sprintf:
  1676                           	callstack 21
  1677   002324  0E1E               	movlw	low (?_sprintf+2)
  1678   002326  6E22               	movwf	sprintf@ap^0,c
  1679   002328  C01C  F023         	movff	sprintf@s,sprintf@f
  1680   00232C  0E00               	movlw	0
  1681   00232E  6E27               	movwf	(sprintf@f+4)^0,c
  1682   002330  0E00               	movlw	0
  1683   002332  6E26               	movwf	(sprintf@f+3)^0,c
  1684   002334  0E00               	movlw	0
  1685   002336  6E2E               	movwf	(sprintf@f+11)^0,c
  1686   002338  0E00               	movlw	0
  1687   00233A  6E2D               	movwf	(sprintf@f+10)^0,c
  1688   00233C  0E23               	movlw	low sprintf@f
  1689   00233E  6E18               	movwf	vfprintf@fp^0,c
  1690   002340  C01D  F019         	movff	sprintf@fmt,vfprintf@fmt
  1691   002344  0E22               	movlw	low sprintf@ap
  1692   002346  6E1A               	movwf	vfprintf@ap^0,c
  1693   002348  EC37  F011         	call	_vfprintf	;wreg free
  1694   00234C  501C               	movf	sprintf@s^0,w,c
  1695   00234E  2426               	addwf	(sprintf@f+3)^0,w,c
  1696   002350  6ED9               	movwf	fsr2l,c
  1697   002352  6ADA               	clrf	fsr2h,c
  1698   002354  6ADF               	clrf	indf2,c
  1699   002356  0012               	return		;funcret
  1700   002358                     __end_of_sprintf:
  1701                           	callstack 0
  1702                           
  1703 ;; *************** function _vfprintf *****************
  1704 ;; Defined at:
  1705 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
  1708 ;;		 -> sprintf@f(12), 
  1709 ;;  fmt             1   24[COMRAM] PTR const unsigned char 
  1710 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1711 ;;  ap              1   25[COMRAM] PTR PTR void 
  1712 ;;		 -> sprintf@ap(1), 
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;  cfmt            1   26[COMRAM] PTR unsigned char 
  1715 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  2   23[COMRAM] int 
  1718 ;; Registers used:
  1719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1725 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1726 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1728 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1729 ;;Total ram usage:        4 bytes
  1730 ;; Hardware stack levels used: 1
  1731 ;; Hardware stack levels required when called: 7
  1732 ;; This function calls:
  1733 ;;		_vfpfcnvrt
  1734 ;; This function is called by:
  1735 ;;		_sprintf
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text7
  1740   00226E                     __ptext7:
  1741                           	callstack 0
  1742   00226E                     _vfprintf:
  1743                           	callstack 21
  1744   00226E                     
  1745                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1746   00226E  C019  F01B         	movff	vfprintf@fmt,vfprintf@cfmt
  1747                           
  1748                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1749   002272  EF43  F011         	goto	l3882
  1750   002276                     l3880:
  1751                           
  1752                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1753   002276  C018  F00D         	movff	vfprintf@fp,vfpfcnvrt@fp
  1754   00227A  0E1B               	movlw	low vfprintf@cfmt
  1755   00227C  6E0E               	movwf	vfpfcnvrt@fmt^0,c
  1756   00227E  C01A  F00F         	movff	vfprintf@ap,vfpfcnvrt@ap
  1757   002282  EC40  F009         	call	_vfpfcnvrt	;wreg free
  1758   002286                     l3882:
  1759                           
  1760                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1761   002286  C01B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1762   00228A                     	if	1	;There is more than 1 active tblptr byte
  1763   00228A  0E10               	movlw	high __smallconst
  1764   00228C  6EF7               	movwf	tblptrh,c
  1765   00228E                     	endif
  1766   00228E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1767   00228E  6AF8               	clrf	tblptru,c
  1768   002290                     	endif
  1769   002290                     	if	0	;tblptru may be non-zero
  1770   002290                     	endif
  1771   002290  0008               	tblrd		*
  1772   002292  50F5               	movf	tablat,w,c
  1773   002294  0900               	iorlw	0
  1774   002296  A4D8               	btfss	status,2,c
  1775   002298  EF50  F011         	goto	u2811
  1776   00229C  EF52  F011         	goto	u2810
  1777   0022A0                     u2811:
  1778   0022A0  EF3B  F011         	goto	l3880
  1779   0022A4                     u2810:
  1780   0022A4                     
  1781                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1782   0022A4  0E00               	movlw	0
  1783   0022A6  6E19               	movwf	(?_vfprintf+1)^0,c
  1784   0022A8  0E00               	movlw	0
  1785   0022AA  6E18               	movwf	?_vfprintf^0,c
  1786   0022AC  0012               	return		;funcret
  1787   0022AE                     __end_of_vfprintf:
  1788                           	callstack 0
  1789                           
  1790 ;; *************** function _vfpfcnvrt *****************
  1791 ;; Defined at:
  1792 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;  fp              1   12[COMRAM] PTR struct _IO_FILE
  1795 ;;		 -> sprintf@f(12), 
  1796 ;;  fmt             1   13[COMRAM] PTR PTR unsigned char 
  1797 ;;		 -> vfprintf@cfmt(1), 
  1798 ;;  ap              1   14[COMRAM] PTR PTR void 
  1799 ;;		 -> sprintf@ap(1), 
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;  convarg         4   18[COMRAM] struct .
  1802 ;;  c               1   22[COMRAM] unsigned char 
  1803 ;;  cp              1   17[COMRAM] PTR unsigned char 
  1804 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1805 ;;  done            1   16[COMRAM] _Bool 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1815 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1816 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1817 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1818 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;Total ram usage:       11 bytes
  1820 ;; Hardware stack levels used: 1
  1821 ;; Hardware stack levels required when called: 6
  1822 ;; This function calls:
  1823 ;;		___awdiv
  1824 ;;		___awmod
  1825 ;;		_abs
  1826 ;;		_fputc
  1827 ;; This function is called by:
  1828 ;;		_vfprintf
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text8
  1833   001280                     __ptext8:
  1834                           	callstack 0
  1835   001280                     _vfpfcnvrt:
  1836                           	callstack 21
  1837   001280                     
  1838                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1839   001280  500E               	movf	vfpfcnvrt@fmt^0,w,c
  1840   001282  6ED9               	movwf	fsr2l,c
  1841   001284  6ADA               	clrf	fsr2h,c
  1842   001286  CFDF FFF6          	movff	indf2,tblptrl
  1843   00128A                     	if	1	;There is more than 1 active tblptr byte
  1844   00128A  0E10               	movlw	high __smallconst
  1845   00128C  6EF7               	movwf	tblptrh,c
  1846   00128E                     	endif
  1847   00128E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1848   00128E  6AF8               	clrf	tblptru,c
  1849   001290                     	endif
  1850   001290                     	if	0	;tblptru may be non-zero
  1851   001290                     	endif
  1852   001290  0008               	tblrd		*
  1853   001292  50F5               	movf	tablat,w,c
  1854   001294  0A25               	xorlw	37
  1855   001296  A4D8               	btfss	status,2,c
  1856   001298  EF50  F009         	goto	u2611
  1857   00129C  EF52  F009         	goto	u2610
  1858   0012A0                     u2611:
  1859   0012A0  EF0D  F00A         	goto	l3784
  1860   0012A4                     u2610:
  1861   0012A4                     
  1862                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1863   0012A4  500E               	movf	vfpfcnvrt@fmt^0,w,c
  1864   0012A6  6ED9               	movwf	fsr2l,c
  1865   0012A8  6ADA               	clrf	fsr2h,c
  1866   0012AA  2ADF               	incf	indf2,f,c
  1867   0012AC                     
  1868                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1869   0012AC  0E00               	movlw	0
  1870   0012AE  6E36               	movwf	(_width+1)^0,c
  1871   0012B0  0E00               	movlw	0
  1872   0012B2  6E35               	movwf	_width^0,c
  1873   0012B4  C035  F04F         	movff	_width,_flags
  1874   0012B8                     
  1875                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1876   0012B8  6837               	setf	_prec^0,c
  1877   0012BA  6838               	setf	(_prec+1)^0,c
  1878   0012BC                     
  1879                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1880   0012BC  500E               	movf	vfpfcnvrt@fmt^0,w,c
  1881   0012BE  6ED9               	movwf	fsr2l,c
  1882   0012C0  6ADA               	clrf	fsr2h,c
  1883   0012C2  50DF               	movf	indf2,w,c
  1884   0012C4  6E12               	movwf	vfpfcnvrt@cp^0,c
  1885   0012C6                     
  1886                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1887   0012C6  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1888   0012CA                     	if	1	;There is more than 1 active tblptr byte
  1889   0012CA  0E10               	movlw	high __smallconst
  1890   0012CC  6EF7               	movwf	tblptrh,c
  1891   0012CE                     	endif
  1892   0012CE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1893   0012CE  6AF8               	clrf	tblptru,c
  1894   0012D0                     	endif
  1895   0012D0                     	if	0	;tblptru may be non-zero
  1896   0012D0                     	endif
  1897   0012D0  0008               	tblrd		*
  1898   0012D2  50F5               	movf	tablat,w,c
  1899   0012D4  0A64               	xorlw	100
  1900   0012D6  B4D8               	btfsc	status,2,c
  1901   0012D8  EF70  F009         	goto	u2621
  1902   0012DC  EF72  F009         	goto	u2620
  1903   0012E0                     u2621:
  1904   0012E0  EF81  F009         	goto	l3754
  1905   0012E4                     u2620:
  1906   0012E4  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1907   0012E8                     	if	1	;There is more than 1 active tblptr byte
  1908   0012E8  0E10               	movlw	high __smallconst
  1909   0012EA  6EF7               	movwf	tblptrh,c
  1910   0012EC                     	endif
  1911   0012EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1912   0012EC  6AF8               	clrf	tblptru,c
  1913   0012EE                     	endif
  1914   0012EE                     	if	0	;tblptru may be non-zero
  1915   0012EE                     	endif
  1916   0012EE  0008               	tblrd		*
  1917   0012F0  50F5               	movf	tablat,w,c
  1918   0012F2  0A69               	xorlw	105
  1919   0012F4  A4D8               	btfss	status,2,c
  1920   0012F6  EF7F  F009         	goto	u2631
  1921   0012FA  EF81  F009         	goto	u2630
  1922   0012FE                     u2631:
  1923   0012FE  EF07  F00A         	goto	l3780
  1924   001302                     u2630:
  1925   001302                     l3754:
  1926                           
  1927                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1928   001302  500F               	movf	vfpfcnvrt@ap^0,w,c
  1929   001304  6ED9               	movwf	fsr2l,c
  1930   001306  6ADA               	clrf	fsr2h,c
  1931   001308  0E02               	movlw	2
  1932   00130A  26DF               	addwf	indf2,f,c
  1933   00130C  5CDF               	subwf	indf2,w,c
  1934   00130E  6ED9               	movwf	fsr2l,c
  1935   001310  6ADA               	clrf	fsr2h,c
  1936   001312  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg
  1937   001316  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg+1
  1938   00131A                     
  1939                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1940   00131A  500E               	movf	vfpfcnvrt@fmt^0,w,c
  1941   00131C  6ED9               	movwf	fsr2l,c
  1942   00131E  6ADA               	clrf	fsr2h,c
  1943   001320  2812               	incf	vfpfcnvrt@cp^0,w,c
  1944   001322  6EDF               	movwf	indf2,c
  1945   001324                     
  1946                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1947   001324  0E20               	movlw	32
  1948   001326  6E17               	movwf	vfpfcnvrt@c^0,c
  1949                           
  1950                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1951   001328  BE14               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1952   00132A  EF99  F009         	goto	u2641
  1953   00132E  EF9C  F009         	goto	u2640
  1954   001332                     u2641:
  1955   001332  0E01               	movlw	1
  1956   001334  EF9D  F009         	goto	u2650
  1957   001338                     u2640:
  1958   001338  0E00               	movlw	0
  1959   00133A                     u2650:
  1960   00133A  6E11               	movwf	vfpfcnvrt@done^0,c
  1961   00133C                     l3760:
  1962                           
  1963                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1964   00133C  0617               	decf	vfpfcnvrt@c^0,f,c
  1965   00133E  5017               	movf	vfpfcnvrt@c^0,w,c
  1966   001340  0F80               	addlw	low _dbuf
  1967   001342  6ED9               	movwf	fsr2l,c
  1968   001344  6ADA               	clrf	fsr2h,c
  1969   001346  C013  F003         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1970   00134A  C014  F004         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1971   00134E  0E00               	movlw	0
  1972   001350  6E06               	movwf	(___awmod@divisor+1)^0,c
  1973   001352  0E0A               	movlw	10
  1974   001354  6E05               	movwf	___awmod@divisor^0,c
  1975   001356  ECD6  F00D         	call	___awmod	;wreg free
  1976   00135A  C003  F009         	movff	?___awmod,abs@a
  1977   00135E  C004  F00A         	movff	?___awmod+1,abs@a+1
  1978   001362  ECAC  F011         	call	_abs	;wreg free
  1979   001366  5009               	movf	?_abs^0,w,c
  1980   001368  0F30               	addlw	48
  1981   00136A  6EDF               	movwf	indf2,c
  1982   00136C                     
  1983                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1984   00136C  C013  F003         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1985   001370  C014  F004         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1986   001374  0E00               	movlw	0
  1987   001376  6E06               	movwf	(___awdiv@divisor+1)^0,c
  1988   001378  0E0A               	movlw	10
  1989   00137A  6E05               	movwf	___awdiv@divisor^0,c
  1990   00137C  EC18  F00D         	call	___awdiv	;wreg free
  1991   001380  C003  F013         	movff	?___awdiv,vfpfcnvrt@convarg
  1992   001384  C004  F014         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1993   001388                     
  1994                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1995   001388  5013               	movf	vfpfcnvrt@convarg^0,w,c
  1996   00138A  1014               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1997   00138C  B4D8               	btfsc	status,2,c
  1998   00138E  EFCB  F009         	goto	u2661
  1999   001392  EFCD  F009         	goto	u2660
  2000   001396                     u2661:
  2001   001396  EFD5  F009         	goto	l3768
  2002   00139A                     u2660:
  2003   00139A  5017               	movf	vfpfcnvrt@c^0,w,c
  2004   00139C  A4D8               	btfss	status,2,c
  2005   00139E  EFD3  F009         	goto	u2671
  2006   0013A2  EFD5  F009         	goto	u2670
  2007   0013A6                     u2671:
  2008   0013A6  EF9E  F009         	goto	l3760
  2009   0013AA                     u2670:
  2010   0013AA                     l3768:
  2011                           
  2012                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2013   0013AA  5017               	movf	vfpfcnvrt@c^0,w,c
  2014   0013AC  B4D8               	btfsc	status,2,c
  2015   0013AE  EFDB  F009         	goto	u2681
  2016   0013B2  EFDD  F009         	goto	u2680
  2017   0013B6                     u2681:
  2018   0013B6  EFFC  F009         	goto	l3778
  2019   0013BA                     u2680:
  2020   0013BA  5011               	movf	vfpfcnvrt@done^0,w,c
  2021   0013BC  B4D8               	btfsc	status,2,c
  2022   0013BE  EFE3  F009         	goto	u2691
  2023   0013C2  EFE5  F009         	goto	u2690
  2024   0013C6                     u2691:
  2025   0013C6  EFFC  F009         	goto	l3778
  2026   0013CA                     u2690:
  2027   0013CA                     
  2028                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2029   0013CA  0617               	decf	vfpfcnvrt@c^0,f,c
  2030   0013CC  5017               	movf	vfpfcnvrt@c^0,w,c
  2031   0013CE  0F80               	addlw	low _dbuf
  2032   0013D0  6ED9               	movwf	fsr2l,c
  2033   0013D2  6ADA               	clrf	fsr2h,c
  2034   0013D4  0E2D               	movlw	45
  2035   0013D6  6EDF               	movwf	indf2,c
  2036   0013D8  EFFC  F009         	goto	l3778
  2037   0013DC                     l3774:
  2038                           
  2039                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2040   0013DC  5017               	movf	vfpfcnvrt@c^0,w,c
  2041   0013DE  0F80               	addlw	low _dbuf
  2042   0013E0  6ED9               	movwf	fsr2l,c
  2043   0013E2  6ADA               	clrf	fsr2h,c
  2044   0013E4  50DF               	movf	indf2,w,c
  2045   0013E6  6E10               	movwf	??_vfpfcnvrt^0,c
  2046   0013E8  5010               	movf	??_vfpfcnvrt^0,w,c
  2047   0013EA  6E03               	movwf	fputc@c^0,c
  2048   0013EC  6A04               	clrf	(fputc@c+1)^0,c
  2049   0013EE  C00D  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2050   0013F2  EC2E  F00E         	call	_fputc	;wreg free
  2051   0013F6  2A17               	incf	vfpfcnvrt@c^0,f,c
  2052   0013F8                     l3778:
  2053                           
  2054                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2055   0013F8  0E20               	movlw	32
  2056   0013FA  1817               	xorwf	vfpfcnvrt@c^0,w,c
  2057   0013FC  A4D8               	btfss	status,2,c
  2058   0013FE  EF03  F00A         	goto	u2701
  2059   001402  EF05  F00A         	goto	u2700
  2060   001406                     u2701:
  2061   001406  EFEE  F009         	goto	l3774
  2062   00140A                     u2700:
  2063   00140A  EF1F  F00A         	goto	l1670
  2064   00140E                     l3780:
  2065                           
  2066                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2067   00140E  500E               	movf	vfpfcnvrt@fmt^0,w,c
  2068   001410  6ED9               	movwf	fsr2l,c
  2069   001412  6ADA               	clrf	fsr2h,c
  2070   001414  2ADF               	incf	indf2,f,c
  2071   001416  EF1F  F00A         	goto	l1670
  2072   00141A                     l3784:
  2073                           
  2074                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2075   00141A  500E               	movf	vfpfcnvrt@fmt^0,w,c
  2076   00141C  6ED9               	movwf	fsr2l,c
  2077   00141E  6ADA               	clrf	fsr2h,c
  2078   001420  CFDF FFF6          	movff	indf2,tblptrl
  2079   001424                     	if	1	;There is more than 1 active tblptr byte
  2080   001424  0E10               	movlw	high __smallconst
  2081   001426  6EF7               	movwf	tblptrh,c
  2082   001428                     	endif
  2083   001428                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2084   001428  6AF8               	clrf	tblptru,c
  2085   00142A                     	endif
  2086   00142A                     	if	0	;tblptru may be non-zero
  2087   00142A                     	endif
  2088   00142A  0008               	tblrd		*
  2089   00142C  50F5               	movf	tablat,w,c
  2090   00142E  6E03               	movwf	fputc@c^0,c
  2091   001430  6A04               	clrf	(fputc@c+1)^0,c
  2092   001432  C00D  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2093   001436  EC2E  F00E         	call	_fputc	;wreg free
  2094   00143A  EF07  F00A         	goto	l3780
  2095   00143E                     l1670:
  2096   00143E  0012               	return		;funcret
  2097   001440                     __end_of_vfpfcnvrt:
  2098                           	callstack 0
  2099                           
  2100 ;; *************** function _fputc *****************
  2101 ;; Defined at:
  2102 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;  c               2    2[COMRAM] int 
  2105 ;;  fp              1    4[COMRAM] PTR struct _IO_FILE
  2106 ;;		 -> sprintf@f(12), 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;		None
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  2    2[COMRAM] int 
  2111 ;; Registers used:
  2112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2118 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2120 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2122 ;;Total ram usage:        8 bytes
  2123 ;; Hardware stack levels used: 1
  2124 ;; Hardware stack levels required when called: 5
  2125 ;; This function calls:
  2126 ;;		_putch
  2127 ;; This function is called by:
  2128 ;;		_vfpfcnvrt
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           	psect	text9
  2133   001C5C                     __ptext9:
  2134                           	callstack 0
  2135   001C5C                     _fputc:
  2136                           	callstack 21
  2137   001C5C  5005               	movf	fputc@fp^0,w,c
  2138   001C5E  B4D8               	btfsc	status,2,c
  2139   001C60  EF34  F00E         	goto	u2521
  2140   001C64  EF36  F00E         	goto	u2520
  2141   001C68                     u2521:
  2142   001C68  EF3E  F00E         	goto	l3670
  2143   001C6C                     u2520:
  2144   001C6C  5005               	movf	fputc@fp^0,w,c
  2145   001C6E  A4D8               	btfss	status,2,c
  2146   001C70  EF3C  F00E         	goto	u2531
  2147   001C74  EF3E  F00E         	goto	u2530
  2148   001C78                     u2531:
  2149   001C78  EF43  F00E         	goto	l3672
  2150   001C7C                     u2530:
  2151   001C7C                     l3670:
  2152   001C7C  5003               	movf	fputc@c^0,w,c
  2153   001C7E  EC5A  F012         	call	_putch
  2154   001C82  EF82  F00E         	goto	l1695
  2155   001C86                     l3672:
  2156   001C86  5005               	movf	fputc@fp^0,w,c
  2157   001C88  6ED9               	movwf	fsr2l,c
  2158   001C8A  6ADA               	clrf	fsr2h,c
  2159   001C8C  0E0A               	movlw	10
  2160   001C8E  26D9               	addwf	fsr2l,f,c
  2161   001C90  50DE               	movf	postinc2,w,c
  2162   001C92  10DE               	iorwf	postinc2,w,c
  2163   001C94  B4D8               	btfsc	status,2,c
  2164   001C96  EF4F  F00E         	goto	u2541
  2165   001C9A  EF51  F00E         	goto	u2540
  2166   001C9E                     u2541:
  2167   001C9E  EF6A  F00E         	goto	l3676
  2168   001CA2                     u2540:
  2169   001CA2  5005               	movf	fputc@fp^0,w,c
  2170   001CA4  6ED9               	movwf	fsr2l,c
  2171   001CA6  6ADA               	clrf	fsr2h,c
  2172   001CA8  0E0A               	movlw	10
  2173   001CAA  26D9               	addwf	fsr2l,f,c
  2174   001CAC  5005               	movf	fputc@fp^0,w,c
  2175   001CAE  6EE1               	movwf	fsr1l,c
  2176   001CB0  6AE2               	clrf	fsr1h,c
  2177   001CB2  0E03               	movlw	3
  2178   001CB4  26E1               	addwf	fsr1l,f,c
  2179   001CB6  50DE               	movf	postinc2,w,c
  2180   001CB8  5CE6               	subwf	postinc1,w,c
  2181   001CBA  50E6               	movf	postinc1,w,c
  2182   001CBC  0A80               	xorlw	128
  2183   001CBE  6E0A               	movwf	(??_fputc+4)^0,c
  2184   001CC0  50DE               	movf	postinc2,w,c
  2185   001CC2  0A80               	xorlw	128
  2186   001CC4  580A               	subwfb	(??_fputc+4)^0,w,c
  2187   001CC6  B0D8               	btfsc	status,0,c
  2188   001CC8  EF68  F00E         	goto	u2551
  2189   001CCC  EF6A  F00E         	goto	u2550
  2190   001CD0                     u2551:
  2191   001CD0  EF82  F00E         	goto	l1695
  2192   001CD4                     u2550:
  2193   001CD4                     l3676:
  2194   001CD4  5005               	movf	fputc@fp^0,w,c
  2195   001CD6  6ED9               	movwf	fsr2l,c
  2196   001CD8  6ADA               	clrf	fsr2h,c
  2197   001CDA  0E03               	movlw	3
  2198   001CDC  26D9               	addwf	fsr2l,f,c
  2199   001CDE  50DF               	movf	indf2,w,c
  2200   001CE0  6E06               	movwf	??_fputc^0,c
  2201   001CE2  5005               	movf	fputc@fp^0,w,c
  2202   001CE4  6ED9               	movwf	fsr2l,c
  2203   001CE6  6ADA               	clrf	fsr2h,c
  2204   001CE8  50DF               	movf	indf2,w,c
  2205   001CEA  2406               	addwf	??_fputc^0,w,c
  2206   001CEC  6ED9               	movwf	fsr2l,c
  2207   001CEE  6ADA               	clrf	fsr2h,c
  2208   001CF0  C003  FFDF         	movff	fputc@c,indf2
  2209   001CF4  5005               	movf	fputc@fp^0,w,c
  2210   001CF6  6ED9               	movwf	fsr2l,c
  2211   001CF8  6ADA               	clrf	fsr2h,c
  2212   001CFA  0E03               	movlw	3
  2213   001CFC  26D9               	addwf	fsr2l,f,c
  2214   001CFE  2ADE               	incf	postinc2,f,c
  2215   001D00  0E00               	movlw	0
  2216   001D02  22DD               	addwfc	postdec2,f,c
  2217   001D04                     l1695:
  2218   001D04  0012               	return		;funcret
  2219   001D06                     __end_of_fputc:
  2220                           	callstack 0
  2221                           
  2222 ;; *************** function _putch *****************
  2223 ;; Defined at:
  2224 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;  c               1    wreg     unsigned char 
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;  c               1    0[COMRAM] unsigned char 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1    wreg      void 
  2231 ;; Registers used:
  2232 ;;		wreg
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2242 ;;Total ram usage:        0 bytes
  2243 ;; Hardware stack levels used: 1
  2244 ;; Hardware stack levels required when called: 4
  2245 ;; This function calls:
  2246 ;;		Nothing
  2247 ;; This function is called by:
  2248 ;;		_fputc
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           	psect	text10
  2253   0024B4                     __ptext10:
  2254                           	callstack 0
  2255   0024B4                     _putch:
  2256                           	callstack 21
  2257   0024B4  0012               	return		;funcret
  2258   0024B6                     __end_of_putch:
  2259                           	callstack 0
  2260                           
  2261 ;; *************** function _abs *****************
  2262 ;; Defined at:
  2263 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  2264 ;; Parameters:    Size  Location     Type
  2265 ;;  a               2    8[COMRAM] int 
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;		None
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  2    8[COMRAM] int 
  2270 ;; Registers used:
  2271 ;;		wreg, status,2, status,0
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2277 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2279 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2280 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2281 ;;Total ram usage:        4 bytes
  2282 ;; Hardware stack levels used: 1
  2283 ;; Hardware stack levels required when called: 4
  2284 ;; This function calls:
  2285 ;;		Nothing
  2286 ;; This function is called by:
  2287 ;;		_vfpfcnvrt
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           	psect	text11
  2292   002358                     __ptext11:
  2293                           	callstack 0
  2294   002358                     _abs:
  2295                           	callstack 22
  2296   002358  BE0A               	btfsc	(abs@a+1)^0,7,c
  2297   00235A  EFB1  F011         	goto	u2561
  2298   00235E  EFB3  F011         	goto	u2560
  2299   002362                     u2561:
  2300   002362  EFB9  F011         	goto	l1680
  2301   002366                     u2560:
  2302   002366  C009  F009         	movff	abs@a,?_abs
  2303   00236A  C00A  F00A         	movff	abs@a+1,?_abs+1
  2304   00236E  EFC5  F011         	goto	l1683
  2305   002372                     l1680:
  2306   002372  C009  F00B         	movff	abs@a,??_abs
  2307   002376  C00A  F00C         	movff	abs@a+1,??_abs+1
  2308   00237A  1E0B               	comf	??_abs^0,f,c
  2309   00237C  1E0C               	comf	(??_abs+1)^0,f,c
  2310   00237E  4A0B               	infsnz	??_abs^0,f,c
  2311   002380  2A0C               	incf	(??_abs+1)^0,f,c
  2312   002382  C00B  F009         	movff	??_abs,?_abs
  2313   002386  C00C  F00A         	movff	??_abs+1,?_abs+1
  2314   00238A                     l1683:
  2315   00238A  0012               	return		;funcret
  2316   00238C                     __end_of_abs:
  2317                           	callstack 0
  2318                           
  2319 ;; *************** function ___awmod *****************
  2320 ;; Defined at:
  2321 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;  dividend        2    2[COMRAM] int 
  2324 ;;  divisor         2    4[COMRAM] int 
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;  sign            1    7[COMRAM] unsigned char 
  2327 ;;  counter         1    6[COMRAM] unsigned char 
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  2    2[COMRAM] int 
  2330 ;; Registers used:
  2331 ;;		wreg, status,2, status,0
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2337 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2338 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2340 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2341 ;;Total ram usage:        6 bytes
  2342 ;; Hardware stack levels used: 1
  2343 ;; Hardware stack levels required when called: 4
  2344 ;; This function calls:
  2345 ;;		Nothing
  2346 ;; This function is called by:
  2347 ;;		_vfpfcnvrt
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351                           	psect	text12
  2352   001BAC                     __ptext12:
  2353                           	callstack 0
  2354   001BAC                     ___awmod:
  2355                           	callstack 22
  2356   001BAC  0E00               	movlw	0
  2357   001BAE  6E08               	movwf	___awmod@sign^0,c
  2358   001BB0  BE04               	btfsc	(___awmod@dividend+1)^0,7,c
  2359   001BB2  EFDF  F00D         	goto	u2460
  2360   001BB6  EFDD  F00D         	goto	u2461
  2361   001BBA                     u2461:
  2362   001BBA  EFE5  F00D         	goto	l3638
  2363   001BBE                     u2460:
  2364   001BBE  6C03               	negf	___awmod@dividend^0,c
  2365   001BC0  1E04               	comf	(___awmod@dividend+1)^0,f,c
  2366   001BC2  B0D8               	btfsc	status,0,c
  2367   001BC4  2A04               	incf	(___awmod@dividend+1)^0,f,c
  2368   001BC6  0E01               	movlw	1
  2369   001BC8  6E08               	movwf	___awmod@sign^0,c
  2370   001BCA                     l3638:
  2371   001BCA  BE06               	btfsc	(___awmod@divisor+1)^0,7,c
  2372   001BCC  EFEC  F00D         	goto	u2470
  2373   001BD0  EFEA  F00D         	goto	u2471
  2374   001BD4                     u2471:
  2375   001BD4  EFF0  F00D         	goto	l3642
  2376   001BD8                     u2470:
  2377   001BD8  6C05               	negf	___awmod@divisor^0,c
  2378   001BDA  1E06               	comf	(___awmod@divisor+1)^0,f,c
  2379   001BDC  B0D8               	btfsc	status,0,c
  2380   001BDE  2A06               	incf	(___awmod@divisor+1)^0,f,c
  2381   001BE0                     l3642:
  2382   001BE0  5005               	movf	___awmod@divisor^0,w,c
  2383   001BE2  1006               	iorwf	(___awmod@divisor+1)^0,w,c
  2384   001BE4  B4D8               	btfsc	status,2,c
  2385   001BE6  EFF7  F00D         	goto	u2481
  2386   001BEA  EFF9  F00D         	goto	u2480
  2387   001BEE                     u2481:
  2388   001BEE  EF1D  F00E         	goto	l3658
  2389   001BF2                     u2480:
  2390   001BF2  0E01               	movlw	1
  2391   001BF4  6E07               	movwf	___awmod@counter^0,c
  2392   001BF6  EF01  F00E         	goto	l3648
  2393   001BFA                     l3646:
  2394   001BFA  90D8               	bcf	status,0,c
  2395   001BFC  3605               	rlcf	___awmod@divisor^0,f,c
  2396   001BFE  3606               	rlcf	(___awmod@divisor+1)^0,f,c
  2397   001C00  2A07               	incf	___awmod@counter^0,f,c
  2398   001C02                     l3648:
  2399   001C02  AE06               	btfss	(___awmod@divisor+1)^0,7,c
  2400   001C04  EF06  F00E         	goto	u2491
  2401   001C08  EF08  F00E         	goto	u2490
  2402   001C0C                     u2491:
  2403   001C0C  EFFD  F00D         	goto	l3646
  2404   001C10                     u2490:
  2405   001C10                     l3650:
  2406   001C10  5005               	movf	___awmod@divisor^0,w,c
  2407   001C12  5C03               	subwf	___awmod@dividend^0,w,c
  2408   001C14  5006               	movf	(___awmod@divisor+1)^0,w,c
  2409   001C16  5804               	subwfb	(___awmod@dividend+1)^0,w,c
  2410   001C18  A0D8               	btfss	status,0,c
  2411   001C1A  EF11  F00E         	goto	u2501
  2412   001C1E  EF13  F00E         	goto	u2500
  2413   001C22                     u2501:
  2414   001C22  EF17  F00E         	goto	l3654
  2415   001C26                     u2500:
  2416   001C26  5005               	movf	___awmod@divisor^0,w,c
  2417   001C28  5E03               	subwf	___awmod@dividend^0,f,c
  2418   001C2A  5006               	movf	(___awmod@divisor+1)^0,w,c
  2419   001C2C  5A04               	subwfb	(___awmod@dividend+1)^0,f,c
  2420   001C2E                     l3654:
  2421   001C2E  90D8               	bcf	status,0,c
  2422   001C30  3206               	rrcf	(___awmod@divisor+1)^0,f,c
  2423   001C32  3205               	rrcf	___awmod@divisor^0,f,c
  2424   001C34  2E07               	decfsz	___awmod@counter^0,f,c
  2425   001C36  EF08  F00E         	goto	l3650
  2426   001C3A                     l3658:
  2427   001C3A  5008               	movf	___awmod@sign^0,w,c
  2428   001C3C  B4D8               	btfsc	status,2,c
  2429   001C3E  EF23  F00E         	goto	u2511
  2430   001C42  EF25  F00E         	goto	u2510
  2431   001C46                     u2511:
  2432   001C46  EF29  F00E         	goto	l3662
  2433   001C4A                     u2510:
  2434   001C4A  6C03               	negf	___awmod@dividend^0,c
  2435   001C4C  1E04               	comf	(___awmod@dividend+1)^0,f,c
  2436   001C4E  B0D8               	btfsc	status,0,c
  2437   001C50  2A04               	incf	(___awmod@dividend+1)^0,f,c
  2438   001C52                     l3662:
  2439   001C52  C003  F003         	movff	___awmod@dividend,?___awmod
  2440   001C56  C004  F004         	movff	___awmod@dividend+1,?___awmod+1
  2441   001C5A  0012               	return		;funcret
  2442   001C5C                     __end_of___awmod:
  2443                           	callstack 0
  2444                           
  2445 ;; *************** function ___awdiv *****************
  2446 ;; Defined at:
  2447 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  dividend        2    2[COMRAM] int 
  2450 ;;  divisor         2    4[COMRAM] int 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;  quotient        2    8[COMRAM] int 
  2453 ;;  sign            1    7[COMRAM] unsigned char 
  2454 ;;  counter         1    6[COMRAM] unsigned char 
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  2    2[COMRAM] int 
  2457 ;; Registers used:
  2458 ;;		wreg, status,2, status,0
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2464 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2465 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2467 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2468 ;;Total ram usage:        8 bytes
  2469 ;; Hardware stack levels used: 1
  2470 ;; Hardware stack levels required when called: 4
  2471 ;; This function calls:
  2472 ;;		Nothing
  2473 ;; This function is called by:
  2474 ;;		_vfpfcnvrt
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           	psect	text13
  2479   001A30                     __ptext13:
  2480                           	callstack 0
  2481   001A30                     ___awdiv:
  2482                           	callstack 22
  2483   001A30  0E00               	movlw	0
  2484   001A32  6E08               	movwf	___awdiv@sign^0,c
  2485   001A34  BE06               	btfsc	(___awdiv@divisor+1)^0,7,c
  2486   001A36  EF21  F00D         	goto	u2400
  2487   001A3A  EF1F  F00D         	goto	u2401
  2488   001A3E                     u2401:
  2489   001A3E  EF27  F00D         	goto	l3594
  2490   001A42                     u2400:
  2491   001A42  6C05               	negf	___awdiv@divisor^0,c
  2492   001A44  1E06               	comf	(___awdiv@divisor+1)^0,f,c
  2493   001A46  B0D8               	btfsc	status,0,c
  2494   001A48  2A06               	incf	(___awdiv@divisor+1)^0,f,c
  2495   001A4A  0E01               	movlw	1
  2496   001A4C  6E08               	movwf	___awdiv@sign^0,c
  2497   001A4E                     l3594:
  2498   001A4E  BE04               	btfsc	(___awdiv@dividend+1)^0,7,c
  2499   001A50  EF2E  F00D         	goto	u2410
  2500   001A54  EF2C  F00D         	goto	u2411
  2501   001A58                     u2411:
  2502   001A58  EF34  F00D         	goto	l3600
  2503   001A5C                     u2410:
  2504   001A5C  6C03               	negf	___awdiv@dividend^0,c
  2505   001A5E  1E04               	comf	(___awdiv@dividend+1)^0,f,c
  2506   001A60  B0D8               	btfsc	status,0,c
  2507   001A62  2A04               	incf	(___awdiv@dividend+1)^0,f,c
  2508   001A64  0E01               	movlw	1
  2509   001A66  1A08               	xorwf	___awdiv@sign^0,f,c
  2510   001A68                     l3600:
  2511   001A68  0E00               	movlw	0
  2512   001A6A  6E0A               	movwf	(___awdiv@quotient+1)^0,c
  2513   001A6C  0E00               	movlw	0
  2514   001A6E  6E09               	movwf	___awdiv@quotient^0,c
  2515   001A70  5005               	movf	___awdiv@divisor^0,w,c
  2516   001A72  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
  2517   001A74  B4D8               	btfsc	status,2,c
  2518   001A76  EF3F  F00D         	goto	u2421
  2519   001A7A  EF41  F00D         	goto	u2420
  2520   001A7E                     u2421:
  2521   001A7E  EF69  F00D         	goto	l3622
  2522   001A82                     u2420:
  2523   001A82  0E01               	movlw	1
  2524   001A84  6E07               	movwf	___awdiv@counter^0,c
  2525   001A86  EF49  F00D         	goto	l3608
  2526   001A8A                     l3606:
  2527   001A8A  90D8               	bcf	status,0,c
  2528   001A8C  3605               	rlcf	___awdiv@divisor^0,f,c
  2529   001A8E  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
  2530   001A90  2A07               	incf	___awdiv@counter^0,f,c
  2531   001A92                     l3608:
  2532   001A92  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  2533   001A94  EF4E  F00D         	goto	u2431
  2534   001A98  EF50  F00D         	goto	u2430
  2535   001A9C                     u2431:
  2536   001A9C  EF45  F00D         	goto	l3606
  2537   001AA0                     u2430:
  2538   001AA0                     l3610:
  2539   001AA0  90D8               	bcf	status,0,c
  2540   001AA2  3609               	rlcf	___awdiv@quotient^0,f,c
  2541   001AA4  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
  2542   001AA6  5005               	movf	___awdiv@divisor^0,w,c
  2543   001AA8  5C03               	subwf	___awdiv@dividend^0,w,c
  2544   001AAA  5006               	movf	(___awdiv@divisor+1)^0,w,c
  2545   001AAC  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
  2546   001AAE  A0D8               	btfss	status,0,c
  2547   001AB0  EF5C  F00D         	goto	u2441
  2548   001AB4  EF5E  F00D         	goto	u2440
  2549   001AB8                     u2441:
  2550   001AB8  EF63  F00D         	goto	l3618
  2551   001ABC                     u2440:
  2552   001ABC  5005               	movf	___awdiv@divisor^0,w,c
  2553   001ABE  5E03               	subwf	___awdiv@dividend^0,f,c
  2554   001AC0  5006               	movf	(___awdiv@divisor+1)^0,w,c
  2555   001AC2  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
  2556   001AC4  8009               	bsf	___awdiv@quotient^0,0,c
  2557   001AC6                     l3618:
  2558   001AC6  90D8               	bcf	status,0,c
  2559   001AC8  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
  2560   001ACA  3205               	rrcf	___awdiv@divisor^0,f,c
  2561   001ACC  2E07               	decfsz	___awdiv@counter^0,f,c
  2562   001ACE  EF50  F00D         	goto	l3610
  2563   001AD2                     l3622:
  2564   001AD2  5008               	movf	___awdiv@sign^0,w,c
  2565   001AD4  B4D8               	btfsc	status,2,c
  2566   001AD6  EF6F  F00D         	goto	u2451
  2567   001ADA  EF71  F00D         	goto	u2450
  2568   001ADE                     u2451:
  2569   001ADE  EF75  F00D         	goto	l3626
  2570   001AE2                     u2450:
  2571   001AE2  6C09               	negf	___awdiv@quotient^0,c
  2572   001AE4  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
  2573   001AE6  B0D8               	btfsc	status,0,c
  2574   001AE8  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
  2575   001AEA                     l3626:
  2576   001AEA  C009  F003         	movff	___awdiv@quotient,?___awdiv
  2577   001AEE  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
  2578   001AF2  0012               	return		;funcret
  2579   001AF4                     __end_of___awdiv:
  2580                           	callstack 0
  2581                           
  2582 ;; *************** function _memset *****************
  2583 ;; Defined at:
  2584 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memset.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;  dest            1    2[COMRAM] PTR void 
  2587 ;;		 -> adc_res_4_txt(6), adc_res_3_txt(6), adc_res_2_txt(6), adc_res_1_txt(6), 
  2588 ;;  c               2    3[COMRAM] int 
  2589 ;;  n               2    5[COMRAM] unsigned int 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  p               1    7[COMRAM] PTR unsigned char 
  2592 ;;		 -> adc_res_4_txt(6), adc_res_3_txt(6), adc_res_2_txt(6), adc_res_1_txt(6), 
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  1    wreg      PTR void 
  2595 ;; Registers used:
  2596 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2602 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;Total ram usage:        6 bytes
  2607 ;; Hardware stack levels used: 1
  2608 ;; Hardware stack levels required when called: 4
  2609 ;; This function calls:
  2610 ;;		Nothing
  2611 ;; This function is called by:
  2612 ;;		_convert_uint16_to_string
  2613 ;;		_convert_uin8_to_string
  2614 ;;		_convert_uint32_to_string
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           	psect	text14
  2619   00238C                     __ptext14:
  2620                           	callstack 0
  2621   00238C                     _memset:
  2622                           	callstack 25
  2623   00238C  C003  F008         	movff	memset@dest,memset@p
  2624   002390  EFD0  F011         	goto	l3968
  2625   002394                     l3964:
  2626   002394  5008               	movf	memset@p^0,w,c
  2627   002396  6ED9               	movwf	fsr2l,c
  2628   002398  6ADA               	clrf	fsr2h,c
  2629   00239A  C004  FFDF         	movff	memset@c,indf2
  2630   00239E  2A08               	incf	memset@p^0,f,c
  2631   0023A0                     l3968:
  2632   0023A0  0606               	decf	memset@n^0,f,c
  2633   0023A2  A0D8               	btfss	status,0,c
  2634   0023A4  0607               	decf	(memset@n+1)^0,f,c
  2635   0023A6  2806               	incf	memset@n^0,w,c
  2636   0023A8  E106               	bnz	u2921
  2637   0023AA  2807               	incf	(memset@n+1)^0,w,c
  2638   0023AC  A4D8               	btfss	status,2,c
  2639   0023AE  EFDB  F011         	goto	u2921
  2640   0023B2  EFDD  F011         	goto	u2920
  2641   0023B6                     u2921:
  2642   0023B6  EFCA  F011         	goto	l3964
  2643   0023BA                     u2920:
  2644   0023BA  0012               	return		;funcret
  2645   0023BC                     __end_of_memset:
  2646                           	callstack 0
  2647                           
  2648 ;; *************** function _application_initialize *****************
  2649 ;; Defined at:
  2650 ;;		line 71 in file "Application1.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;		None
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;  ret_init        1    0        unsigned char 
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  1    wreg      void 
  2657 ;; Registers used:
  2658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2668 ;;Total ram usage:        0 bytes
  2669 ;; Hardware stack levels used: 1
  2670 ;; Hardware stack levels required when called: 9
  2671 ;; This function calls:
  2672 ;;		_adc_Init
  2673 ;;		_ecu_layer_initialize
  2674 ;; This function is called by:
  2675 ;;		_main
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           	psect	text15
  2680   00248C                     __ptext15:
  2681                           	callstack 0
  2682   00248C                     _application_initialize:
  2683                           	callstack 21
  2684   00248C  EC4D  F012         	call	_ecu_layer_initialize	;wreg free
  2685   002490  0E79               	movlw	low _adc1
  2686   002492  6E0A               	movwf	adc_Init@_adc^0,c
  2687   002494  EC1C  F00F         	call	_adc_Init	;wreg free
  2688   002498  0012               	return		;funcret
  2689   00249A                     __end_of_application_initialize:
  2690                           	callstack 0
  2691                           
  2692 ;; *************** function _ecu_layer_initialize *****************
  2693 ;; Defined at:
  2694 ;;		line 213 in file "ECU_Layer/ecu_layer_init.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;		None
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;  ret_init        1   23[COMRAM] unsigned char 
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  1    wreg      unsigned char 
  2701 ;; Registers used:
  2702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2709 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2711 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2712 ;;Total ram usage:        1 bytes
  2713 ;; Hardware stack levels used: 1
  2714 ;; Hardware stack levels required when called: 8
  2715 ;; This function calls:
  2716 ;;		_lcd_4bit_initialize
  2717 ;; This function is called by:
  2718 ;;		_application_initialize
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           	psect	text16
  2723   00249A                     __ptext16:
  2724                           	callstack 0
  2725   00249A                     _ecu_layer_initialize:
  2726                           	callstack 21
  2727   00249A                     
  2728                           ;ECU_Layer/ecu_layer_init.c: 217:     ret_init = lcd_4bit_initialize(&lcd1);
  2729   00249A  0E73               	movlw	low _lcd1
  2730   00249C  6E14               	movwf	lcd_4bit_initialize@lcd^0,c
  2731   00249E  EC37  F00C         	call	_lcd_4bit_initialize	;wreg free
  2732   0024A2  6E18               	movwf	ecu_layer_initialize@ret_init^0,c
  2733   0024A4                     
  2734                           ;ECU_Layer/ecu_layer_init.c: 219:     return ret_init;
  2735   0024A4  5018               	movf	ecu_layer_initialize@ret_init^0,w,c
  2736   0024A6  0012               	return		;funcret
  2737   0024A8                     __end_of_ecu_layer_initialize:
  2738                           	callstack 0
  2739                           
  2740 ;; *************** function _lcd_4bit_initialize *****************
  2741 ;; Defined at:
  2742 ;;		line 41 in file "ECU_Layer/LCD/ecu_lcd.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;  lcd             1   19[COMRAM] PTR const struct .
  2745 ;;		 -> lcd1(6), 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  ret             1   22[COMRAM] unsigned char 
  2748 ;;  l_pins_count    1   21[COMRAM] unsigned char 
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      unsigned char 
  2751 ;; Registers used:
  2752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2758 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;Total ram usage:        4 bytes
  2763 ;; Hardware stack levels used: 1
  2764 ;; Hardware stack levels required when called: 7
  2765 ;; This function calls:
  2766 ;;		_gpio_pin_initialize
  2767 ;;		_lcd_4bit_send_command
  2768 ;; This function is called by:
  2769 ;;		_ecu_layer_initialize
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           	psect	text17
  2774   00186E                     __ptext17:
  2775                           	callstack 0
  2776   00186E                     _lcd_4bit_initialize:
  2777                           	callstack 21
  2778   00186E                     
  2779                           ;ECU_Layer/LCD/ecu_lcd.c: 44:     uint8 l_pins_counter = 0;
  2780   00186E  0E00               	movlw	0
  2781   001870  6E16               	movwf	lcd_4bit_initialize@l_pins_counter^0,c
  2782                           
  2783                           ;ECU_Layer/LCD/ecu_lcd.c: 45:     if(lcd != ((void*)0))
  2784   001872  5014               	movf	lcd_4bit_initialize@lcd^0,w,c
  2785   001874  B4D8               	btfsc	status,2,c
  2786   001876  EF3F  F00C         	goto	u2711
  2787   00187A  EF41  F00C         	goto	u2710
  2788   00187E                     u2711:
  2789   00187E  EFA6  F00C         	goto	l3828
  2790   001882                     u2710:
  2791   001882                     
  2792                           ;ECU_Layer/LCD/ecu_lcd.c: 46:     {;ECU_Layer/LCD/ecu_lcd.c: 47:         ret = gpio_pin_
      +                          initialize(&(lcd->lcd_rs));
  2793   001882  C014  F00B         	movff	lcd_4bit_initialize@lcd,gpio_pin_initialize@_pin_config
  2794   001886  EC5D  F00F         	call	_gpio_pin_initialize	;wreg free
  2795   00188A  6E17               	movwf	lcd_4bit_initialize@ret^0,c
  2796                           
  2797                           ;ECU_Layer/LCD/ecu_lcd.c: 48:         ret = gpio_pin_initialize(&(lcd->lcd_en));
  2798   00188C  2814               	incf	lcd_4bit_initialize@lcd^0,w,c
  2799   00188E  6E0B               	movwf	gpio_pin_initialize@_pin_config^0,c
  2800   001890  EC5D  F00F         	call	_gpio_pin_initialize	;wreg free
  2801   001894  6E17               	movwf	lcd_4bit_initialize@ret^0,c
  2802   001896                     
  2803                           ;ECU_Layer/LCD/ecu_lcd.c: 49:         for(l_pins_counter = 0 ; l_pins_counter<4 ; l_pins
      +                          _counter++)
  2804   001896  0E00               	movlw	0
  2805   001898  6E16               	movwf	lcd_4bit_initialize@l_pins_counter^0,c
  2806   00189A                     l3800:
  2807   00189A  5014               	movf	lcd_4bit_initialize@lcd^0,w,c
  2808   00189C  2416               	addwf	lcd_4bit_initialize@l_pins_counter^0,w,c
  2809   00189E  0F02               	addlw	2
  2810   0018A0  6E0B               	movwf	gpio_pin_initialize@_pin_config^0,c
  2811   0018A2  EC5D  F00F         	call	_gpio_pin_initialize	;wreg free
  2812   0018A6                     
  2813                           ;ECU_Layer/LCD/ecu_lcd.c: 52:         }
  2814   0018A6  2A16               	incf	lcd_4bit_initialize@l_pins_counter^0,f,c
  2815   0018A8  0E03               	movlw	3
  2816   0018AA  6416               	cpfsgt	lcd_4bit_initialize@l_pins_counter^0,c
  2817   0018AC  EF5A  F00C         	goto	u2721
  2818   0018B0  EF5C  F00C         	goto	u2720
  2819   0018B4                     u2721:
  2820   0018B4  EF4D  F00C         	goto	l3800
  2821   0018B8                     u2720:
  2822   0018B8                     
  2823                           ;ECU_Layer/LCD/ecu_lcd.c: 54:         _delay((unsigned long)((20)*(8000000UL/4000.0)));
  2824   0018B8  0E34               	movlw	52
  2825   0018BA  6E15               	movwf	??_lcd_4bit_initialize^0,c
  2826   0018BC  0EF2               	movlw	242
  2827   0018BE                     u3787:
  2828   0018BE  2EE8               	decfsz	wreg,f,c
  2829   0018C0  D7FE               	bra	u3787
  2830   0018C2  2E15               	decfsz	??_lcd_4bit_initialize^0,f,c
  2831   0018C4  D7FC               	bra	u3787
  2832   0018C6  C014  F011         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2833   0018CA  0E38               	movlw	56
  2834   0018CC  6E12               	movwf	lcd_4bit_send_command@command^0,c
  2835   0018CE  ECBB  F010         	call	_lcd_4bit_send_command	;wreg free
  2836   0018D2                     
  2837                           ;ECU_Layer/LCD/ecu_lcd.c: 57:         _delay((unsigned long)((5)*(8000000UL/4000.0)));
  2838   0018D2  0E0D               	movlw	13
  2839   0018D4  6E15               	movwf	??_lcd_4bit_initialize^0,c
  2840   0018D6  0EFC               	movlw	252
  2841   0018D8                     u3797:
  2842   0018D8  2EE8               	decfsz	wreg,f,c
  2843   0018DA  D7FE               	bra	u3797
  2844   0018DC  2E15               	decfsz	??_lcd_4bit_initialize^0,f,c
  2845   0018DE  D7FC               	bra	u3797
  2846   0018E0  C014  F011         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2847   0018E4  0E38               	movlw	56
  2848   0018E6  6E12               	movwf	lcd_4bit_send_command@command^0,c
  2849   0018E8  ECBB  F010         	call	_lcd_4bit_send_command	;wreg free
  2850   0018EC                     
  2851                           ;ECU_Layer/LCD/ecu_lcd.c: 59:         _delay((unsigned long)((150)*(8000000UL/4000000.0)
      +                          ));
  2852   0018EC  0E64               	movlw	100
  2853   0018EE                     u3807:
  2854   0018EE  2EE8               	decfsz	wreg,f,c
  2855   0018F0  D7FE               	bra	u3807
  2856   0018F2  C014  F011         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2857   0018F6  0E38               	movlw	56
  2858   0018F8  6E12               	movwf	lcd_4bit_send_command@command^0,c
  2859   0018FA  ECBB  F010         	call	_lcd_4bit_send_command	;wreg free
  2860   0018FE  C014  F011         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2861   001902  0E01               	movlw	1
  2862   001904  6E12               	movwf	lcd_4bit_send_command@command^0,c
  2863   001906  ECBB  F010         	call	_lcd_4bit_send_command	;wreg free
  2864   00190A  C014  F011         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2865   00190E  0E02               	movlw	2
  2866   001910  6E12               	movwf	lcd_4bit_send_command@command^0,c
  2867   001912  ECBB  F010         	call	_lcd_4bit_send_command	;wreg free
  2868   001916  C014  F011         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2869   00191A  0E06               	movlw	6
  2870   00191C  6E12               	movwf	lcd_4bit_send_command@command^0,c
  2871   00191E  ECBB  F010         	call	_lcd_4bit_send_command	;wreg free
  2872   001922  C014  F011         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2873   001926  0E0C               	movlw	12
  2874   001928  6E12               	movwf	lcd_4bit_send_command@command^0,c
  2875   00192A  ECBB  F010         	call	_lcd_4bit_send_command	;wreg free
  2876   00192E  C014  F011         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2877   001932  0E28               	movlw	40
  2878   001934  6E12               	movwf	lcd_4bit_send_command@command^0,c
  2879   001936  ECBB  F010         	call	_lcd_4bit_send_command	;wreg free
  2880   00193A                     
  2881                           ;ECU_Layer/LCD/ecu_lcd.c: 73:         ret = lcd_4bit_send_command(lcd,0x80);
  2882   00193A  C014  F011         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2883   00193E  0E80               	movlw	128
  2884   001940  6E12               	movwf	lcd_4bit_send_command@command^0,c
  2885   001942  ECBB  F010         	call	_lcd_4bit_send_command	;wreg free
  2886   001946  6E17               	movwf	lcd_4bit_initialize@ret^0,c
  2887                           
  2888                           ;ECU_Layer/LCD/ecu_lcd.c: 74:     }
  2889   001948  EFA8  F00C         	goto	l108
  2890   00194C                     l3828:
  2891   00194C  0E00               	movlw	0
  2892   00194E  6E17               	movwf	lcd_4bit_initialize@ret^0,c
  2893   001950                     l108:
  2894                           
  2895                           ;ECU_Layer/LCD/ecu_lcd.c: 77:     return ret;
  2896   001950  5017               	movf	lcd_4bit_initialize@ret^0,w,c
  2897   001952  0012               	return		;funcret
  2898   001954                     __end_of_lcd_4bit_initialize:
  2899                           	callstack 0
  2900                           
  2901 ;; *************** function _lcd_4bit_send_command *****************
  2902 ;; Defined at:
  2903 ;;		line 88 in file "ECU_Layer/LCD/ecu_lcd.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;  lcd             1   16[COMRAM] PTR const struct .
  2906 ;;		 -> lcd1(6), 
  2907 ;;  command         1   17[COMRAM] unsigned char 
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;  ret             1   18[COMRAM] unsigned char 
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  1    wreg      unsigned char 
  2912 ;; Registers used:
  2913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2919 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2920 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2922 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2923 ;;Total ram usage:        3 bytes
  2924 ;; Hardware stack levels used: 1
  2925 ;; Hardware stack levels required when called: 6
  2926 ;; This function calls:
  2927 ;;		_gpio_pin_write_logic
  2928 ;;		_lcd_4bit_send_enable_signal
  2929 ;;		_lcd_send_4bits
  2930 ;; This function is called by:
  2931 ;;		_lcd_4bit_initialize
  2932 ;;		_lcd_4bit_set_cursor
  2933 ;;		_main
  2934 ;;		_lcd_4bit_send_custom_char
  2935 ;;		_lcd_4bit_send_custom_char_at_pos
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           
  2939                           	psect	text18
  2940   002176                     __ptext18:
  2941                           	callstack 0
  2942   002176                     _lcd_4bit_send_command:
  2943                           	callstack 22
  2944   002176                     
  2945                           ;ECU_Layer/LCD/ecu_lcd.c: 91:     if(lcd != ((void*)0))
  2946   002176  5011               	movf	lcd_4bit_send_command@lcd^0,w,c
  2947   002178  B4D8               	btfsc	status,2,c
  2948   00217A  EFC1  F010         	goto	u2601
  2949   00217E  EFC3  F010         	goto	u2600
  2950   002182                     u2601:
  2951   002182  EFE5  F010         	goto	l3700
  2952   002186                     u2600:
  2953   002186                     
  2954                           ;ECU_Layer/LCD/ecu_lcd.c: 92:     {;ECU_Layer/LCD/ecu_lcd.c: 95:         ret = gpio_pin_
      +                          write_logic(&(lcd->lcd_rs),GPIO_LOGIC_LOW);
  2955   002186  C011  F003         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  2956   00218A  0E00               	movlw	0
  2957   00218C  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  2958   00218E  ECFC  F00A         	call	_gpio_pin_write_logic	;wreg free
  2959   002192  6E13               	movwf	lcd_4bit_send_command@ret^0,c
  2960                           
  2961                           ;ECU_Layer/LCD/ecu_lcd.c: 97:         ret = lcd_send_4bits(lcd,command >> 4);
  2962   002194  C011  F00B         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  2963   002198  3812               	swapf	lcd_4bit_send_command@command^0,w,c
  2964   00219A  0B0F               	andlw	15
  2965   00219C  6E0C               	movwf	lcd_send_4bits@_data_command^0,c
  2966   00219E  ECFD  F00F         	call	_lcd_send_4bits	;wreg free
  2967   0021A2  6E13               	movwf	lcd_4bit_send_command@ret^0,c
  2968                           
  2969                           ;ECU_Layer/LCD/ecu_lcd.c: 99:         ret = lcd_4bit_send_enable_signal(lcd);
  2970   0021A4  C011  F00B         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  2971   0021A8  EC57  F011         	call	_lcd_4bit_send_enable_signal	;wreg free
  2972   0021AC  6E13               	movwf	lcd_4bit_send_command@ret^0,c
  2973                           
  2974                           ;ECU_Layer/LCD/ecu_lcd.c: 101:         ret = lcd_send_4bits(lcd,command);
  2975   0021AE  C011  F00B         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  2976   0021B2  C012  F00C         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  2977   0021B6  ECFD  F00F         	call	_lcd_send_4bits	;wreg free
  2978   0021BA  6E13               	movwf	lcd_4bit_send_command@ret^0,c
  2979                           
  2980                           ;ECU_Layer/LCD/ecu_lcd.c: 103:         ret = lcd_4bit_send_enable_signal(lcd);
  2981   0021BC  C011  F00B         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  2982   0021C0  EC57  F011         	call	_lcd_4bit_send_enable_signal	;wreg free
  2983   0021C4  6E13               	movwf	lcd_4bit_send_command@ret^0,c
  2984                           
  2985                           ;ECU_Layer/LCD/ecu_lcd.c: 104:     }
  2986   0021C6  EFE7  F010         	goto	l113
  2987   0021CA                     l3700:
  2988   0021CA  0E00               	movlw	0
  2989   0021CC  6E13               	movwf	lcd_4bit_send_command@ret^0,c
  2990   0021CE                     l113:
  2991                           
  2992                           ;ECU_Layer/LCD/ecu_lcd.c: 107:     return ret;
  2993   0021CE  5013               	movf	lcd_4bit_send_command@ret^0,w,c
  2994   0021D0  0012               	return		;funcret
  2995   0021D2                     __end_of_lcd_4bit_send_command:
  2996                           	callstack 0
  2997                           
  2998 ;; *************** function _lcd_send_4bits *****************
  2999 ;; Defined at:
  3000 ;;		line 579 in file "ECU_Layer/LCD/ecu_lcd.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;  lcd             1   10[COMRAM] PTR const struct .
  3003 ;;		 -> lcd1(6), 
  3004 ;;  _data_comman    1   11[COMRAM] unsigned char 
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;  l_pins_count    1   15[COMRAM] unsigned char 
  3007 ;;  ret             1   14[COMRAM] unsigned char 
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1    wreg      unsigned char 
  3010 ;; Registers used:
  3011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3017 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3018 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3019 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3020 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3021 ;;Total ram usage:        6 bytes
  3022 ;; Hardware stack levels used: 1
  3023 ;; Hardware stack levels required when called: 5
  3024 ;; This function calls:
  3025 ;;		_gpio_pin_write_logic
  3026 ;; This function is called by:
  3027 ;;		_lcd_4bit_send_command
  3028 ;;		_lcd_4bit_send_char_data
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           	psect	text19
  3033   001FFA                     __ptext19:
  3034                           	callstack 0
  3035   001FFA                     _lcd_send_4bits:
  3036                           	callstack 22
  3037   001FFA                     
  3038                           ;ECU_Layer/LCD/ecu_lcd.c: 582:     uint8 l_pins_counter = 0;
  3039   001FFA  0E00               	movlw	0
  3040   001FFC  6E10               	movwf	lcd_send_4bits@l_pins_counter^0,c
  3041                           
  3042                           ;ECU_Layer/LCD/ecu_lcd.c: 583:     if(lcd != ((void*)0))
  3043   001FFE  500B               	movf	lcd_send_4bits@lcd^0,w,c
  3044   002000  B4D8               	btfsc	status,2,c
  3045   002002  EF05  F010         	goto	u2361
  3046   002006  EF07  F010         	goto	u2360
  3047   00200A                     u2361:
  3048   00200A  EF2A  F010         	goto	l3570
  3049   00200E                     u2360:
  3050   00200E                     
  3051                           ;ECU_Layer/LCD/ecu_lcd.c: 584:     {;ECU_Layer/LCD/ecu_lcd.c: 585:         for(l_pins_co
      +                          unter = 0 ; l_pins_counter<4 ; l_pins_counter++)
  3052   00200E  0E00               	movlw	0
  3053   002010  6E10               	movwf	lcd_send_4bits@l_pins_counter^0,c
  3054   002012                     l3564:
  3055                           
  3056                           ;ECU_Layer/LCD/ecu_lcd.c: 586:         {;ECU_Layer/LCD/ecu_lcd.c: 587:             ret =
      +                           gpio_pin_write_logic(&(lcd->lcd_data[l_pins_counter]),((_data_command >> l_pins_counter
      +                          ) & 1));
  3057   002012  500B               	movf	lcd_send_4bits@lcd^0,w,c
  3058   002014  2410               	addwf	lcd_send_4bits@l_pins_counter^0,w,c
  3059   002016  0F02               	addlw	2
  3060   002018  6E03               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3061   00201A  C010  F00D         	movff	lcd_send_4bits@l_pins_counter,??_lcd_send_4bits
  3062   00201E  C00C  F00E         	movff	lcd_send_4bits@_data_command,??_lcd_send_4bits+1
  3063   002022  2A0D               	incf	??_lcd_send_4bits^0,f,c
  3064   002024  EF16  F010         	goto	u2374
  3065   002028                     u2375:
  3066   002028  90D8               	bcf	status,0,c
  3067   00202A  320E               	rrcf	(??_lcd_send_4bits+1)^0,f,c
  3068   00202C                     u2374:
  3069   00202C  2E0D               	decfsz	??_lcd_send_4bits^0,f,c
  3070   00202E  EF14  F010         	goto	u2375
  3071   002032  500E               	movf	(??_lcd_send_4bits+1)^0,w,c
  3072   002034  0B01               	andlw	1
  3073   002036  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  3074   002038  ECFC  F00A         	call	_gpio_pin_write_logic	;wreg free
  3075   00203C  6E0F               	movwf	lcd_send_4bits@ret^0,c
  3076   00203E                     
  3077                           ;ECU_Layer/LCD/ecu_lcd.c: 588:         }
  3078   00203E  2A10               	incf	lcd_send_4bits@l_pins_counter^0,f,c
  3079   002040  0E03               	movlw	3
  3080   002042  6410               	cpfsgt	lcd_send_4bits@l_pins_counter^0,c
  3081   002044  EF26  F010         	goto	u2381
  3082   002048  EF28  F010         	goto	u2380
  3083   00204C                     u2381:
  3084   00204C  EF09  F010         	goto	l3564
  3085   002050                     u2380:
  3086   002050  EF2C  F010         	goto	l225
  3087   002054                     l3570:
  3088   002054  0E00               	movlw	0
  3089   002056  6E0F               	movwf	lcd_send_4bits@ret^0,c
  3090   002058                     l225:
  3091                           
  3092                           ;ECU_Layer/LCD/ecu_lcd.c: 592:     return ret;
  3093   002058  500F               	movf	lcd_send_4bits@ret^0,w,c
  3094   00205A  0012               	return		;funcret
  3095   00205C                     __end_of_lcd_send_4bits:
  3096                           	callstack 0
  3097                           
  3098 ;; *************** function _lcd_4bit_send_enable_signal *****************
  3099 ;; Defined at:
  3100 ;;		line 595 in file "ECU_Layer/LCD/ecu_lcd.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;  lcd             1   10[COMRAM] PTR const struct .
  3103 ;;		 -> lcd1(6), 
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;  ret             1   11[COMRAM] unsigned char 
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  1    wreg      unsigned char 
  3108 ;; Registers used:
  3109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3115 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3116 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3118 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3119 ;;Total ram usage:        2 bytes
  3120 ;; Hardware stack levels used: 1
  3121 ;; Hardware stack levels required when called: 5
  3122 ;; This function calls:
  3123 ;;		_gpio_pin_write_logic
  3124 ;; This function is called by:
  3125 ;;		_lcd_4bit_send_command
  3126 ;;		_lcd_4bit_send_char_data
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           	psect	text20
  3131   0022AE                     __ptext20:
  3132                           	callstack 0
  3133   0022AE                     _lcd_4bit_send_enable_signal:
  3134                           	callstack 22
  3135   0022AE                     
  3136                           ;ECU_Layer/LCD/ecu_lcd.c: 598:     if(lcd != ((void*)0))
  3137   0022AE  500B               	movf	lcd_4bit_send_enable_signal@lcd^0,w,c
  3138   0022B0  B4D8               	btfsc	status,2,c
  3139   0022B2  EF5D  F011         	goto	u2391
  3140   0022B6  EF5F  F011         	goto	u2390
  3141   0022BA                     u2391:
  3142   0022BA  EF72  F011         	goto	l3582
  3143   0022BE                     u2390:
  3144   0022BE  280B               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  3145   0022C0  6E03               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3146   0022C2  0E01               	movlw	1
  3147   0022C4  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  3148   0022C6  ECFC  F00A         	call	_gpio_pin_write_logic	;wreg free
  3149   0022CA                     
  3150                           ;ECU_Layer/LCD/ecu_lcd.c: 601:         _delay((unsigned long)((5)*(8000000UL/4000000.0))
      +                          );
  3151   0022CA  0E03               	movlw	3
  3152   0022CC                     u3817:
  3153   0022CC  2EE8               	decfsz	wreg,f,c
  3154   0022CE  D7FE               	bra	u3817
  3155   0022D0  0000               	nop	
  3156   0022D2                     
  3157                           ;ECU_Layer/LCD/ecu_lcd.c: 602:         ret = gpio_pin_write_logic(&(lcd->lcd_en),GPIO_LO
      +                          GIC_LOW);
  3158   0022D2  280B               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  3159   0022D4  6E03               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3160   0022D6  0E00               	movlw	0
  3161   0022D8  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  3162   0022DA  ECFC  F00A         	call	_gpio_pin_write_logic	;wreg free
  3163   0022DE  6E0C               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  3164                           
  3165                           ;ECU_Layer/LCD/ecu_lcd.c: 603:     }
  3166   0022E0  EF74  F011         	goto	l230
  3167   0022E4                     l3582:
  3168   0022E4  0E00               	movlw	0
  3169   0022E6  6E0C               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  3170   0022E8                     l230:
  3171                           
  3172                           ;ECU_Layer/LCD/ecu_lcd.c: 606:     return ret;
  3173   0022E8  500C               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  3174   0022EA  0012               	return		;funcret
  3175   0022EC                     __end_of_lcd_4bit_send_enable_signal:
  3176                           	callstack 0
  3177                           
  3178 ;; *************** function _gpio_pin_initialize *****************
  3179 ;; Defined at:
  3180 ;;		line 151 in file "MCAL_Layer/GPIO/mcal_gpio.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;  _pin_config     1   10[COMRAM] PTR const struct .
  3183 ;;		 -> lcd1$lcd_data(4), lcd1(6), relay_initialize@pin(1), led_initialize@pin(1), 
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;  ret             1   12[COMRAM] unsigned char 
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  1    wreg      unsigned char 
  3188 ;; Registers used:
  3189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3195 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3196 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3197 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3198 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;Total ram usage:        3 bytes
  3200 ;; Hardware stack levels used: 1
  3201 ;; Hardware stack levels required when called: 5
  3202 ;; This function calls:
  3203 ;;		_gpio_pin_direction_initialize
  3204 ;;		_gpio_pin_write_logic
  3205 ;; This function is called by:
  3206 ;;		_lcd_4bit_initialize
  3207 ;;		_dc_motor_initialize
  3208 ;;		_keypad_initialize
  3209 ;;		_lcd_8bit_initialize
  3210 ;;		_led_initialize
  3211 ;;		_relay_initialize
  3212 ;;		_seven_segment_initialize
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216                           	psect	text21
  3217   001EBA                     __ptext21:
  3218                           	callstack 0
  3219   001EBA                     _gpio_pin_initialize:
  3220                           	callstack 22
  3221   001EBA                     
  3222                           ;MCAL_Layer/GPIO/mcal_gpio.c: 154:     if((_pin_config != ((void*)0)) && (_pin_config->p
      +                          ort <= 5 -1) && (_pin_config->pin <= 8 -1))
  3223   001EBA  500B               	movf	gpio_pin_initialize@_pin_config^0,w,c
  3224   001EBC  B4D8               	btfsc	status,2,c
  3225   001EBE  EF63  F00F         	goto	u2571
  3226   001EC2  EF65  F00F         	goto	u2570
  3227   001EC6                     u2571:
  3228   001EC6  EF96  F00F         	goto	l3692
  3229   001ECA                     u2570:
  3230   001ECA  500B               	movf	gpio_pin_initialize@_pin_config^0,w,c
  3231   001ECC  6ED9               	movwf	fsr2l,c
  3232   001ECE  6ADA               	clrf	fsr2h,c
  3233   001ED0  50DF               	movf	223,w,c
  3234   001ED2  0B07               	andlw	7
  3235   001ED4  6E0C               	movwf	??_gpio_pin_initialize^0,c
  3236   001ED6  0E05               	movlw	5
  3237   001ED8  600C               	cpfslt	??_gpio_pin_initialize^0,c
  3238   001EDA  EF71  F00F         	goto	u2581
  3239   001EDE  EF73  F00F         	goto	u2580
  3240   001EE2                     u2581:
  3241   001EE2  EF96  F00F         	goto	l3692
  3242   001EE6                     u2580:
  3243   001EE6  500B               	movf	gpio_pin_initialize@_pin_config^0,w,c
  3244   001EE8  6ED9               	movwf	fsr2l,c
  3245   001EEA  6ADA               	clrf	fsr2h,c
  3246   001EEC  30DF               	rrcf	223,w,c
  3247   001EEE  32E8               	rrcf	wreg,f,c
  3248   001EF0  32E8               	rrcf	wreg,f,c
  3249   001EF2  0B07               	andlw	7
  3250   001EF4  6E0C               	movwf	??_gpio_pin_initialize^0,c
  3251   001EF6  0E08               	movlw	8
  3252   001EF8  600C               	cpfslt	??_gpio_pin_initialize^0,c
  3253   001EFA  EF81  F00F         	goto	u2591
  3254   001EFE  EF83  F00F         	goto	u2590
  3255   001F02                     u2591:
  3256   001F02  EF96  F00F         	goto	l3692
  3257   001F06                     u2590:
  3258   001F06                     
  3259                           ;MCAL_Layer/GPIO/mcal_gpio.c: 155:     {;MCAL_Layer/GPIO/mcal_gpio.c: 156:         ret =
      +                           gpio_pin_direction_initialize(_pin_config);
  3260   001F06  C00B  F003         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_initialize@_pin_config
  3261   001F0A  EC9E  F00B         	call	_gpio_pin_direction_initialize	;wreg free
  3262   001F0E  6E0D               	movwf	gpio_pin_initialize@ret^0,c
  3263                           
  3264                           ;MCAL_Layer/GPIO/mcal_gpio.c: 157:         ret = gpio_pin_write_logic(_pin_config,_pin_c
      +                          onfig->logic);
  3265   001F10  C00B  F003         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
  3266   001F14  500B               	movf	gpio_pin_initialize@_pin_config^0,w,c
  3267   001F16  6ED9               	movwf	fsr2l,c
  3268   001F18  6ADA               	clrf	fsr2h,c
  3269   001F1A  0E00               	movlw	0
  3270   001F1C  BEDF               	btfsc	indf2,7,c
  3271   001F1E  0E01               	movlw	1
  3272   001F20  6E04               	movwf	gpio_pin_write_logic@logic^0,c
  3273   001F22  ECFC  F00A         	call	_gpio_pin_write_logic	;wreg free
  3274   001F26  6E0D               	movwf	gpio_pin_initialize@ret^0,c
  3275                           
  3276                           ;MCAL_Layer/GPIO/mcal_gpio.c: 158:     }
  3277   001F28  EF98  F00F         	goto	l559
  3278   001F2C                     l3692:
  3279   001F2C  0E00               	movlw	0
  3280   001F2E  6E0D               	movwf	gpio_pin_initialize@ret^0,c
  3281   001F30                     l559:
  3282                           
  3283                           ;MCAL_Layer/GPIO/mcal_gpio.c: 160:     return ret;
  3284   001F30  500D               	movf	gpio_pin_initialize@ret^0,w,c
  3285   001F32  0012               	return		;funcret
  3286   001F34                     __end_of_gpio_pin_initialize:
  3287                           	callstack 0
  3288                           
  3289 ;; *************** function _gpio_pin_write_logic *****************
  3290 ;; Defined at:
  3291 ;;		line 83 in file "MCAL_Layer/GPIO/mcal_gpio.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  _pin_config     1    2[COMRAM] PTR const struct .
  3294 ;;		 -> lcd1$lcd_data(4), lcd1(6), relay_turn_off@pin(1), relay_turn_on@pin(1), 
  3295 ;;		 -> relay_initialize@pin(1), led_turn_off@pin(1), led_turn_on@pin(1), led_initialize@pin(1), 
  3296 ;;  logic           1    3[COMRAM] enum E3002
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;  ret             1    9[COMRAM] unsigned char 
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  1    wreg      unsigned char 
  3301 ;; Registers used:
  3302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3308 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3309 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3310 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3311 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3312 ;;Total ram usage:        8 bytes
  3313 ;; Hardware stack levels used: 1
  3314 ;; Hardware stack levels required when called: 4
  3315 ;; This function calls:
  3316 ;;		Nothing
  3317 ;; This function is called by:
  3318 ;;		_lcd_4bit_send_command
  3319 ;;		_lcd_4bit_send_char_data
  3320 ;;		_lcd_send_4bits
  3321 ;;		_lcd_4bit_send_enable_signal
  3322 ;;		_gpio_pin_initialize
  3323 ;;		_dc_motor_move_right
  3324 ;;		_dc_motor_move_left
  3325 ;;		_dc_motor_stop
  3326 ;;		_keypad_get_value
  3327 ;;		_lcd_8bit_send_command
  3328 ;;		_lcd_8bit_send_char_data
  3329 ;;		_lcd_8bit_send_enable_signal
  3330 ;;		_led_turn_on
  3331 ;;		_led_turn_off
  3332 ;;		_relay_turn_on
  3333 ;;		_relay_turn_off
  3334 ;;		_seven_segment_write_number
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text22
  3339   0015F8                     __ptext22:
  3340                           	callstack 0
  3341   0015F8                     _gpio_pin_write_logic:
  3342                           	callstack 22
  3343   0015F8                     
  3344                           ;MCAL_Layer/GPIO/mcal_gpio.c: 83: Std_ReturnType gpio_pin_write_logic(const pin_config_t
      +                           *_pin_config , logic_t logic);MCAL_Layer/GPIO/mcal_gpio.c: 84: {;MCAL_Layer/GPIO/mcal_g
      +                          pio.c: 85:     Std_ReturnType ret = (Std_ReturnType)0x01;
  3345   0015F8  0E01               	movlw	1
  3346   0015FA  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
  3347                           
  3348                           ;MCAL_Layer/GPIO/mcal_gpio.c: 86:     if((_pin_config != ((void*)0)) && (_pin_config->po
      +                          rt <= 5 -1) && (_pin_config->pin <= 8 -1))
  3349   0015FC  5003               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3350   0015FE  B4D8               	btfsc	status,2,c
  3351   001600  EF04  F00B         	goto	u2241
  3352   001604  EF06  F00B         	goto	u2240
  3353   001608                     u2241:
  3354   001608  EF83  F00B         	goto	l3522
  3355   00160C                     u2240:
  3356   00160C  5003               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3357   00160E  6ED9               	movwf	fsr2l,c
  3358   001610  6ADA               	clrf	fsr2h,c
  3359   001612  50DF               	movf	223,w,c
  3360   001614  0B07               	andlw	7
  3361   001616  6E05               	movwf	??_gpio_pin_write_logic^0,c
  3362   001618  0E05               	movlw	5
  3363   00161A  6005               	cpfslt	??_gpio_pin_write_logic^0,c
  3364   00161C  EF12  F00B         	goto	u2251
  3365   001620  EF14  F00B         	goto	u2250
  3366   001624                     u2251:
  3367   001624  EF83  F00B         	goto	l3522
  3368   001628                     u2250:
  3369   001628  5003               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3370   00162A  6ED9               	movwf	fsr2l,c
  3371   00162C  6ADA               	clrf	fsr2h,c
  3372   00162E  30DF               	rrcf	223,w,c
  3373   001630  32E8               	rrcf	wreg,f,c
  3374   001632  32E8               	rrcf	wreg,f,c
  3375   001634  0B07               	andlw	7
  3376   001636  6E05               	movwf	??_gpio_pin_write_logic^0,c
  3377   001638  0E08               	movlw	8
  3378   00163A  6005               	cpfslt	??_gpio_pin_write_logic^0,c
  3379   00163C  EF22  F00B         	goto	u2261
  3380   001640  EF24  F00B         	goto	u2260
  3381   001644                     u2261:
  3382   001644  EF83  F00B         	goto	l3522
  3383   001648                     u2260:
  3384   001648                     
  3385                           ;MCAL_Layer/GPIO/mcal_gpio.c: 87:     {;MCAL_Layer/GPIO/mcal_gpio.c: 88:         if(_pin
      +                          _config->direction == GPIO_DIRECTION_OUTPUT)
  3386   001648  5003               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3387   00164A  6ED9               	movwf	fsr2l,c
  3388   00164C  6ADA               	clrf	fsr2h,c
  3389   00164E  BCDF               	btfsc	indf2,6,c
  3390   001650  EF2C  F00B         	goto	u2271
  3391   001654  EF2E  F00B         	goto	u2270
  3392   001658                     u2271:
  3393   001658  EF83  F00B         	goto	l3522
  3394   00165C                     u2270:
  3395   00165C  EF87  F00B         	goto	l3524
  3396   001660                     l3518:
  3397                           
  3398                           ;MCAL_Layer/GPIO/mcal_gpio.c: 93:                     (*lat_registers[_pin_config->port]
      +                           &=~ ((uint8)0x01 << _pin_config->pin));
  3399   001660  5003               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3400   001662  6ED9               	movwf	fsr2l,c
  3401   001664  6ADA               	clrf	fsr2h,c
  3402   001666  30DF               	rrcf	223,w,c
  3403   001668  32E8               	rrcf	wreg,f,c
  3404   00166A  32E8               	rrcf	wreg,f,c
  3405   00166C  0B07               	andlw	7
  3406   00166E  6E05               	movwf	??_gpio_pin_write_logic^0,c
  3407   001670  0E01               	movlw	1
  3408   001672  6E06               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3409   001674  2A05               	incf	??_gpio_pin_write_logic^0,f,c
  3410   001676  EF3F  F00B         	goto	u2284
  3411   00167A                     u2285:
  3412   00167A  90D8               	bcf	status,0,c
  3413   00167C  3606               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3414   00167E                     u2284:
  3415   00167E  2E05               	decfsz	??_gpio_pin_write_logic^0,f,c
  3416   001680  EF3D  F00B         	goto	u2285
  3417   001684  5006               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3418   001686  0AFF               	xorlw	255
  3419   001688  6E07               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3420   00168A  5003               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3421   00168C  6ED9               	movwf	fsr2l,c
  3422   00168E  6ADA               	clrf	fsr2h,c
  3423   001690  50DF               	movf	223,w,c
  3424   001692  0B07               	andlw	7
  3425   001694  0D02               	mullw	2
  3426   001696  50F3               	movf	243,w,c
  3427   001698  0F65               	addlw	low _lat_registers
  3428   00169A  6ED9               	movwf	fsr2l,c
  3429   00169C  6ADA               	clrf	fsr2h,c
  3430   00169E  CFDE F008          	movff	postinc2,??_gpio_pin_write_logic+3
  3431   0016A2  CFDD F009          	movff	postdec2,??_gpio_pin_write_logic+4
  3432   0016A6  C008  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  3433   0016AA  C009  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  3434   0016AE  5007               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3435   0016B0  16DF               	andwf	indf2,f,c
  3436                           
  3437                           ;MCAL_Layer/GPIO/mcal_gpio.c: 94:                     break;
  3438   0016B2  EF9C  F00B         	goto	l544
  3439   0016B6                     l3520:
  3440                           
  3441                           ;MCAL_Layer/GPIO/mcal_gpio.c: 96:                     (*lat_registers[_pin_config->port]
      +                           |= ((uint8)0x01 << _pin_config->pin));
  3442   0016B6  5003               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3443   0016B8  6ED9               	movwf	fsr2l,c
  3444   0016BA  6ADA               	clrf	fsr2h,c
  3445   0016BC  30DF               	rrcf	223,w,c
  3446   0016BE  32E8               	rrcf	wreg,f,c
  3447   0016C0  32E8               	rrcf	wreg,f,c
  3448   0016C2  0B07               	andlw	7
  3449   0016C4  6E05               	movwf	??_gpio_pin_write_logic^0,c
  3450   0016C6  0E01               	movlw	1
  3451   0016C8  6E06               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3452   0016CA  2A05               	incf	??_gpio_pin_write_logic^0,f,c
  3453   0016CC  EF6A  F00B         	goto	u2294
  3454   0016D0                     u2295:
  3455   0016D0  90D8               	bcf	status,0,c
  3456   0016D2  3606               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3457   0016D4                     u2294:
  3458   0016D4  2E05               	decfsz	??_gpio_pin_write_logic^0,f,c
  3459   0016D6  EF68  F00B         	goto	u2295
  3460   0016DA  5003               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  3461   0016DC  6ED9               	movwf	fsr2l,c
  3462   0016DE  6ADA               	clrf	fsr2h,c
  3463   0016E0  50DF               	movf	223,w,c
  3464   0016E2  0B07               	andlw	7
  3465   0016E4  0D02               	mullw	2
  3466   0016E6  50F3               	movf	243,w,c
  3467   0016E8  0F65               	addlw	low _lat_registers
  3468   0016EA  6ED9               	movwf	fsr2l,c
  3469   0016EC  6ADA               	clrf	fsr2h,c
  3470   0016EE  CFDE F007          	movff	postinc2,??_gpio_pin_write_logic+2
  3471   0016F2  CFDD F008          	movff	postdec2,??_gpio_pin_write_logic+3
  3472   0016F6  C007  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  3473   0016FA  C008  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  3474   0016FE  5006               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3475   001700  12DF               	iorwf	indf2,f,c
  3476                           
  3477                           ;MCAL_Layer/GPIO/mcal_gpio.c: 97:                     break;
  3478   001702  EF9C  F00B         	goto	l544
  3479   001706                     l3522:
  3480   001706  0E00               	movlw	0
  3481   001708  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
  3482                           
  3483                           ;MCAL_Layer/GPIO/mcal_gpio.c: 99:             }
  3484   00170A  EF9C  F00B         	goto	l544
  3485   00170E                     l3524:
  3486   00170E  5004               	movf	gpio_pin_write_logic@logic^0,w,c
  3487   001710  6E05               	movwf	??_gpio_pin_write_logic^0,c
  3488   001712  6A06               	clrf	(??_gpio_pin_write_logic+1)^0,c
  3489                           
  3490                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3491                           ; Switch size 1, requested type "simple"
  3492                           ; Number of cases is 1, Range of values is 0 to 0
  3493                           ; switch strategies available:
  3494                           ; Name         Instructions Cycles
  3495                           ; simple_byte            4     3 (average)
  3496                           ;	Chosen strategy is simple_byte
  3497   001714  5006               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3498   001716  0A00               	xorlw	0	; case 0
  3499   001718  B4D8               	btfsc	status,2,c
  3500   00171A  EF91  F00B         	goto	l4778
  3501   00171E  EF83  F00B         	goto	l3522
  3502   001722                     l4778:
  3503                           
  3504                           ; Switch size 1, requested type "simple"
  3505                           ; Number of cases is 2, Range of values is 0 to 1
  3506                           ; switch strategies available:
  3507                           ; Name         Instructions Cycles
  3508                           ; simple_byte            7     4 (average)
  3509                           ;	Chosen strategy is simple_byte
  3510   001722  5005               	movf	??_gpio_pin_write_logic^0,w,c
  3511   001724  0A00               	xorlw	0	; case 0
  3512   001726  B4D8               	btfsc	status,2,c
  3513   001728  EF30  F00B         	goto	l3518
  3514   00172C  0A01               	xorlw	1	; case 1
  3515   00172E  B4D8               	btfsc	status,2,c
  3516   001730  EF5B  F00B         	goto	l3520
  3517   001734  EF83  F00B         	goto	l3522
  3518   001738                     l544:
  3519                           
  3520                           ;MCAL_Layer/GPIO/mcal_gpio.c: 104:     return ret;
  3521   001738  500A               	movf	gpio_pin_write_logic@ret^0,w,c
  3522   00173A  0012               	return		;funcret
  3523   00173C                     __end_of_gpio_pin_write_logic:
  3524                           	callstack 0
  3525                           
  3526 ;; *************** function _gpio_pin_direction_initialize *****************
  3527 ;; Defined at:
  3528 ;;		line 34 in file "MCAL_Layer/GPIO/mcal_gpio.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;  _pin_config     1    2[COMRAM] PTR const struct .
  3531 ;;		 -> lcd1$lcd_data(4), lcd1(6), relay_initialize@pin(1), led_initialize@pin(1), 
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;  ret             1    8[COMRAM] unsigned char 
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  1    wreg      unsigned char 
  3536 ;; Registers used:
  3537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3543 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3545 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3546 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3547 ;;Total ram usage:        7 bytes
  3548 ;; Hardware stack levels used: 1
  3549 ;; Hardware stack levels required when called: 4
  3550 ;; This function calls:
  3551 ;;		Nothing
  3552 ;; This function is called by:
  3553 ;;		_gpio_pin_initialize
  3554 ;;		_button_initialize
  3555 ;;		_keypad_initialize
  3556 ;;		_ext_interrupt_INTx_Init
  3557 ;;		_ext_interrupt_RBx_Init
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561                           	psect	text23
  3562   00173C                     __ptext23:
  3563                           	callstack 0
  3564   00173C                     _gpio_pin_direction_initialize:
  3565                           	callstack 22
  3566   00173C                     
  3567                           ;MCAL_Layer/GPIO/mcal_gpio.c: 34: Std_ReturnType gpio_pin_direction_initialize(const pin
      +                          _config_t *_pin_config);MCAL_Layer/GPIO/mcal_gpio.c: 35: {;MCAL_Layer/GPIO/mcal_gpio.c: 
      +                          36:     Std_ReturnType ret = (Std_ReturnType)0x01;
  3568   00173C  0E01               	movlw	1
  3569   00173E  6E09               	movwf	gpio_pin_direction_initialize@ret^0,c
  3570                           
  3571                           ;MCAL_Layer/GPIO/mcal_gpio.c: 38:     if((_pin_config != ((void*)0)) && (_pin_config->po
      +                          rt <= 5 -1) && (_pin_config->pin <= 8 -1))
  3572   001740  5003               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  3573   001742  B4D8               	btfsc	status,2,c
  3574   001744  EFA6  F00B         	goto	u2301
  3575   001748  EFA8  F00B         	goto	u2300
  3576   00174C                     u2301:
  3577   00174C  EF1B  F00C         	goto	l3548
  3578   001750                     u2300:
  3579   001750  5003               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  3580   001752  6ED9               	movwf	fsr2l,c
  3581   001754  6ADA               	clrf	fsr2h,c
  3582   001756  50DF               	movf	223,w,c
  3583   001758  0B07               	andlw	7
  3584   00175A  6E04               	movwf	??_gpio_pin_direction_initialize^0,c
  3585   00175C  0E05               	movlw	5
  3586   00175E  6004               	cpfslt	??_gpio_pin_direction_initialize^0,c
  3587   001760  EFB4  F00B         	goto	u2311
  3588   001764  EFB6  F00B         	goto	u2310
  3589   001768                     u2311:
  3590   001768  EF1B  F00C         	goto	l3548
  3591   00176C                     u2310:
  3592   00176C  5003               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  3593   00176E  6ED9               	movwf	fsr2l,c
  3594   001770  6ADA               	clrf	fsr2h,c
  3595   001772  30DF               	rrcf	223,w,c
  3596   001774  32E8               	rrcf	wreg,f,c
  3597   001776  32E8               	rrcf	wreg,f,c
  3598   001778  0B07               	andlw	7
  3599   00177A  6E04               	movwf	??_gpio_pin_direction_initialize^0,c
  3600   00177C  0E08               	movlw	8
  3601   00177E  6004               	cpfslt	??_gpio_pin_direction_initialize^0,c
  3602   001780  EFC4  F00B         	goto	u2321
  3603   001784  EFC6  F00B         	goto	u2320
  3604   001788                     u2321:
  3605   001788  EF1B  F00C         	goto	l3548
  3606   00178C                     u2320:
  3607   00178C  EF1F  F00C         	goto	l3550
  3608   001790                     l3544:
  3609                           
  3610                           ;MCAL_Layer/GPIO/mcal_gpio.c: 43:                 (*tris_registers[_pin_config->port] &=
      +                          ~ ((uint8)0x01 << _pin_config->pin));
  3611   001790  5003               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  3612   001792  6ED9               	movwf	fsr2l,c
  3613   001794  6ADA               	clrf	fsr2h,c
  3614   001796  30DF               	rrcf	223,w,c
  3615   001798  32E8               	rrcf	wreg,f,c
  3616   00179A  32E8               	rrcf	wreg,f,c
  3617   00179C  0B07               	andlw	7
  3618   00179E  6E04               	movwf	??_gpio_pin_direction_initialize^0,c
  3619   0017A0  0E01               	movlw	1
  3620   0017A2  6E05               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  3621   0017A4  2A04               	incf	??_gpio_pin_direction_initialize^0,f,c
  3622   0017A6  EFD7  F00B         	goto	u2334
  3623   0017AA                     u2335:
  3624   0017AA  90D8               	bcf	status,0,c
  3625   0017AC  3605               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  3626   0017AE                     u2334:
  3627   0017AE  2E04               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  3628   0017B0  EFD5  F00B         	goto	u2335
  3629   0017B4  5005               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  3630   0017B6  0AFF               	xorlw	255
  3631   0017B8  6E06               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  3632   0017BA  5003               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  3633   0017BC  6ED9               	movwf	fsr2l,c
  3634   0017BE  6ADA               	clrf	fsr2h,c
  3635   0017C0  50DF               	movf	223,w,c
  3636   0017C2  0B07               	andlw	7
  3637   0017C4  0D02               	mullw	2
  3638   0017C6  50F3               	movf	243,w,c
  3639   0017C8  0FC2               	addlw	low _tris_registers
  3640   0017CA  6ED9               	movwf	fsr2l,c
  3641   0017CC  6ADA               	clrf	fsr2h,c
  3642   0017CE  CFDE F007          	movff	postinc2,??_gpio_pin_direction_initialize+3
  3643   0017D2  CFDD F008          	movff	postdec2,??_gpio_pin_direction_initialize+4
  3644   0017D6  C007  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  3645   0017DA  C008  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  3646   0017DE  5006               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  3647   0017E0  16DF               	andwf	indf2,f,c
  3648                           
  3649                           ;MCAL_Layer/GPIO/mcal_gpio.c: 44:                 break;
  3650   0017E2  EF35  F00C         	goto	l527
  3651   0017E6                     l3546:
  3652                           
  3653                           ;MCAL_Layer/GPIO/mcal_gpio.c: 46:                 (*tris_registers[_pin_config->port] |=
      +                           ((uint8)0x01 << _pin_config->pin));
  3654   0017E6  5003               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  3655   0017E8  6ED9               	movwf	fsr2l,c
  3656   0017EA  6ADA               	clrf	fsr2h,c
  3657   0017EC  30DF               	rrcf	223,w,c
  3658   0017EE  32E8               	rrcf	wreg,f,c
  3659   0017F0  32E8               	rrcf	wreg,f,c
  3660   0017F2  0B07               	andlw	7
  3661   0017F4  6E04               	movwf	??_gpio_pin_direction_initialize^0,c
  3662   0017F6  0E01               	movlw	1
  3663   0017F8  6E05               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  3664   0017FA  2A04               	incf	??_gpio_pin_direction_initialize^0,f,c
  3665   0017FC  EF02  F00C         	goto	u2344
  3666   001800                     u2345:
  3667   001800  90D8               	bcf	status,0,c
  3668   001802  3605               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  3669   001804                     u2344:
  3670   001804  2E04               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  3671   001806  EF00  F00C         	goto	u2345
  3672   00180A  5003               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  3673   00180C  6ED9               	movwf	fsr2l,c
  3674   00180E  6ADA               	clrf	fsr2h,c
  3675   001810  50DF               	movf	223,w,c
  3676   001812  0B07               	andlw	7
  3677   001814  0D02               	mullw	2
  3678   001816  50F3               	movf	243,w,c
  3679   001818  0FC2               	addlw	low _tris_registers
  3680   00181A  6ED9               	movwf	fsr2l,c
  3681   00181C  6ADA               	clrf	fsr2h,c
  3682   00181E  CFDE F006          	movff	postinc2,??_gpio_pin_direction_initialize+2
  3683   001822  CFDD F007          	movff	postdec2,??_gpio_pin_direction_initialize+3
  3684   001826  C006  FFD9         	movff	??_gpio_pin_direction_initialize+2,fsr2l
  3685   00182A  C007  FFDA         	movff	??_gpio_pin_direction_initialize+3,fsr2h
  3686   00182E  5005               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  3687   001830  12DF               	iorwf	indf2,f,c
  3688                           
  3689                           ;MCAL_Layer/GPIO/mcal_gpio.c: 47:                 break;
  3690   001832  EF35  F00C         	goto	l527
  3691   001836                     l3548:
  3692   001836  0E00               	movlw	0
  3693   001838  6E09               	movwf	gpio_pin_direction_initialize@ret^0,c
  3694                           
  3695                           ;MCAL_Layer/GPIO/mcal_gpio.c: 49:         }
  3696   00183A  EF35  F00C         	goto	l527
  3697   00183E                     l3550:
  3698   00183E  5003               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  3699   001840  6ED9               	movwf	fsr2l,c
  3700   001842  6ADA               	clrf	fsr2h,c
  3701   001844  BCDF               	btfsc	indf2,6,c
  3702   001846  EF27  F00C         	goto	u2351
  3703   00184A  EF2A  F00C         	goto	u2350
  3704   00184E                     u2351:
  3705   00184E  0E01               	movlw	1
  3706   001850  EF2B  F00C         	goto	u2356
  3707   001854                     u2350:
  3708   001854  0E00               	movlw	0
  3709   001856                     u2356:
  3710                           
  3711                           ; Switch size 1, requested type "simple"
  3712                           ; Number of cases is 2, Range of values is 0 to 1
  3713                           ; switch strategies available:
  3714                           ; Name         Instructions Cycles
  3715                           ; simple_byte            7     4 (average)
  3716                           ;	Chosen strategy is simple_byte
  3717   001856  0A00               	xorlw	0	; case 0
  3718   001858  B4D8               	btfsc	status,2,c
  3719   00185A  EFC8  F00B         	goto	l3544
  3720   00185E  0A01               	xorlw	1	; case 1
  3721   001860  B4D8               	btfsc	status,2,c
  3722   001862  EFF3  F00B         	goto	l3546
  3723   001866  EF1B  F00C         	goto	l3548
  3724   00186A                     l527:
  3725                           
  3726                           ;MCAL_Layer/GPIO/mcal_gpio.c: 53:     return ret;
  3727   00186A  5009               	movf	gpio_pin_direction_initialize@ret^0,w,c
  3728   00186C  0012               	return		;funcret
  3729   00186E                     __end_of_gpio_pin_direction_initialize:
  3730                           	callstack 0
  3731                           
  3732 ;; *************** function _adc_Init *****************
  3733 ;; Defined at:
  3734 ;;		line 38 in file "MCAL_Layer/ADC/mcal_adc.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;  _adc            1    9[COMRAM] PTR const struct .
  3737 ;;		 -> adc1(4), 
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;  ret             1   11[COMRAM] unsigned char 
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  1    wreg      unsigned char 
  3742 ;; Registers used:
  3743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3749 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3750 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3751 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3752 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3753 ;;Total ram usage:        3 bytes
  3754 ;; Hardware stack levels used: 1
  3755 ;; Hardware stack levels required when called: 6
  3756 ;; This function calls:
  3757 ;;		_adc_SelectChannel
  3758 ;;		_configure_voltage_reference
  3759 ;;		_select_result_format
  3760 ;; This function is called by:
  3761 ;;		_application_initialize
  3762 ;; This function uses a non-reentrant model
  3763 ;;
  3764                           
  3765                           	psect	text24
  3766   001E38                     __ptext24:
  3767                           	callstack 0
  3768   001E38                     _adc_Init:
  3769                           	callstack 23
  3770   001E38                     
  3771                           ;MCAL_Layer/ADC/mcal_adc.c: 42:     if(((void*)0) != _adc)
  3772   001E38  500A               	movf	adc_Init@_adc^0,w,c
  3773   001E3A  B4D8               	btfsc	status,2,c
  3774   001E3C  EF22  F00F         	goto	u2931
  3775   001E40  EF24  F00F         	goto	u2930
  3776   001E44                     u2931:
  3777   001E44  EF59  F00F         	goto	l4008
  3778   001E48                     u2930:
  3779   001E48                     
  3780                           ;MCAL_Layer/ADC/mcal_adc.c: 43:     {;MCAL_Layer/ADC/mcal_adc.c: 45:         (ADCON0bits
      +                          .ADON = 0);
  3781   001E48  90C2               	bcf	194,0,c	;volatile
  3782   001E4A                     
  3783                           ;MCAL_Layer/ADC/mcal_adc.c: 47:         (ADCON1bits.PCFG = 0x07);
  3784   001E4A  50C1               	movf	193,w,c	;volatile
  3785   001E4C  0BF0               	andlw	-16
  3786   001E4E  0907               	iorlw	7
  3787   001E50  6EC1               	movwf	193,c	;volatile
  3788   001E52                     
  3789                           ;MCAL_Layer/ADC/mcal_adc.c: 49:         ADCON2bits.ACQT = _adc->acquisition_time;
  3790   001E52  500A               	movf	adc_Init@_adc^0,w,c
  3791   001E54  6ED9               	movwf	fsr2l,c
  3792   001E56  6ADA               	clrf	fsr2h,c
  3793   001E58  50DF               	movf	indf2,w,c
  3794   001E5A  6E0B               	movwf	??_adc_Init^0,c
  3795   001E5C  460B               	rlncf	??_adc_Init^0,f,c
  3796   001E5E  460B               	rlncf	??_adc_Init^0,f,c
  3797   001E60  460B               	rlncf	??_adc_Init^0,f,c
  3798   001E62  50C0               	movf	192,w,c	;volatile
  3799   001E64  180B               	xorwf	??_adc_Init^0,w,c
  3800   001E66  0BC7               	andlw	-57
  3801   001E68  180B               	xorwf	??_adc_Init^0,w,c
  3802   001E6A  6EC0               	movwf	192,c	;volatile
  3803   001E6C                     
  3804                           ;MCAL_Layer/ADC/mcal_adc.c: 51:         ADCON2bits.ADCS = _adc->conversion_clock;
  3805   001E6C  500A               	movf	adc_Init@_adc^0,w,c
  3806   001E6E  6ED9               	movwf	fsr2l,c
  3807   001E70  6ADA               	clrf	fsr2h,c
  3808   001E72  0E01               	movlw	1
  3809   001E74  26D9               	addwf	fsr2l,f,c
  3810   001E76  50DF               	movf	indf2,w,c
  3811   001E78  6E0B               	movwf	??_adc_Init^0,c
  3812   001E7A  50C0               	movf	192,w,c	;volatile
  3813   001E7C  180B               	xorwf	??_adc_Init^0,w,c
  3814   001E7E  0BF8               	andlw	-8
  3815   001E80  180B               	xorwf	??_adc_Init^0,w,c
  3816   001E82  6EC0               	movwf	192,c	;volatile
  3817   001E84  C00A  F006         	movff	adc_Init@_adc,adc_SelectChannel@_adc
  3818   001E88  500A               	movf	adc_Init@_adc^0,w,c
  3819   001E8A  6ED9               	movwf	fsr2l,c
  3820   001E8C  6ADA               	clrf	fsr2h,c
  3821   001E8E  0E02               	movlw	2
  3822   001E90  26D9               	addwf	fsr2l,f,c
  3823   001E92  50DF               	movf	indf2,w,c
  3824   001E94  6E07               	movwf	adc_SelectChannel@channel^0,c
  3825   001E96  EC76  F011         	call	_adc_SelectChannel	;wreg free
  3826   001E9A  C00A  F003         	movff	adc_Init@_adc,select_result_format@_adc
  3827   001E9E  EC5E  F010         	call	_select_result_format	;wreg free
  3828   001EA2                     
  3829                           ;MCAL_Layer/ADC/mcal_adc.c: 75:         ret = configure_voltage_reference(_adc);
  3830   001EA2  C00A  F003         	movff	adc_Init@_adc,configure_voltage_reference@_adc
  3831   001EA6  EC9A  F00F         	call	_configure_voltage_reference	;wreg free
  3832   001EAA  6E0C               	movwf	adc_Init@ret^0,c
  3833   001EAC                     
  3834                           ;MCAL_Layer/ADC/mcal_adc.c: 77:         (ADCON0bits.ADON = 1);
  3835   001EAC  80C2               	bsf	194,0,c	;volatile
  3836                           
  3837                           ;MCAL_Layer/ADC/mcal_adc.c: 78:     }
  3838   001EAE  EF5B  F00F         	goto	l382
  3839   001EB2                     l4008:
  3840   001EB2  0E00               	movlw	0
  3841   001EB4  6E0C               	movwf	adc_Init@ret^0,c
  3842   001EB6                     l382:
  3843                           
  3844                           ;MCAL_Layer/ADC/mcal_adc.c: 81:     return ret;
  3845   001EB6  500C               	movf	adc_Init@ret^0,w,c
  3846   001EB8  0012               	return		;funcret
  3847   001EBA                     __end_of_adc_Init:
  3848                           	callstack 0
  3849                           
  3850 ;; *************** function _select_result_format *****************
  3851 ;; Defined at:
  3852 ;;		line 314 in file "MCAL_Layer/ADC/mcal_adc.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;  _adc            1    2[COMRAM] PTR const struct .
  3855 ;;		 -> adc1(4), 
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;  ret             1    3[COMRAM] unsigned char 
  3858 ;; Return value:  Size  Location     Type
  3859 ;;                  1    wreg      unsigned char 
  3860 ;; Registers used:
  3861 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3862 ;; Tracked objects:
  3863 ;;		On entry : 0/0
  3864 ;;		On exit  : 0/0
  3865 ;;		Unchanged: 0/0
  3866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3867 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3868 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3870 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3871 ;;Total ram usage:        2 bytes
  3872 ;; Hardware stack levels used: 1
  3873 ;; Hardware stack levels required when called: 4
  3874 ;; This function calls:
  3875 ;;		Nothing
  3876 ;; This function is called by:
  3877 ;;		_adc_Init
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           
  3881                           	psect	text25
  3882   0020BC                     __ptext25:
  3883                           	callstack 0
  3884   0020BC                     _select_result_format:
  3885                           	callstack 24
  3886   0020BC                     
  3887                           ;MCAL_Layer/ADC/mcal_adc.c: 314: static __attribute__((inline)) Std_ReturnType select_re
      +                          sult_format(const adc_config_t *_adc);MCAL_Layer/ADC/mcal_adc.c: 315: {;MCAL_Layer/ADC/m
      +                          cal_adc.c: 316:     Std_ReturnType ret = (Std_ReturnType)0x01;
  3888   0020BC  0E01               	movlw	1
  3889   0020BE  6E04               	movwf	select_result_format@ret^0,c
  3890                           
  3891                           ;MCAL_Layer/ADC/mcal_adc.c: 318:     if(((void*)0) != _adc)
  3892   0020C0  5003               	movf	select_result_format@_adc^0,w,c
  3893   0020C2  B4D8               	btfsc	status,2,c
  3894   0020C4  EF66  F010         	goto	u2751
  3895   0020C8  EF68  F010         	goto	u2750
  3896   0020CC                     u2751:
  3897   0020CC  EF89  F010         	goto	l3860
  3898   0020D0                     u2750:
  3899   0020D0                     
  3900                           ;MCAL_Layer/ADC/mcal_adc.c: 319:     {;MCAL_Layer/ADC/mcal_adc.c: 320:         if(0x01U 
      +                          == _adc->result_format)
  3901   0020D0  5003               	movf	select_result_format@_adc^0,w,c
  3902   0020D2  6ED9               	movwf	fsr2l,c
  3903   0020D4  6ADA               	clrf	fsr2h,c
  3904   0020D6  0E03               	movlw	3
  3905   0020D8  26D9               	addwf	fsr2l,f,c
  3906   0020DA  A2DF               	btfss	indf2,1,c
  3907   0020DC  EF72  F010         	goto	u2761
  3908   0020E0  EF74  F010         	goto	u2760
  3909   0020E4                     u2761:
  3910   0020E4  EF77  F010         	goto	l3856
  3911   0020E8                     u2760:
  3912   0020E8                     
  3913                           ;MCAL_Layer/ADC/mcal_adc.c: 321:         {;MCAL_Layer/ADC/mcal_adc.c: 322:             (
      +                          ADCON2bits.ADFM = 1);
  3914   0020E8  8EC0               	bsf	192,7,c	;volatile
  3915                           
  3916                           ;MCAL_Layer/ADC/mcal_adc.c: 323:         }
  3917   0020EA  EF8B  F010         	goto	l447
  3918   0020EE                     l3856:
  3919   0020EE  5003               	movf	select_result_format@_adc^0,w,c
  3920   0020F0  6ED9               	movwf	fsr2l,c
  3921   0020F2  6ADA               	clrf	fsr2h,c
  3922   0020F4  0E03               	movlw	3
  3923   0020F6  26D9               	addwf	fsr2l,f,c
  3924   0020F8  B2DF               	btfsc	indf2,1,c
  3925   0020FA  EF81  F010         	goto	u2771
  3926   0020FE  EF83  F010         	goto	u2770
  3927   002102                     u2771:
  3928   002102  EF86  F010         	goto	l445
  3929   002106                     u2770:
  3930   002106                     
  3931                           ;MCAL_Layer/ADC/mcal_adc.c: 325:         {;MCAL_Layer/ADC/mcal_adc.c: 326:             (
      +                          ADCON2bits.ADFM = 0);
  3932   002106  9EC0               	bcf	192,7,c	;volatile
  3933                           
  3934                           ;MCAL_Layer/ADC/mcal_adc.c: 327:         }
  3935   002108  EF8B  F010         	goto	l447
  3936   00210C                     l445:
  3937                           
  3938                           ;MCAL_Layer/ADC/mcal_adc.c: 329:         {;MCAL_Layer/ADC/mcal_adc.c: 330:             (
      +                          ADCON2bits.ADFM = 1);
  3939   00210C  8EC0               	bsf	192,7,c	;volatile
  3940   00210E  EF8B  F010         	goto	l447
  3941   002112                     l3860:
  3942   002112  0E00               	movlw	0
  3943   002114  6E04               	movwf	select_result_format@ret^0,c
  3944   002116                     l447:
  3945                           
  3946                           ;MCAL_Layer/ADC/mcal_adc.c: 335:     return ret;
  3947   002116  5004               	movf	select_result_format@ret^0,w,c
  3948   002118  0012               	return		;funcret
  3949   00211A                     __end_of_select_result_format:
  3950                           	callstack 0
  3951                           
  3952 ;; *************** function _configure_voltage_reference *****************
  3953 ;; Defined at:
  3954 ;;		line 338 in file "MCAL_Layer/ADC/mcal_adc.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  _adc            1    2[COMRAM] PTR const struct .
  3957 ;;		 -> adc1(4), 
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;  ret             1    3[COMRAM] unsigned char 
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  1    wreg      unsigned char 
  3962 ;; Registers used:
  3963 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3969 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3970 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3972 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3973 ;;Total ram usage:        2 bytes
  3974 ;; Hardware stack levels used: 1
  3975 ;; Hardware stack levels required when called: 4
  3976 ;; This function calls:
  3977 ;;		Nothing
  3978 ;; This function is called by:
  3979 ;;		_adc_Init
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           	psect	text26
  3984   001F34                     __ptext26:
  3985                           	callstack 0
  3986   001F34                     _configure_voltage_reference:
  3987                           	callstack 24
  3988   001F34                     
  3989                           ;MCAL_Layer/ADC/mcal_adc.c: 338: static __attribute__((inline)) Std_ReturnType configure
      +                          _voltage_reference(const adc_config_t *_adc);MCAL_Layer/ADC/mcal_adc.c: 339: {;MCAL_Laye
      +                          r/ADC/mcal_adc.c: 340:     Std_ReturnType ret = (Std_ReturnType)0x01;
  3990   001F34  0E01               	movlw	1
  3991   001F36  6E04               	movwf	configure_voltage_reference@ret^0,c
  3992                           
  3993                           ;MCAL_Layer/ADC/mcal_adc.c: 342:     if(((void*)0) != _adc)
  3994   001F38  5003               	movf	configure_voltage_reference@_adc^0,w,c
  3995   001F3A  B4D8               	btfsc	status,2,c
  3996   001F3C  EFA2  F00F         	goto	u2781
  3997   001F40  EFA4  F00F         	goto	u2780
  3998   001F44                     u2781:
  3999   001F44  EFC8  F00F         	goto	l3874
  4000   001F48                     u2780:
  4001   001F48                     
  4002                           ;MCAL_Layer/ADC/mcal_adc.c: 343:     {;MCAL_Layer/ADC/mcal_adc.c: 344:         if(0x01U 
      +                          == _adc->voltage_reference)
  4003   001F48  5003               	movf	configure_voltage_reference@_adc^0,w,c
  4004   001F4A  6ED9               	movwf	fsr2l,c
  4005   001F4C  6ADA               	clrf	fsr2h,c
  4006   001F4E  0E03               	movlw	3
  4007   001F50  26D9               	addwf	fsr2l,f,c
  4008   001F52  A0DF               	btfss	indf2,0,c
  4009   001F54  EFAE  F00F         	goto	u2791
  4010   001F58  EFB0  F00F         	goto	u2790
  4011   001F5C                     u2791:
  4012   001F5C  EFB4  F00F         	goto	l3870
  4013   001F60                     u2790:
  4014   001F60                     
  4015                           ;MCAL_Layer/ADC/mcal_adc.c: 345:         {;MCAL_Layer/ADC/mcal_adc.c: 346:             A
      +                          DCON1bits.VCFG1 = 1; ADCON1bits.VCFG0 = 1;;
  4016   001F60  8AC1               	bsf	193,5,c	;volatile
  4017   001F62  88C1               	bsf	193,4,c	;volatile
  4018                           
  4019                           ;MCAL_Layer/ADC/mcal_adc.c: 347:         }
  4020   001F64  EFCA  F00F         	goto	l456
  4021   001F68                     l3870:
  4022   001F68  5003               	movf	configure_voltage_reference@_adc^0,w,c
  4023   001F6A  6ED9               	movwf	fsr2l,c
  4024   001F6C  6ADA               	clrf	fsr2h,c
  4025   001F6E  0E03               	movlw	3
  4026   001F70  26D9               	addwf	fsr2l,f,c
  4027   001F72  B0DF               	btfsc	indf2,0,c
  4028   001F74  EFBE  F00F         	goto	u2801
  4029   001F78  EFC0  F00F         	goto	u2800
  4030   001F7C                     u2801:
  4031   001F7C  EFC4  F00F         	goto	l454
  4032   001F80                     u2800:
  4033   001F80                     
  4034                           ;MCAL_Layer/ADC/mcal_adc.c: 349:         {;MCAL_Layer/ADC/mcal_adc.c: 350:             A
      +                          DCON1bits.VCFG1 = 0; ADCON1bits.VCFG0 = 0;;
  4035   001F80  9AC1               	bcf	193,5,c	;volatile
  4036   001F82  98C1               	bcf	193,4,c	;volatile
  4037                           
  4038                           ;MCAL_Layer/ADC/mcal_adc.c: 351:         }
  4039   001F84  EFCA  F00F         	goto	l456
  4040   001F88                     l454:
  4041                           
  4042                           ;MCAL_Layer/ADC/mcal_adc.c: 353:         {;MCAL_Layer/ADC/mcal_adc.c: 354:             A
      +                          DCON1bits.VCFG1 = 0; ADCON1bits.VCFG0 = 0;;
  4043   001F88  9AC1               	bcf	193,5,c	;volatile
  4044   001F8A  98C1               	bcf	193,4,c	;volatile
  4045   001F8C  EFCA  F00F         	goto	l456
  4046   001F90                     l3874:
  4047   001F90  0E00               	movlw	0
  4048   001F92  6E04               	movwf	configure_voltage_reference@ret^0,c
  4049   001F94                     l456:
  4050                           
  4051                           ;MCAL_Layer/ADC/mcal_adc.c: 359:     return ret;
  4052   001F94  5004               	movf	configure_voltage_reference@ret^0,w,c
  4053   001F96  0012               	return		;funcret
  4054   001F98                     __end_of_configure_voltage_reference:
  4055                           	callstack 0
  4056                           
  4057 ;; *************** function _adc_GetConversion_Blocking *****************
  4058 ;; Defined at:
  4059 ;;		line 233 in file "MCAL_Layer/ADC/mcal_adc.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;  _adc            1    9[COMRAM] PTR const struct .
  4062 ;;		 -> adc1(4), 
  4063 ;;  channel         1   10[COMRAM] enum E3047
  4064 ;;  conversion_r    1   11[COMRAM] PTR unsigned short 
  4065 ;;		 -> adc_res_4(2), adc_res_3(2), adc_res_2(2), adc_res_1(2), 
  4066 ;; Auto vars:     Size  Location     Type
  4067 ;;  ret             1   12[COMRAM] unsigned char 
  4068 ;; Return value:  Size  Location     Type
  4069 ;;                  1    wreg      unsigned char 
  4070 ;; Registers used:
  4071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4072 ;; Tracked objects:
  4073 ;;		On entry : 0/0
  4074 ;;		On exit  : 0/0
  4075 ;;		Unchanged: 0/0
  4076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4077 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4078 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4080 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4081 ;;Total ram usage:        4 bytes
  4082 ;; Hardware stack levels used: 1
  4083 ;; Hardware stack levels required when called: 6
  4084 ;; This function calls:
  4085 ;;		_adc_GetConversionResult
  4086 ;;		_adc_SelectChannel
  4087 ;;		_adc_StartConversion
  4088 ;; This function is called by:
  4089 ;;		_main
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           	psect	text27
  4094   00205C                     __ptext27:
  4095                           	callstack 0
  4096   00205C                     _adc_GetConversion_Blocking:
  4097                           	callstack 24
  4098   00205C                     
  4099                           ;MCAL_Layer/ADC/mcal_adc.c: 238:     if((((void*)0) != _adc) && (((void*)0) != conversio
      +                          n_result))
  4100   00205C  500A               	movf	adc_GetConversion_Blocking@_adc^0,w,c
  4101   00205E  B4D8               	btfsc	status,2,c
  4102   002060  EF34  F010         	goto	u3111
  4103   002064  EF36  F010         	goto	u3110
  4104   002068                     u3111:
  4105   002068  EF5A  F010         	goto	l4130
  4106   00206C                     u3110:
  4107   00206C  500C               	movf	adc_GetConversion_Blocking@conversion_result^0,w,c
  4108   00206E  B4D8               	btfsc	status,2,c
  4109   002070  EF3C  F010         	goto	u3121
  4110   002074  EF3E  F010         	goto	u3120
  4111   002078                     u3121:
  4112   002078  EF5A  F010         	goto	l4130
  4113   00207C                     u3120:
  4114   00207C                     
  4115                           ;MCAL_Layer/ADC/mcal_adc.c: 239:     {;MCAL_Layer/ADC/mcal_adc.c: 241:         ret = adc
      +                          _SelectChannel(_adc, channel);
  4116   00207C  C00A  F006         	movff	adc_GetConversion_Blocking@_adc,adc_SelectChannel@_adc
  4117   002080  C00B  F007         	movff	adc_GetConversion_Blocking@channel,adc_SelectChannel@channel
  4118   002084  EC76  F011         	call	_adc_SelectChannel	;wreg free
  4119   002088  6E0D               	movwf	adc_GetConversion_Blocking@ret^0,c
  4120                           
  4121                           ;MCAL_Layer/ADC/mcal_adc.c: 243:         ret = adc_StartConversion(_adc);
  4122   00208A  C00A  F003         	movff	adc_GetConversion_Blocking@_adc,adc_StartConversion@_adc
  4123   00208E  ECF5  F011         	call	_adc_StartConversion	;wreg free
  4124   002092  6E0D               	movwf	adc_GetConversion_Blocking@ret^0,c
  4125   002094                     l416:
  4126   002094  B2C2               	btfsc	194,1,c	;volatile
  4127   002096  EF4F  F010         	goto	u3131
  4128   00209A  EF51  F010         	goto	u3130
  4129   00209E                     u3131:
  4130   00209E  EF4A  F010         	goto	l416
  4131   0020A2                     u3130:
  4132   0020A2                     
  4133                           ;MCAL_Layer/ADC/mcal_adc.c: 246:         ret = adc_GetConversionResult(_adc, conversion_
      +                          result);
  4134   0020A2  C00A  F003         	movff	adc_GetConversion_Blocking@_adc,adc_GetConversionResult@_adc
  4135   0020A6  C00C  F004         	movff	adc_GetConversion_Blocking@conversion_result,adc_GetConversionResult@conversion_r
      +                          esult
  4136   0020AA  EC7A  F00D         	call	_adc_GetConversionResult	;wreg free
  4137   0020AE  6E0D               	movwf	adc_GetConversion_Blocking@ret^0,c
  4138                           
  4139                           ;MCAL_Layer/ADC/mcal_adc.c: 247:     }
  4140   0020B0  EF5C  F010         	goto	l419
  4141   0020B4                     l4130:
  4142   0020B4  0E00               	movlw	0
  4143   0020B6  6E0D               	movwf	adc_GetConversion_Blocking@ret^0,c
  4144   0020B8                     l419:
  4145                           
  4146                           ;MCAL_Layer/ADC/mcal_adc.c: 250:     return ret;
  4147   0020B8  500D               	movf	adc_GetConversion_Blocking@ret^0,w,c
  4148   0020BA  0012               	return		;funcret
  4149   0020BC                     __end_of_adc_GetConversion_Blocking:
  4150                           	callstack 0
  4151                           
  4152 ;; *************** function _adc_StartConversion *****************
  4153 ;; Defined at:
  4154 ;;		line 145 in file "MCAL_Layer/ADC/mcal_adc.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;  _adc            1    2[COMRAM] PTR const struct .
  4157 ;;		 -> adc1(4), 
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;  ret             1    3[COMRAM] unsigned char 
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  1    wreg      unsigned char 
  4162 ;; Registers used:
  4163 ;;		wreg, status,2
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4169 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4170 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4172 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4173 ;;Total ram usage:        2 bytes
  4174 ;; Hardware stack levels used: 1
  4175 ;; Hardware stack levels required when called: 4
  4176 ;; This function calls:
  4177 ;;		Nothing
  4178 ;; This function is called by:
  4179 ;;		_adc_GetConversion_Blocking
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           
  4183                           	psect	text28
  4184   0023EA                     __ptext28:
  4185                           	callstack 0
  4186   0023EA                     _adc_StartConversion:
  4187                           	callstack 25
  4188   0023EA                     
  4189                           ;MCAL_Layer/ADC/mcal_adc.c: 145: Std_ReturnType adc_StartConversion(const adc_config_t *
      +                          _adc);MCAL_Layer/ADC/mcal_adc.c: 146: {;MCAL_Layer/ADC/mcal_adc.c: 147:     Std_ReturnTy
      +                          pe ret = (Std_ReturnType)0x01;
  4190   0023EA  0E01               	movlw	1
  4191   0023EC  6E04               	movwf	adc_StartConversion@ret^0,c
  4192                           
  4193                           ;MCAL_Layer/ADC/mcal_adc.c: 149:     if(((void*)0) != _adc)
  4194   0023EE  5003               	movf	adc_StartConversion@_adc^0,w,c
  4195   0023F0  B4D8               	btfsc	status,2,c
  4196   0023F2  EFFD  F011         	goto	u2941
  4197   0023F6  EFFF  F011         	goto	u2940
  4198   0023FA                     u2941:
  4199   0023FA  EF02  F012         	goto	l4016
  4200   0023FE                     u2940:
  4201   0023FE                     
  4202                           ;MCAL_Layer/ADC/mcal_adc.c: 150:     {;MCAL_Layer/ADC/mcal_adc.c: 151:         (ADCON0bi
      +                          ts.GODONE = 1);
  4203   0023FE  82C2               	bsf	194,1,c	;volatile
  4204                           
  4205                           ;MCAL_Layer/ADC/mcal_adc.c: 152:     }
  4206   002400  EF04  F012         	goto	l397
  4207   002404                     l4016:
  4208   002404  0E00               	movlw	0
  4209   002406  6E04               	movwf	adc_StartConversion@ret^0,c
  4210   002408                     l397:
  4211                           
  4212                           ;MCAL_Layer/ADC/mcal_adc.c: 155:     return ret;
  4213   002408  5004               	movf	adc_StartConversion@ret^0,w,c
  4214   00240A  0012               	return		;funcret
  4215   00240C                     __end_of_adc_StartConversion:
  4216                           	callstack 0
  4217                           
  4218 ;; *************** function _adc_SelectChannel *****************
  4219 ;; Defined at:
  4220 ;;		line 121 in file "MCAL_Layer/ADC/mcal_adc.c"
  4221 ;; Parameters:    Size  Location     Type
  4222 ;;  _adc            1    5[COMRAM] PTR const struct .
  4223 ;;		 -> adc1(4), 
  4224 ;;  channel         1    6[COMRAM] enum E3047
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;  ret             1    8[COMRAM] unsigned char 
  4227 ;; Return value:  Size  Location     Type
  4228 ;;                  1    wreg      unsigned char 
  4229 ;; Registers used:
  4230 ;;		wreg, status,2, status,0, cstack
  4231 ;; Tracked objects:
  4232 ;;		On entry : 0/0
  4233 ;;		On exit  : 0/0
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4236 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4237 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4238 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4239 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4240 ;;Total ram usage:        4 bytes
  4241 ;; Hardware stack levels used: 1
  4242 ;; Hardware stack levels required when called: 5
  4243 ;; This function calls:
  4244 ;;		_adc_input_channel_port_configure
  4245 ;; This function is called by:
  4246 ;;		_adc_Init
  4247 ;;		_adc_GetConversion_Blocking
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           	psect	text29
  4252   0022EC                     __ptext29:
  4253                           	callstack 0
  4254   0022EC                     _adc_SelectChannel:
  4255                           	callstack 23
  4256   0022EC                     
  4257                           ;MCAL_Layer/ADC/mcal_adc.c: 121: Std_ReturnType adc_SelectChannel(const adc_config_t *_a
      +                          dc, adc_channel_select_t channel);MCAL_Layer/ADC/mcal_adc.c: 122: {;MCAL_Layer/ADC/mcal_
      +                          adc.c: 123:     Std_ReturnType ret = (Std_ReturnType)0x01;
  4258   0022EC  0E01               	movlw	1
  4259   0022EE  6E09               	movwf	adc_SelectChannel@ret^0,c
  4260                           
  4261                           ;MCAL_Layer/ADC/mcal_adc.c: 125:     if(((void*)0) != _adc)
  4262   0022F0  5006               	movf	adc_SelectChannel@_adc^0,w,c
  4263   0022F2  B4D8               	btfsc	status,2,c
  4264   0022F4  EF7E  F011         	goto	u2741
  4265   0022F8  EF80  F011         	goto	u2740
  4266   0022FC                     u2741:
  4267   0022FC  EF8E  F011         	goto	l3846
  4268   002300                     u2740:
  4269   002300                     
  4270                           ;MCAL_Layer/ADC/mcal_adc.c: 126:     {;MCAL_Layer/ADC/mcal_adc.c: 128:         ADCON0bit
      +                          s.CHS = channel;
  4271   002300  C007  F008         	movff	adc_SelectChannel@channel,??_adc_SelectChannel
  4272   002304  4608               	rlncf	??_adc_SelectChannel^0,f,c
  4273   002306  4608               	rlncf	??_adc_SelectChannel^0,f,c
  4274   002308  50C2               	movf	194,w,c	;volatile
  4275   00230A  1808               	xorwf	??_adc_SelectChannel^0,w,c
  4276   00230C  0BC3               	andlw	-61
  4277   00230E  1808               	xorwf	??_adc_SelectChannel^0,w,c
  4278   002310  6EC2               	movwf	194,c	;volatile
  4279   002312                     
  4280                           ;MCAL_Layer/ADC/mcal_adc.c: 129:         adc_input_channel_port_configure(channel);
  4281   002312  5007               	movf	adc_SelectChannel@channel^0,w,c
  4282   002314  ECAA  F00C         	call	_adc_input_channel_port_configure
  4283                           
  4284                           ;MCAL_Layer/ADC/mcal_adc.c: 130:     }
  4285   002318  EF90  F011         	goto	l392
  4286   00231C                     l3846:
  4287   00231C  0E00               	movlw	0
  4288   00231E  6E09               	movwf	adc_SelectChannel@ret^0,c
  4289   002320                     l392:
  4290                           
  4291                           ;MCAL_Layer/ADC/mcal_adc.c: 133:     return ret;
  4292   002320  5009               	movf	adc_SelectChannel@ret^0,w,c
  4293   002322  0012               	return		;funcret
  4294   002324                     __end_of_adc_SelectChannel:
  4295                           	callstack 0
  4296                           
  4297 ;; *************** function _adc_input_channel_port_configure *****************
  4298 ;; Defined at:
  4299 ;;		line 288 in file "MCAL_Layer/ADC/mcal_adc.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;  channel         1    wreg     enum E3047
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;  channel         1    4[COMRAM] enum E3047
  4304 ;;  ret             1    0        unsigned char 
  4305 ;; Return value:  Size  Location     Type
  4306 ;;                  1    wreg      unsigned char 
  4307 ;; Registers used:
  4308 ;;		wreg, status,2, status,0
  4309 ;; Tracked objects:
  4310 ;;		On entry : 0/0
  4311 ;;		On exit  : 0/0
  4312 ;;		Unchanged: 0/0
  4313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4315 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4316 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4317 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4318 ;;Total ram usage:        3 bytes
  4319 ;; Hardware stack levels used: 1
  4320 ;; Hardware stack levels required when called: 4
  4321 ;; This function calls:
  4322 ;;		Nothing
  4323 ;; This function is called by:
  4324 ;;		_adc_SelectChannel
  4325 ;; This function uses a non-reentrant model
  4326 ;;
  4327                           
  4328                           	psect	text30
  4329   001954                     __ptext30:
  4330                           	callstack 0
  4331   001954                     _adc_input_channel_port_configure:
  4332                           	callstack 23
  4333                           
  4334                           ;incstack = 0
  4335                           ;adc_input_channel_port_configure@channel stored from wreg
  4336   001954  6E05               	movwf	adc_input_channel_port_configure@channel^0,c
  4337   001956                     
  4338                           ;MCAL_Layer/ADC/mcal_adc.c: 292:     switch(channel)
  4339   001956  EFD6  F00C         	goto	l3734
  4340   00195A                     l3706:
  4341   00195A  8092               	bsf	146,0,c	;volatile
  4342   00195C  EF17  F00D         	goto	l439
  4343   001960                     l3708:
  4344   001960  8292               	bsf	146,1,c	;volatile
  4345   001962  EF17  F00D         	goto	l439
  4346   001966                     l3710:
  4347   001966  8492               	bsf	146,2,c	;volatile
  4348   001968  EF17  F00D         	goto	l439
  4349   00196C                     l3712:
  4350   00196C  8692               	bsf	146,3,c	;volatile
  4351   00196E  EF17  F00D         	goto	l439
  4352   001972                     l3714:
  4353   001972  8A92               	bsf	146,5,c	;volatile
  4354   001974  EF17  F00D         	goto	l439
  4355   001978                     l3716:
  4356   001978  8096               	bsf	150,0,c	;volatile
  4357   00197A  EF17  F00D         	goto	l439
  4358   00197E                     l3718:
  4359   00197E  8296               	bsf	150,1,c	;volatile
  4360   001980  EF17  F00D         	goto	l439
  4361   001984                     l3720:
  4362   001984  8496               	bsf	150,2,c	;volatile
  4363   001986  EF17  F00D         	goto	l439
  4364   00198A                     l3722:
  4365   00198A  8493               	bsf	147,2,c	;volatile
  4366   00198C  EF17  F00D         	goto	l439
  4367   001990                     l3724:
  4368   001990  8693               	bsf	147,3,c	;volatile
  4369   001992  EF17  F00D         	goto	l439
  4370   001996                     l3726:
  4371   001996  8293               	bsf	147,1,c	;volatile
  4372   001998  EF17  F00D         	goto	l439
  4373   00199C                     l3728:
  4374   00199C  8893               	bsf	147,4,c	;volatile
  4375   00199E  EF17  F00D         	goto	l439
  4376   0019A2                     l3730:
  4377   0019A2  8093               	bsf	147,0,c	;volatile
  4378   0019A4  EF17  F00D         	goto	l439
  4379   0019A8                     l3732:
  4380                           
  4381                           ;MCAL_Layer/ADC/mcal_adc.c: 309:     }
  4382   0019A8  EF17  F00D         	goto	l439
  4383   0019AC                     l3734:
  4384   0019AC  5005               	movf	adc_input_channel_port_configure@channel^0,w,c
  4385   0019AE  6E03               	movwf	??_adc_input_channel_port_configure^0,c
  4386   0019B0  6A04               	clrf	(??_adc_input_channel_port_configure+1)^0,c
  4387                           
  4388                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4389                           ; Switch size 1, requested type "simple"
  4390                           ; Number of cases is 1, Range of values is 0 to 0
  4391                           ; switch strategies available:
  4392                           ; Name         Instructions Cycles
  4393                           ; simple_byte            4     3 (average)
  4394                           ;	Chosen strategy is simple_byte
  4395   0019B2  5004               	movf	(??_adc_input_channel_port_configure+1)^0,w,c
  4396   0019B4  0A00               	xorlw	0	; case 0
  4397   0019B6  B4D8               	btfsc	status,2,c
  4398   0019B8  EFE0  F00C         	goto	l4780
  4399   0019BC  EFD4  F00C         	goto	l3732
  4400   0019C0                     l4780:
  4401                           
  4402                           ; Switch size 1, requested type "simple"
  4403                           ; Number of cases is 13, Range of values is 0 to 12
  4404                           ; switch strategies available:
  4405                           ; Name         Instructions Cycles
  4406                           ; simple_byte           40    21 (average)
  4407                           ;	Chosen strategy is simple_byte
  4408   0019C0  5003               	movf	??_adc_input_channel_port_configure^0,w,c
  4409   0019C2  0A00               	xorlw	0	; case 0
  4410   0019C4  B4D8               	btfsc	status,2,c
  4411   0019C6  EFAD  F00C         	goto	l3706
  4412   0019CA  0A01               	xorlw	1	; case 1
  4413   0019CC  B4D8               	btfsc	status,2,c
  4414   0019CE  EFB0  F00C         	goto	l3708
  4415   0019D2  0A03               	xorlw	3	; case 2
  4416   0019D4  B4D8               	btfsc	status,2,c
  4417   0019D6  EFB3  F00C         	goto	l3710
  4418   0019DA  0A01               	xorlw	1	; case 3
  4419   0019DC  B4D8               	btfsc	status,2,c
  4420   0019DE  EFB6  F00C         	goto	l3712
  4421   0019E2  0A07               	xorlw	7	; case 4
  4422   0019E4  B4D8               	btfsc	status,2,c
  4423   0019E6  EFB9  F00C         	goto	l3714
  4424   0019EA  0A01               	xorlw	1	; case 5
  4425   0019EC  B4D8               	btfsc	status,2,c
  4426   0019EE  EFBC  F00C         	goto	l3716
  4427   0019F2  0A03               	xorlw	3	; case 6
  4428   0019F4  B4D8               	btfsc	status,2,c
  4429   0019F6  EFBF  F00C         	goto	l3718
  4430   0019FA  0A01               	xorlw	1	; case 7
  4431   0019FC  B4D8               	btfsc	status,2,c
  4432   0019FE  EFC2  F00C         	goto	l3720
  4433   001A02  0A0F               	xorlw	15	; case 8
  4434   001A04  B4D8               	btfsc	status,2,c
  4435   001A06  EFC5  F00C         	goto	l3722
  4436   001A0A  0A01               	xorlw	1	; case 9
  4437   001A0C  B4D8               	btfsc	status,2,c
  4438   001A0E  EFC8  F00C         	goto	l3724
  4439   001A12  0A03               	xorlw	3	; case 10
  4440   001A14  B4D8               	btfsc	status,2,c
  4441   001A16  EFCB  F00C         	goto	l3726
  4442   001A1A  0A01               	xorlw	1	; case 11
  4443   001A1C  B4D8               	btfsc	status,2,c
  4444   001A1E  EFCE  F00C         	goto	l3728
  4445   001A22  0A07               	xorlw	7	; case 12
  4446   001A24  B4D8               	btfsc	status,2,c
  4447   001A26  EFD1  F00C         	goto	l3730
  4448   001A2A  EFD4  F00C         	goto	l3732
  4449   001A2E                     l439:
  4450   001A2E  0012               	return		;funcret
  4451   001A30                     __end_of_adc_input_channel_port_configure:
  4452                           	callstack 0
  4453                           
  4454 ;; *************** function _adc_GetConversionResult *****************
  4455 ;; Defined at:
  4456 ;;		line 197 in file "MCAL_Layer/ADC/mcal_adc.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;  _adc            1    2[COMRAM] PTR const struct .
  4459 ;;		 -> adc1(4), 
  4460 ;;  conversion_r    1    3[COMRAM] PTR unsigned short 
  4461 ;;		 -> adc_res_4(2), adc_res_3(2), adc_res_2(2), adc_res_1(2), 
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;  ret             1    7[COMRAM] unsigned char 
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  1    wreg      unsigned char 
  4466 ;; Registers used:
  4467 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4473 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4474 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4475 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4476 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4477 ;;Total ram usage:        6 bytes
  4478 ;; Hardware stack levels used: 1
  4479 ;; Hardware stack levels required when called: 4
  4480 ;; This function calls:
  4481 ;;		Nothing
  4482 ;; This function is called by:
  4483 ;;		_adc_GetConversion_Blocking
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487                           	psect	text31
  4488   001AF4                     __ptext31:
  4489                           	callstack 0
  4490   001AF4                     _adc_GetConversionResult:
  4491                           	callstack 25
  4492   001AF4                     
  4493                           ;MCAL_Layer/ADC/mcal_adc.c: 197: Std_ReturnType adc_GetConversionResult(const adc_config
      +                          _t *_adc, adc_result_t *conversion_result);MCAL_Layer/ADC/mcal_adc.c: 198: {;MCAL_Layer/
      +                          ADC/mcal_adc.c: 199:     Std_ReturnType ret = (Std_ReturnType)0x01;
  4494   001AF4  0E01               	movlw	1
  4495   001AF6  6E08               	movwf	adc_GetConversionResult@ret^0,c
  4496                           
  4497                           ;MCAL_Layer/ADC/mcal_adc.c: 201:     if((((void*)0) != _adc) && (((void*)0) != conversio
      +                          n_result))
  4498   001AF8  5003               	movf	adc_GetConversionResult@_adc^0,w,c
  4499   001AFA  B4D8               	btfsc	status,2,c
  4500   001AFC  EF82  F00D         	goto	u2951
  4501   001B00  EF84  F00D         	goto	u2950
  4502   001B04                     u2951:
  4503   001B04  EFD2  F00D         	goto	l4034
  4504   001B08                     u2950:
  4505   001B08  5004               	movf	adc_GetConversionResult@conversion_result^0,w,c
  4506   001B0A  B4D8               	btfsc	status,2,c
  4507   001B0C  EF8A  F00D         	goto	u2961
  4508   001B10  EF8C  F00D         	goto	u2960
  4509   001B14                     u2961:
  4510   001B14  EFD2  F00D         	goto	l4034
  4511   001B18                     u2960:
  4512   001B18                     
  4513                           ;MCAL_Layer/ADC/mcal_adc.c: 202:     {;MCAL_Layer/ADC/mcal_adc.c: 203:         if(0x01U 
      +                          == _adc->result_format)
  4514   001B18  5003               	movf	adc_GetConversionResult@_adc^0,w,c
  4515   001B1A  6ED9               	movwf	fsr2l,c
  4516   001B1C  6ADA               	clrf	fsr2h,c
  4517   001B1E  0E03               	movlw	3
  4518   001B20  26D9               	addwf	fsr2l,f,c
  4519   001B22  A2DF               	btfss	indf2,1,c
  4520   001B24  EF96  F00D         	goto	u2971
  4521   001B28  EF98  F00D         	goto	u2970
  4522   001B2C                     u2971:
  4523   001B2C  EFAB  F00D         	goto	l4028
  4524   001B30                     u2970:
  4525   001B30                     l4026:
  4526                           
  4527                           ;MCAL_Layer/ADC/mcal_adc.c: 204:         {;MCAL_Layer/ADC/mcal_adc.c: 205:             *
      +                          conversion_result = (adc_result_t)((ADRESH << 8) + ADRESL);
  4528   001B30  50C3               	movf	195,w,c	;volatile
  4529   001B32  CFC4 F005          	movff	4036,??_adc_GetConversionResult	;volatile
  4530   001B36  6A06               	clrf	(??_adc_GetConversionResult+1)^0,c
  4531   001B38  C005  F006         	movff	??_adc_GetConversionResult,??_adc_GetConversionResult+1
  4532   001B3C  6A05               	clrf	??_adc_GetConversionResult^0,c
  4533   001B3E  2605               	addwf	??_adc_GetConversionResult^0,f,c
  4534   001B40  0E00               	movlw	0
  4535   001B42  2206               	addwfc	(??_adc_GetConversionResult+1)^0,f,c
  4536   001B44  5004               	movf	adc_GetConversionResult@conversion_result^0,w,c
  4537   001B46  6ED9               	movwf	fsr2l,c
  4538   001B48  6ADA               	clrf	fsr2h,c
  4539   001B4A  C005  FFDE         	movff	??_adc_GetConversionResult,postinc2
  4540   001B4E  C006  FFDD         	movff	??_adc_GetConversionResult+1,postdec2
  4541                           
  4542                           ;MCAL_Layer/ADC/mcal_adc.c: 206:         }
  4543   001B52  EFD4  F00D         	goto	l411
  4544   001B56                     l4028:
  4545   001B56  5003               	movf	adc_GetConversionResult@_adc^0,w,c
  4546   001B58  6ED9               	movwf	fsr2l,c
  4547   001B5A  6ADA               	clrf	fsr2h,c
  4548   001B5C  0E03               	movlw	3
  4549   001B5E  26D9               	addwf	fsr2l,f,c
  4550   001B60  B2DF               	btfsc	indf2,1,c
  4551   001B62  EFB5  F00D         	goto	u2981
  4552   001B66  EFB7  F00D         	goto	u2980
  4553   001B6A                     u2981:
  4554   001B6A  EF98  F00D         	goto	l4026
  4555   001B6E                     u2980:
  4556   001B6E                     
  4557                           ;MCAL_Layer/ADC/mcal_adc.c: 208:         {;MCAL_Layer/ADC/mcal_adc.c: 209:             *
      +                          conversion_result = (adc_result_t)(((ADRESH << 8) + ADRESL) >> 6);
  4558   001B6E  50C3               	movf	195,w,c	;volatile
  4559   001B70  CFC4 F005          	movff	4036,??_adc_GetConversionResult	;volatile
  4560   001B74  6A06               	clrf	(??_adc_GetConversionResult+1)^0,c
  4561   001B76  C005  F006         	movff	??_adc_GetConversionResult,??_adc_GetConversionResult+1
  4562   001B7A  6A05               	clrf	??_adc_GetConversionResult^0,c
  4563   001B7C  2605               	addwf	??_adc_GetConversionResult^0,f,c
  4564   001B7E  0E00               	movlw	0
  4565   001B80  2206               	addwfc	(??_adc_GetConversionResult+1)^0,f,c
  4566   001B82  0E06               	movlw	6
  4567   001B84  6E07               	movwf	(??_adc_GetConversionResult+2)^0,c
  4568   001B86                     u2995:
  4569   001B86  3406               	rlcf	(??_adc_GetConversionResult+1)^0,w,c
  4570   001B88  3206               	rrcf	(??_adc_GetConversionResult+1)^0,f,c
  4571   001B8A  3205               	rrcf	??_adc_GetConversionResult^0,f,c
  4572   001B8C  2E07               	decfsz	(??_adc_GetConversionResult+2)^0,f,c
  4573   001B8E  EFC3  F00D         	goto	u2995
  4574   001B92  5004               	movf	adc_GetConversionResult@conversion_result^0,w,c
  4575   001B94  6ED9               	movwf	fsr2l,c
  4576   001B96  6ADA               	clrf	fsr2h,c
  4577   001B98  C005  FFDE         	movff	??_adc_GetConversionResult,postinc2
  4578   001B9C  C006  FFDD         	movff	??_adc_GetConversionResult+1,postdec2
  4579                           
  4580                           ;MCAL_Layer/ADC/mcal_adc.c: 210:         }
  4581   001BA0  EFD4  F00D         	goto	l411
  4582   001BA4                     l4034:
  4583   001BA4  0E00               	movlw	0
  4584   001BA6  6E08               	movwf	adc_GetConversionResult@ret^0,c
  4585   001BA8                     l411:
  4586                           
  4587                           ;MCAL_Layer/ADC/mcal_adc.c: 218:     return ret;
  4588   001BA8  5008               	movf	adc_GetConversionResult@ret^0,w,c
  4589   001BAA  0012               	return		;funcret
  4590   001BAC                     __end_of_adc_GetConversionResult:
  4591                           	callstack 0
  4592                           
  4593 ;; *************** function _InterruptManagerLow *****************
  4594 ;; Defined at:
  4595 ;;		line 101 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;		None
  4598 ;; Auto vars:     Size  Location     Type
  4599 ;;		None
  4600 ;; Return value:  Size  Location     Type
  4601 ;;                  1    wreg      void 
  4602 ;; Registers used:
  4603 ;;		cstack
  4604 ;; Tracked objects:
  4605 ;;		On entry : 0/0
  4606 ;;		On exit  : 0/0
  4607 ;;		Unchanged: 0/0
  4608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4611 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4612 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4613 ;;Total ram usage:        1 bytes
  4614 ;; Hardware stack levels used: 1
  4615 ;; Hardware stack levels required when called: 3
  4616 ;; This function calls:
  4617 ;;		_INT1_ISR
  4618 ;;		_INT2_ISR
  4619 ;; This function is called by:
  4620 ;;		Interrupt level 1
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           	psect	intcodelo
  4625   000018                     __pintcodelo:
  4626                           	callstack 0
  4627   000018                     _InterruptManagerLow:
  4628                           	callstack 21
  4629                           
  4630                           ;incstack = 0
  4631   000018  807D               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4632   00001A  CFE0 F002          	movff	bsr,??_InterruptManagerLow
  4633   00001E                     
  4634                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 106:     if((1 == INTCON3bits.INT1IE) &&
      +                           (1 == INTCON3bits.INT1IF))
  4635   00001E  A6F0               	btfss	240,3,c	;volatile
  4636   000020  EF14  F000         	goto	i1u208_21
  4637   000024  EF16  F000         	goto	i1u208_20
  4638   000028                     i1u208_21:
  4639   000028  EF1F  F000         	goto	i1l642
  4640   00002C                     i1u208_20:
  4641   00002C  A0F0               	btfss	240,0,c	;volatile
  4642   00002E  EF1B  F000         	goto	i1u209_21
  4643   000032  EF1D  F000         	goto	i1u209_20
  4644   000036                     i1u209_21:
  4645   000036  EF1F  F000         	goto	i1l642
  4646   00003A                     i1u209_20:
  4647   00003A                     
  4648                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 107:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 108:         INT1_ISR();
  4649   00003A  EC56  F012         	call	_INT1_ISR	;wreg free
  4650   00003E                     i1l642:
  4651                           
  4652                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 111:     if((1 == INTCON3bits.INT2IE) &&
      +                           (1 == INTCON3bits.INT2IF))
  4653   00003E  A8F0               	btfss	240,4,c	;volatile
  4654   000040  EF24  F000         	goto	i1u210_21
  4655   000044  EF26  F000         	goto	i1u210_20
  4656   000048                     i1u210_21:
  4657   000048  EF2F  F000         	goto	i1l645
  4658   00004C                     i1u210_20:
  4659   00004C  A2F0               	btfss	240,1,c	;volatile
  4660   00004E  EF2B  F000         	goto	i1u211_21
  4661   000052  EF2D  F000         	goto	i1u211_20
  4662   000056                     i1u211_21:
  4663   000056  EF2F  F000         	goto	i1l645
  4664   00005A                     i1u211_20:
  4665   00005A                     
  4666                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 112:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 113:         INT2_ISR();
  4667   00005A  EC54  F012         	call	_INT2_ISR	;wreg free
  4668   00005E                     i1l645:
  4669   00005E  C002  FFE0         	movff	??_InterruptManagerLow,bsr
  4670   000062  907D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4671   000064  0010               	retfie	
  4672   000066                     __end_of_InterruptManagerLow:
  4673                           	callstack 0
  4674                           
  4675 ;; *************** function _INT2_ISR *****************
  4676 ;; Defined at:
  4677 ;;		line 218 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;		None
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;		None
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  1    wreg      void 
  4684 ;; Registers used:
  4685 ;;		None
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4695 ;;Total ram usage:        0 bytes
  4696 ;; Hardware stack levels used: 1
  4697 ;; Hardware stack levels required when called: 2
  4698 ;; This function calls:
  4699 ;;		Nothing
  4700 ;; This function is called by:
  4701 ;;		_InterruptManagerLow
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705                           	psect	text33
  4706   0024A8                     __ptext33:
  4707                           	callstack 0
  4708   0024A8                     _INT2_ISR:
  4709                           	callstack 21
  4710   0024A8                     
  4711                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 221:     (INTCON3bits.INT2IF = 0);
  4712   0024A8  92F0               	bcf	240,1,c	;volatile
  4713   0024AA  0012               	return		;funcret
  4714   0024AC                     __end_of_INT2_ISR:
  4715                           	callstack 0
  4716                           
  4717 ;; *************** function _INT1_ISR *****************
  4718 ;; Defined at:
  4719 ;;		line 204 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  4720 ;; Parameters:    Size  Location     Type
  4721 ;;		None
  4722 ;; Auto vars:     Size  Location     Type
  4723 ;;		None
  4724 ;; Return value:  Size  Location     Type
  4725 ;;                  1    wreg      void 
  4726 ;; Registers used:
  4727 ;;		None
  4728 ;; Tracked objects:
  4729 ;;		On entry : 0/0
  4730 ;;		On exit  : 0/0
  4731 ;;		Unchanged: 0/0
  4732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4737 ;;Total ram usage:        0 bytes
  4738 ;; Hardware stack levels used: 1
  4739 ;; Hardware stack levels required when called: 2
  4740 ;; This function calls:
  4741 ;;		Nothing
  4742 ;; This function is called by:
  4743 ;;		_InterruptManagerLow
  4744 ;; This function uses a non-reentrant model
  4745 ;;
  4746                           
  4747                           	psect	text34
  4748   0024AC                     __ptext34:
  4749                           	callstack 0
  4750   0024AC                     _INT1_ISR:
  4751                           	callstack 21
  4752   0024AC                     
  4753                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 207:     (INTCON3bits.INT1IF = 0);
  4754   0024AC  90F0               	bcf	240,0,c	;volatile
  4755   0024AE  0012               	return		;funcret
  4756   0024B0                     __end_of_INT1_ISR:
  4757                           	callstack 0
  4758                           
  4759 ;; *************** function _InterruptManagerHigh *****************
  4760 ;; Defined at:
  4761 ;;		line 27 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;		None
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;		None
  4766 ;; Return value:  Size  Location     Type
  4767 ;;                  1    wreg      void 
  4768 ;; Registers used:
  4769 ;;		wreg, status,2, status,0, cstack
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4779 ;;Total ram usage:        0 bytes
  4780 ;; Hardware stack levels used: 1
  4781 ;; Hardware stack levels required when called: 1
  4782 ;; This function calls:
  4783 ;;		_INT0_ISR
  4784 ;;		_RB4_ISR
  4785 ;;		_RB5_ISR
  4786 ;;		_RB6_ISR
  4787 ;;		_RB7_ISR
  4788 ;; This function is called by:
  4789 ;;		Interrupt level 2
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           	psect	intcode
  4794   000008                     __pintcode:
  4795                           	callstack 0
  4796   000008                     _InterruptManagerHigh:
  4797                           	callstack 21
  4798                           
  4799                           ;incstack = 0
  4800   000008  827D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4801   00000A  ED1D  F008         	call	int_func,f	;refresh shadow registers
  4802                           
  4803                           	psect	intcode_body
  4804   00103A                     __pintcode_body:
  4805                           	callstack 21
  4806   00103A                     int_func:
  4807                           	callstack 21
  4808   00103A  0006               	pop		; remove dummy address from shadow register refresh
  4809   00103C                     
  4810                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 32:     if((1 == INTCONbits.INT0IE) && (
      +                          1 == INTCONbits.INT0IF))
  4811   00103C  A8F2               	btfss	242,4,c	;volatile
  4812   00103E  EF23  F008         	goto	i2u174_41
  4813   001042  EF25  F008         	goto	i2u174_40
  4814   001046                     i2u174_41:
  4815   001046  EF2E  F008         	goto	i2l619
  4816   00104A                     i2u174_40:
  4817   00104A  A2F2               	btfss	242,1,c	;volatile
  4818   00104C  EF2A  F008         	goto	i2u175_41
  4819   001050  EF2C  F008         	goto	i2u175_40
  4820   001054                     i2u175_41:
  4821   001054  EF2E  F008         	goto	i2l619
  4822   001058                     i2u175_40:
  4823   001058                     
  4824                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 33:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 34:         INT0_ISR();
  4825   001058  EC58  F012         	call	_INT0_ISR	;wreg free
  4826   00105C                     i2l619:
  4827                           
  4828                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 41:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) && (GPIO_LOGIC_LOW == PORTBbits.RB4) && (1 == RB4_flag))
  4829   00105C  A6F2               	btfss	242,3,c	;volatile
  4830   00105E  EF33  F008         	goto	i2u176_41
  4831   001062  EF35  F008         	goto	i2u176_40
  4832   001066                     i2u176_41:
  4833   001066  EF50  F008         	goto	i2l621
  4834   00106A                     i2u176_40:
  4835   00106A  A0F2               	btfss	242,0,c	;volatile
  4836   00106C  EF3A  F008         	goto	i2u177_41
  4837   001070  EF3C  F008         	goto	i2u177_40
  4838   001074                     i2u177_41:
  4839   001074  EF50  F008         	goto	i2l621
  4840   001078                     i2u177_40:
  4841   001078  B881               	btfsc	129,4,c	;volatile
  4842   00107A  EF41  F008         	goto	i2u178_41
  4843   00107E  EF43  F008         	goto	i2u178_40
  4844   001082                     i2u178_41:
  4845   001082  EF50  F008         	goto	i2l621
  4846   001086                     i2u178_40:
  4847   001086  0454               	decf	_RB4_flag^0,w,c	;volatile
  4848   001088  A4D8               	btfss	status,2,c
  4849   00108A  EF49  F008         	goto	i2u179_41
  4850   00108E  EF4B  F008         	goto	i2u179_40
  4851   001092                     i2u179_41:
  4852   001092  EF50  F008         	goto	i2l621
  4853   001096                     i2u179_40:
  4854   001096                     
  4855                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 42:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 43:         RB4_flag = 0;
  4856   001096  0E00               	movlw	0
  4857   001098  6E54               	movwf	_RB4_flag^0,c	;volatile
  4858   00109A                     
  4859                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 44:         RB4_ISR(0);
  4860   00109A  0E00               	movlw	0
  4861   00109C  EC2D  F012         	call	_RB4_ISR
  4862   0010A0                     i2l621:
  4863                           
  4864                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 47:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) && (GPIO_LOGIC_HIGH == PORTBbits.RB4) && (0 == RB4_flag))
  4865   0010A0  A6F2               	btfss	242,3,c	;volatile
  4866   0010A2  EF55  F008         	goto	i2u180_41
  4867   0010A6  EF57  F008         	goto	i2u180_40
  4868   0010AA                     i2u180_41:
  4869   0010AA  EF72  F008         	goto	i2l623
  4870   0010AE                     i2u180_40:
  4871   0010AE  A0F2               	btfss	242,0,c	;volatile
  4872   0010B0  EF5C  F008         	goto	i2u181_41
  4873   0010B4  EF5E  F008         	goto	i2u181_40
  4874   0010B8                     i2u181_41:
  4875   0010B8  EF72  F008         	goto	i2l623
  4876   0010BC                     i2u181_40:
  4877   0010BC  A881               	btfss	129,4,c	;volatile
  4878   0010BE  EF63  F008         	goto	i2u182_41
  4879   0010C2  EF65  F008         	goto	i2u182_40
  4880   0010C6                     i2u182_41:
  4881   0010C6  EF72  F008         	goto	i2l623
  4882   0010CA                     i2u182_40:
  4883   0010CA  5054               	movf	_RB4_flag^0,w,c	;volatile
  4884   0010CC  A4D8               	btfss	status,2,c
  4885   0010CE  EF6B  F008         	goto	i2u183_41
  4886   0010D2  EF6D  F008         	goto	i2u183_40
  4887   0010D6                     i2u183_41:
  4888   0010D6  EF72  F008         	goto	i2l623
  4889   0010DA                     i2u183_40:
  4890   0010DA                     
  4891                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 48:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 49:         RB4_flag = 1;
  4892   0010DA  0E01               	movlw	1
  4893   0010DC  6E54               	movwf	_RB4_flag^0,c	;volatile
  4894   0010DE                     
  4895                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 50:         RB4_ISR(1);
  4896   0010DE  0E01               	movlw	1
  4897   0010E0  EC2D  F012         	call	_RB4_ISR
  4898   0010E4                     i2l623:
  4899                           
  4900                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 53:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) && (GPIO_LOGIC_LOW == PORTBbits.RB5) && (1 == RB5_flag))
  4901   0010E4  A6F2               	btfss	242,3,c	;volatile
  4902   0010E6  EF77  F008         	goto	i2u184_41
  4903   0010EA  EF79  F008         	goto	i2u184_40
  4904   0010EE                     i2u184_41:
  4905   0010EE  EF94  F008         	goto	i2l625
  4906   0010F2                     i2u184_40:
  4907   0010F2  A0F2               	btfss	242,0,c	;volatile
  4908   0010F4  EF7E  F008         	goto	i2u185_41
  4909   0010F8  EF80  F008         	goto	i2u185_40
  4910   0010FC                     i2u185_41:
  4911   0010FC  EF94  F008         	goto	i2l625
  4912   001100                     i2u185_40:
  4913   001100  BA81               	btfsc	129,5,c	;volatile
  4914   001102  EF85  F008         	goto	i2u186_41
  4915   001106  EF87  F008         	goto	i2u186_40
  4916   00110A                     i2u186_41:
  4917   00110A  EF94  F008         	goto	i2l625
  4918   00110E                     i2u186_40:
  4919   00110E  0453               	decf	_RB5_flag^0,w,c	;volatile
  4920   001110  A4D8               	btfss	status,2,c
  4921   001112  EF8D  F008         	goto	i2u187_41
  4922   001116  EF8F  F008         	goto	i2u187_40
  4923   00111A                     i2u187_41:
  4924   00111A  EF94  F008         	goto	i2l625
  4925   00111E                     i2u187_40:
  4926   00111E                     
  4927                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 54:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 55:         RB5_flag = 0;
  4928   00111E  0E00               	movlw	0
  4929   001120  6E53               	movwf	_RB5_flag^0,c	;volatile
  4930   001122                     
  4931                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 56:         RB5_ISR(0);
  4932   001122  0E00               	movlw	0
  4933   001124  EC20  F012         	call	_RB5_ISR
  4934   001128                     i2l625:
  4935                           
  4936                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 59:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) && (GPIO_LOGIC_HIGH == PORTBbits.RB5) && (0 == RB5_flag))
  4937   001128  A6F2               	btfss	242,3,c	;volatile
  4938   00112A  EF99  F008         	goto	i2u188_41
  4939   00112E  EF9B  F008         	goto	i2u188_40
  4940   001132                     i2u188_41:
  4941   001132  EFB6  F008         	goto	i2l627
  4942   001136                     i2u188_40:
  4943   001136  A0F2               	btfss	242,0,c	;volatile
  4944   001138  EFA0  F008         	goto	i2u189_41
  4945   00113C  EFA2  F008         	goto	i2u189_40
  4946   001140                     i2u189_41:
  4947   001140  EFB6  F008         	goto	i2l627
  4948   001144                     i2u189_40:
  4949   001144  AA81               	btfss	129,5,c	;volatile
  4950   001146  EFA7  F008         	goto	i2u190_41
  4951   00114A  EFA9  F008         	goto	i2u190_40
  4952   00114E                     i2u190_41:
  4953   00114E  EFB6  F008         	goto	i2l627
  4954   001152                     i2u190_40:
  4955   001152  5053               	movf	_RB5_flag^0,w,c	;volatile
  4956   001154  A4D8               	btfss	status,2,c
  4957   001156  EFAF  F008         	goto	i2u191_41
  4958   00115A  EFB1  F008         	goto	i2u191_40
  4959   00115E                     i2u191_41:
  4960   00115E  EFB6  F008         	goto	i2l627
  4961   001162                     i2u191_40:
  4962   001162                     
  4963                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 60:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 61:         RB5_flag = 1;
  4964   001162  0E01               	movlw	1
  4965   001164  6E53               	movwf	_RB5_flag^0,c	;volatile
  4966   001166                     
  4967                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 62:         RB5_ISR(1);
  4968   001166  0E01               	movlw	1
  4969   001168  EC20  F012         	call	_RB5_ISR
  4970   00116C                     i2l627:
  4971                           
  4972                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 65:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) && (GPIO_LOGIC_LOW == PORTBbits.RB6) && (1 == RB6_flag))
  4973   00116C  A6F2               	btfss	242,3,c	;volatile
  4974   00116E  EFBB  F008         	goto	i2u192_41
  4975   001172  EFBD  F008         	goto	i2u192_40
  4976   001176                     i2u192_41:
  4977   001176  EFD8  F008         	goto	i2l629
  4978   00117A                     i2u192_40:
  4979   00117A  A0F2               	btfss	242,0,c	;volatile
  4980   00117C  EFC2  F008         	goto	i2u193_41
  4981   001180  EFC4  F008         	goto	i2u193_40
  4982   001184                     i2u193_41:
  4983   001184  EFD8  F008         	goto	i2l629
  4984   001188                     i2u193_40:
  4985   001188  BC81               	btfsc	129,6,c	;volatile
  4986   00118A  EFC9  F008         	goto	i2u194_41
  4987   00118E  EFCB  F008         	goto	i2u194_40
  4988   001192                     i2u194_41:
  4989   001192  EFD8  F008         	goto	i2l629
  4990   001196                     i2u194_40:
  4991   001196  0452               	decf	_RB6_flag^0,w,c	;volatile
  4992   001198  A4D8               	btfss	status,2,c
  4993   00119A  EFD1  F008         	goto	i2u195_41
  4994   00119E  EFD3  F008         	goto	i2u195_40
  4995   0011A2                     i2u195_41:
  4996   0011A2  EFD8  F008         	goto	i2l629
  4997   0011A6                     i2u195_40:
  4998   0011A6                     
  4999                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 66:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 67:         RB6_flag = 0;
  5000   0011A6  0E00               	movlw	0
  5001   0011A8  6E52               	movwf	_RB6_flag^0,c	;volatile
  5002   0011AA                     
  5003                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 68:         RB6_ISR(0);
  5004   0011AA  0E00               	movlw	0
  5005   0011AC  EC13  F012         	call	_RB6_ISR
  5006   0011B0                     i2l629:
  5007                           
  5008                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 71:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) && (GPIO_LOGIC_HIGH == PORTBbits.RB6) && (0 == RB6_flag))
  5009   0011B0  A6F2               	btfss	242,3,c	;volatile
  5010   0011B2  EFDD  F008         	goto	i2u196_41
  5011   0011B6  EFDF  F008         	goto	i2u196_40
  5012   0011BA                     i2u196_41:
  5013   0011BA  EFFA  F008         	goto	i2l631
  5014   0011BE                     i2u196_40:
  5015   0011BE  A0F2               	btfss	242,0,c	;volatile
  5016   0011C0  EFE4  F008         	goto	i2u197_41
  5017   0011C4  EFE6  F008         	goto	i2u197_40
  5018   0011C8                     i2u197_41:
  5019   0011C8  EFFA  F008         	goto	i2l631
  5020   0011CC                     i2u197_40:
  5021   0011CC  AC81               	btfss	129,6,c	;volatile
  5022   0011CE  EFEB  F008         	goto	i2u198_41
  5023   0011D2  EFED  F008         	goto	i2u198_40
  5024   0011D6                     i2u198_41:
  5025   0011D6  EFFA  F008         	goto	i2l631
  5026   0011DA                     i2u198_40:
  5027   0011DA  5052               	movf	_RB6_flag^0,w,c	;volatile
  5028   0011DC  A4D8               	btfss	status,2,c
  5029   0011DE  EFF3  F008         	goto	i2u199_41
  5030   0011E2  EFF5  F008         	goto	i2u199_40
  5031   0011E6                     i2u199_41:
  5032   0011E6  EFFA  F008         	goto	i2l631
  5033   0011EA                     i2u199_40:
  5034   0011EA                     
  5035                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 72:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 73:         RB6_flag = 1;
  5036   0011EA  0E01               	movlw	1
  5037   0011EC  6E52               	movwf	_RB6_flag^0,c	;volatile
  5038   0011EE                     
  5039                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 74:         RB6_ISR(1);
  5040   0011EE  0E01               	movlw	1
  5041   0011F0  EC13  F012         	call	_RB6_ISR
  5042   0011F4                     i2l631:
  5043                           
  5044                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 77:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) && (GPIO_LOGIC_LOW == PORTBbits.RB7) && (1 == RB7_flag))
  5045   0011F4  A6F2               	btfss	242,3,c	;volatile
  5046   0011F6  EFFF  F008         	goto	i2u200_41
  5047   0011FA  EF01  F009         	goto	i2u200_40
  5048   0011FE                     i2u200_41:
  5049   0011FE  EF1C  F009         	goto	i2l633
  5050   001202                     i2u200_40:
  5051   001202  A0F2               	btfss	242,0,c	;volatile
  5052   001204  EF06  F009         	goto	i2u201_41
  5053   001208  EF08  F009         	goto	i2u201_40
  5054   00120C                     i2u201_41:
  5055   00120C  EF1C  F009         	goto	i2l633
  5056   001210                     i2u201_40:
  5057   001210  BE81               	btfsc	129,7,c	;volatile
  5058   001212  EF0D  F009         	goto	i2u202_41
  5059   001216  EF0F  F009         	goto	i2u202_40
  5060   00121A                     i2u202_41:
  5061   00121A  EF1C  F009         	goto	i2l633
  5062   00121E                     i2u202_40:
  5063   00121E  0451               	decf	_RB7_flag^0,w,c	;volatile
  5064   001220  A4D8               	btfss	status,2,c
  5065   001222  EF15  F009         	goto	i2u203_41
  5066   001226  EF17  F009         	goto	i2u203_40
  5067   00122A                     i2u203_41:
  5068   00122A  EF1C  F009         	goto	i2l633
  5069   00122E                     i2u203_40:
  5070   00122E                     
  5071                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 78:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 79:         RB7_flag = 0;
  5072   00122E  0E00               	movlw	0
  5073   001230  6E51               	movwf	_RB7_flag^0,c	;volatile
  5074   001232                     
  5075                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 80:         RB7_ISR(0);
  5076   001232  0E00               	movlw	0
  5077   001234  EC06  F012         	call	_RB7_ISR
  5078   001238                     i2l633:
  5079                           
  5080                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 83:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) && (GPIO_LOGIC_HIGH == PORTBbits.RB7) && (0 == RB7_flag))
  5081   001238  A6F2               	btfss	242,3,c	;volatile
  5082   00123A  EF21  F009         	goto	i2u204_41
  5083   00123E  EF23  F009         	goto	i2u204_40
  5084   001242                     i2u204_41:
  5085   001242  EF3E  F009         	goto	i2l636
  5086   001246                     i2u204_40:
  5087   001246  A0F2               	btfss	242,0,c	;volatile
  5088   001248  EF28  F009         	goto	i2u205_41
  5089   00124C  EF2A  F009         	goto	i2u205_40
  5090   001250                     i2u205_41:
  5091   001250  EF3E  F009         	goto	i2l636
  5092   001254                     i2u205_40:
  5093   001254  AE81               	btfss	129,7,c	;volatile
  5094   001256  EF2F  F009         	goto	i2u206_41
  5095   00125A  EF31  F009         	goto	i2u206_40
  5096   00125E                     i2u206_41:
  5097   00125E  EF3E  F009         	goto	i2l636
  5098   001262                     i2u206_40:
  5099   001262  5051               	movf	_RB7_flag^0,w,c	;volatile
  5100   001264  A4D8               	btfss	status,2,c
  5101   001266  EF37  F009         	goto	i2u207_41
  5102   00126A  EF39  F009         	goto	i2u207_40
  5103   00126E                     i2u207_41:
  5104   00126E  EF3E  F009         	goto	i2l636
  5105   001272                     i2u207_40:
  5106   001272                     
  5107                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 84:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 85:         RB7_flag = 1;
  5108   001272  0E01               	movlw	1
  5109   001274  6E51               	movwf	_RB7_flag^0,c	;volatile
  5110   001276                     
  5111                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 86:         RB7_ISR(1);
  5112   001276  0E01               	movlw	1
  5113   001278  EC06  F012         	call	_RB7_ISR
  5114   00127C                     i2l636:
  5115   00127C  927D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5116   00127E  0011               	retfie		f
  5117   001280                     __end_of_InterruptManagerHigh:
  5118                           	callstack 0
  5119                           
  5120 ;; *************** function _RB7_ISR *****************
  5121 ;; Defined at:
  5122 ;;		line 306 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  5123 ;; Parameters:    Size  Location     Type
  5124 ;;  source          1    wreg     unsigned char 
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;  source          1    0[COMRAM] unsigned char 
  5127 ;; Return value:  Size  Location     Type
  5128 ;;                  1    wreg      void 
  5129 ;; Registers used:
  5130 ;;		wreg, status,2, status,0
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5137 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5139 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5140 ;;Total ram usage:        1 bytes
  5141 ;; Hardware stack levels used: 1
  5142 ;; This function calls:
  5143 ;;		Nothing
  5144 ;; This function is called by:
  5145 ;;		_InterruptManagerHigh
  5146 ;; This function uses a non-reentrant model
  5147 ;;
  5148                           
  5149                           	psect	text36
  5150   00240C                     __ptext36:
  5151                           	callstack 0
  5152   00240C                     _RB7_ISR:
  5153                           	callstack 21
  5154                           
  5155                           ;incstack = 0
  5156                           ;RB7_ISR@source stored from wreg
  5157   00240C  6E01               	movwf	RB7_ISR@source^0,c
  5158   00240E                     
  5159                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 306: void RB7_ISR(uint8 source);MCAL_La
      +                          yer/Interrupt/mcal_external_interrupt.c: 307: {;MCAL_Layer/Interrupt/mcal_external_inter
      +                          rupt.c: 309:     (INTCONbits.RBIF = 0);
  5160   00240E  90F2               	bcf	242,0,c	;volatile
  5161   002410                     
  5162                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 313:     if(0 == source)
  5163   002410  5001               	movf	RB7_ISR@source^0,w,c
  5164   002412  A4D8               	btfss	status,2,c
  5165   002414  EF0E  F012         	goto	i2u94_41
  5166   002418  EF10  F012         	goto	i2u94_40
  5167   00241C                     i2u94_41:
  5168   00241C  EF12  F012         	goto	i2l2392
  5169   002420                     i2u94_40:
  5170   002420  EF12  F012         	goto	i2l772
  5171   002424                     i2l2392:
  5172   002424                     i2l772:
  5173   002424  0012               	return		;funcret
  5174   002426                     __end_of_RB7_ISR:
  5175                           	callstack 0
  5176                           
  5177 ;; *************** function _RB6_ISR *****************
  5178 ;; Defined at:
  5179 ;;		line 283 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;  source          1    wreg     unsigned char 
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;  source          1    0[COMRAM] unsigned char 
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  1    wreg      void 
  5186 ;; Registers used:
  5187 ;;		wreg, status,2, status,0
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5194 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5196 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;Total ram usage:        1 bytes
  5198 ;; Hardware stack levels used: 1
  5199 ;; This function calls:
  5200 ;;		Nothing
  5201 ;; This function is called by:
  5202 ;;		_InterruptManagerHigh
  5203 ;; This function uses a non-reentrant model
  5204 ;;
  5205                           
  5206                           	psect	text37
  5207   002426                     __ptext37:
  5208                           	callstack 0
  5209   002426                     _RB6_ISR:
  5210                           	callstack 21
  5211                           
  5212                           ;incstack = 0
  5213                           ;RB6_ISR@source stored from wreg
  5214   002426  6E01               	movwf	RB6_ISR@source^0,c
  5215   002428                     
  5216                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 283: void RB6_ISR(uint8 source);MCAL_La
      +                          yer/Interrupt/mcal_external_interrupt.c: 284: {;MCAL_Layer/Interrupt/mcal_external_inter
      +                          rupt.c: 286:     (INTCONbits.RBIF = 0);
  5217   002428  90F2               	bcf	242,0,c	;volatile
  5218   00242A                     
  5219                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 290:     if(0 == source)
  5220   00242A  5001               	movf	RB6_ISR@source^0,w,c
  5221   00242C  A4D8               	btfss	status,2,c
  5222   00242E  EF1B  F012         	goto	i2u93_41
  5223   002432  EF1D  F012         	goto	i2u93_40
  5224   002436                     i2u93_41:
  5225   002436  EF1F  F012         	goto	i2l2378
  5226   00243A                     i2u93_40:
  5227   00243A  EF1F  F012         	goto	i2l761
  5228   00243E                     i2l2378:
  5229   00243E                     i2l761:
  5230   00243E  0012               	return		;funcret
  5231   002440                     __end_of_RB6_ISR:
  5232                           	callstack 0
  5233                           
  5234 ;; *************** function _RB5_ISR *****************
  5235 ;; Defined at:
  5236 ;;		line 260 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  5237 ;; Parameters:    Size  Location     Type
  5238 ;;  source          1    wreg     unsigned char 
  5239 ;; Auto vars:     Size  Location     Type
  5240 ;;  source          1    0[COMRAM] unsigned char 
  5241 ;; Return value:  Size  Location     Type
  5242 ;;                  1    wreg      void 
  5243 ;; Registers used:
  5244 ;;		wreg, status,2, status,0
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 0/0
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5251 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5253 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5254 ;;Total ram usage:        1 bytes
  5255 ;; Hardware stack levels used: 1
  5256 ;; This function calls:
  5257 ;;		Nothing
  5258 ;; This function is called by:
  5259 ;;		_InterruptManagerHigh
  5260 ;; This function uses a non-reentrant model
  5261 ;;
  5262                           
  5263                           	psect	text38
  5264   002440                     __ptext38:
  5265                           	callstack 0
  5266   002440                     _RB5_ISR:
  5267                           	callstack 21
  5268                           
  5269                           ;incstack = 0
  5270                           ;RB5_ISR@source stored from wreg
  5271   002440  6E01               	movwf	RB5_ISR@source^0,c
  5272   002442                     
  5273                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 260: void RB5_ISR(uint8 source);MCAL_La
      +                          yer/Interrupt/mcal_external_interrupt.c: 261: {;MCAL_Layer/Interrupt/mcal_external_inter
      +                          rupt.c: 263:     (INTCONbits.RBIF = 0);
  5274   002442  90F2               	bcf	242,0,c	;volatile
  5275   002444                     
  5276                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 267:     if(0 == source)
  5277   002444  5001               	movf	RB5_ISR@source^0,w,c
  5278   002446  A4D8               	btfss	status,2,c
  5279   002448  EF28  F012         	goto	i2u92_41
  5280   00244C  EF2A  F012         	goto	i2u92_40
  5281   002450                     i2u92_41:
  5282   002450  EF2C  F012         	goto	i2l2364
  5283   002454                     i2u92_40:
  5284   002454  EF2C  F012         	goto	i2l750
  5285   002458                     i2l2364:
  5286   002458                     i2l750:
  5287   002458  0012               	return		;funcret
  5288   00245A                     __end_of_RB5_ISR:
  5289                           	callstack 0
  5290                           
  5291 ;; *************** function _RB4_ISR *****************
  5292 ;; Defined at:
  5293 ;;		line 237 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  5294 ;; Parameters:    Size  Location     Type
  5295 ;;  source          1    wreg     unsigned char 
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;  source          1    0[COMRAM] unsigned char 
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  1    wreg      void 
  5300 ;; Registers used:
  5301 ;;		wreg, status,2, status,0
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5308 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5310 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5311 ;;Total ram usage:        1 bytes
  5312 ;; Hardware stack levels used: 1
  5313 ;; This function calls:
  5314 ;;		Nothing
  5315 ;; This function is called by:
  5316 ;;		_InterruptManagerHigh
  5317 ;; This function uses a non-reentrant model
  5318 ;;
  5319                           
  5320                           	psect	text39
  5321   00245A                     __ptext39:
  5322                           	callstack 0
  5323   00245A                     _RB4_ISR:
  5324                           	callstack 21
  5325                           
  5326                           ;incstack = 0
  5327                           ;RB4_ISR@source stored from wreg
  5328   00245A  6E01               	movwf	RB4_ISR@source^0,c
  5329   00245C                     
  5330                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 237: void RB4_ISR(uint8 source);MCAL_La
      +                          yer/Interrupt/mcal_external_interrupt.c: 238: {;MCAL_Layer/Interrupt/mcal_external_inter
      +                          rupt.c: 240:     (INTCONbits.RBIF = 0);
  5331   00245C  90F2               	bcf	242,0,c	;volatile
  5332   00245E                     
  5333                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 244:     if(0 == source)
  5334   00245E  5001               	movf	RB4_ISR@source^0,w,c
  5335   002460  A4D8               	btfss	status,2,c
  5336   002462  EF35  F012         	goto	i2u91_41
  5337   002466  EF37  F012         	goto	i2u91_40
  5338   00246A                     i2u91_41:
  5339   00246A  EF39  F012         	goto	i2l2350
  5340   00246E                     i2u91_40:
  5341   00246E  EF39  F012         	goto	i2l739
  5342   002472                     i2l2350:
  5343   002472                     i2l739:
  5344   002472  0012               	return		;funcret
  5345   002474                     __end_of_RB4_ISR:
  5346                           	callstack 0
  5347                           
  5348 ;; *************** function _INT0_ISR *****************
  5349 ;; Defined at:
  5350 ;;		line 190 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;		None
  5353 ;; Auto vars:     Size  Location     Type
  5354 ;;		None
  5355 ;; Return value:  Size  Location     Type
  5356 ;;                  1    wreg      void 
  5357 ;; Registers used:
  5358 ;;		None
  5359 ;; Tracked objects:
  5360 ;;		On entry : 0/0
  5361 ;;		On exit  : 0/0
  5362 ;;		Unchanged: 0/0
  5363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5368 ;;Total ram usage:        0 bytes
  5369 ;; Hardware stack levels used: 1
  5370 ;; This function calls:
  5371 ;;		Nothing
  5372 ;; This function is called by:
  5373 ;;		_InterruptManagerHigh
  5374 ;; This function uses a non-reentrant model
  5375 ;;
  5376                           
  5377                           	psect	text40
  5378   0024B0                     __ptext40:
  5379                           	callstack 0
  5380   0024B0                     _INT0_ISR:
  5381                           	callstack 21
  5382   0024B0                     
  5383                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 193:     (INTCONbits.INT0IF = 0);
  5384   0024B0  92F2               	bcf	242,1,c	;volatile
  5385   0024B2  0012               	return		;funcret
  5386   0024B4                     __end_of_INT0_ISR:
  5387                           	callstack 0
  5388                           
  5389                           	psect	rparam
  5390   000000                     
  5391                           	psect	temp
  5392   00007D                     btemp:
  5393                           	callstack 0
  5394   00007D                     	ds	1
  5395   000000                     int$flags	set	btemp
  5396   000000                     wtemp8	set	btemp+1
  5397   000000                     ttemp5	set	btemp+1
  5398   000000                     ttemp6	set	btemp+4
  5399   000000                     ttemp7	set	btemp+8
  5400                           
  5401                           	psect	config
  5402                           
  5403                           ; Padding undefined space
  5404   300000                     	org	3145728
  5405   300000  FF                 	db	255
  5406                           
  5407                           ;Config register CONFIG1H @ 0x300001
  5408                           ;	Oscillator Selection bits
  5409                           ;	OSC = HS, HS oscillator
  5410                           ;	Fail-Safe Clock Monitor Enable bit
  5411                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5412                           ;	Internal/External Oscillator Switchover bit
  5413                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5414   300001                     	org	3145729
  5415   300001  02                 	db	2
  5416                           
  5417                           ;Config register CONFIG2L @ 0x300002
  5418                           ;	Power-up Timer Enable bit
  5419                           ;	PWRT = OFF, PWRT disabled
  5420                           ;	Brown-out Reset Enable bits
  5421                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5422                           ;	Brown Out Reset Voltage bits
  5423                           ;	BORV = 1, 
  5424   300002                     	org	3145730
  5425   300002  09                 	db	9
  5426                           
  5427                           ;Config register CONFIG2H @ 0x300003
  5428                           ;	Watchdog Timer Enable bit
  5429                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5430                           ;	Watchdog Timer Postscale Select bits
  5431                           ;	WDTPS = 32768, 1:32768
  5432   300003                     	org	3145731
  5433   300003  1E                 	db	30
  5434                           
  5435                           ; Padding undefined space
  5436   300004                     	org	3145732
  5437   300004  FF                 	db	255
  5438                           
  5439                           ;Config register CONFIG3H @ 0x300005
  5440                           ;	CCP2 MUX bit
  5441                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5442                           ;	PORTB A/D Enable bit
  5443                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5444                           ;	Low-Power Timer1 Oscillator Enable bit
  5445                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5446                           ;	MCLR Pin Enable bit
  5447                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5448   300005                     	org	3145733
  5449   300005  81                 	db	129
  5450                           
  5451                           ;Config register CONFIG4L @ 0x300006
  5452                           ;	Stack Full/Underflow Reset Enable bit
  5453                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5454                           ;	Single-Supply ICSP Enable bit
  5455                           ;	LVP = OFF, Single-Supply ICSP disabled
  5456                           ;	Extended Instruction Set Enable bit
  5457                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5458                           ;	Background Debugger Enable bit
  5459                           ;	DEBUG = 0x1, unprogrammed default
  5460   300006                     	org	3145734
  5461   300006  81                 	db	129
  5462                           
  5463                           ; Padding undefined space
  5464   300007                     	org	3145735
  5465   300007  FF                 	db	255
  5466                           
  5467                           ;Config register CONFIG5L @ 0x300008
  5468                           ;	Code Protection bit
  5469                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5470                           ;	Code Protection bit
  5471                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5472                           ;	Code Protection bit
  5473                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5474                           ;	Code Protection bit
  5475                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5476   300008                     	org	3145736
  5477   300008  0F                 	db	15
  5478                           
  5479                           ;Config register CONFIG5H @ 0x300009
  5480                           ;	Boot Block Code Protection bit
  5481                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5482                           ;	Data EEPROM Code Protection bit
  5483                           ;	CPD = OFF, Data EEPROM not code-protected
  5484   300009                     	org	3145737
  5485   300009  C0                 	db	192
  5486                           
  5487                           ;Config register CONFIG6L @ 0x30000A
  5488                           ;	Write Protection bit
  5489                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5490                           ;	Write Protection bit
  5491                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5492                           ;	Write Protection bit
  5493                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5494                           ;	Write Protection bit
  5495                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5496   30000A                     	org	3145738
  5497   30000A  0F                 	db	15
  5498                           
  5499                           ;Config register CONFIG6H @ 0x30000B
  5500                           ;	Configuration Register Write Protection bit
  5501                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5502                           ;	Boot Block Write Protection bit
  5503                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5504                           ;	Data EEPROM Write Protection bit
  5505                           ;	WRTD = OFF, Data EEPROM not write-protected
  5506   30000B                     	org	3145739
  5507   30000B  E0                 	db	224
  5508                           
  5509                           ;Config register CONFIG7L @ 0x30000C
  5510                           ;	Table Read Protection bit
  5511                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5512                           ;	Table Read Protection bit
  5513                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5514                           ;	Table Read Protection bit
  5515                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5516                           ;	Table Read Protection bit
  5517                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5518   30000C                     	org	3145740
  5519   30000C  0F                 	db	15
  5520                           
  5521                           ;Config register CONFIG7H @ 0x30000D
  5522                           ;	Boot Block Table Read Protection bit
  5523                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5524   30000D                     	org	3145741
  5525   30000D  40                 	db	64
  5526                           tosu	equ	0xFFF
  5527                           tosh	equ	0xFFE
  5528                           tosl	equ	0xFFD
  5529                           stkptr	equ	0xFFC
  5530                           pclatu	equ	0xFFB
  5531                           pclath	equ	0xFFA
  5532                           pcl	equ	0xFF9
  5533                           tblptru	equ	0xFF8
  5534                           tblptrh	equ	0xFF7
  5535                           tblptrl	equ	0xFF6
  5536                           tablat	equ	0xFF5
  5537                           prodh	equ	0xFF4
  5538                           prodl	equ	0xFF3
  5539                           indf0	equ	0xFEF
  5540                           postinc0	equ	0xFEE
  5541                           postdec0	equ	0xFED
  5542                           preinc0	equ	0xFEC
  5543                           plusw0	equ	0xFEB
  5544                           fsr0h	equ	0xFEA
  5545                           fsr0l	equ	0xFE9
  5546                           wreg	equ	0xFE8
  5547                           indf1	equ	0xFE7
  5548                           postinc1	equ	0xFE6
  5549                           postdec1	equ	0xFE5
  5550                           preinc1	equ	0xFE4
  5551                           plusw1	equ	0xFE3
  5552                           fsr1h	equ	0xFE2
  5553                           fsr1l	equ	0xFE1
  5554                           bsr	equ	0xFE0
  5555                           indf2	equ	0xFDF
  5556                           postinc2	equ	0xFDE
  5557                           postdec2	equ	0xFDD
  5558                           preinc2	equ	0xFDC
  5559                           plusw2	equ	0xFDB
  5560                           fsr2h	equ	0xFDA
  5561                           fsr2l	equ	0xFD9
  5562                           status	equ	0xFD8

Data Sizes:
    Strings     40
    Constant    16
    Data        70
    BSS         104
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     52     124
    BANK0           128      0     102
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    adc_GetConversion_Blocking@_adc	PTR const struct . size(1) Largest target is 4
		 -> adc1(COMRAM[4]), 

    adc_GetConversion_Blocking@conversion_result	PTR unsigned short  size(1) Largest target is 2
		 -> adc_res_1(COMRAM[2]), adc_res_2(COMRAM[2]), adc_res_3(COMRAM[2]), adc_res_4(COMRAM[2]), 

    adc_GetConversionResult@_adc	PTR const struct . size(1) Largest target is 4
		 -> adc1(COMRAM[4]), 

    adc_GetConversionResult@conversion_result	PTR unsigned short  size(1) Largest target is 2
		 -> adc_res_1(COMRAM[2]), adc_res_2(COMRAM[2]), adc_res_3(COMRAM[2]), adc_res_4(COMRAM[2]), 

    adc_Init@_adc	PTR const struct . size(1) Largest target is 4
		 -> adc1(COMRAM[4]), 

    adc_SelectChannel@_adc	PTR const struct . size(1) Largest target is 4
		 -> adc1(COMRAM[4]), 

    adc_StartConversion@_adc	PTR const struct . size(1) Largest target is 4
		 -> adc1(COMRAM[4]), 

    configure_voltage_reference@_adc	PTR const struct . size(1) Largest target is 4
		 -> adc1(COMRAM[4]), 

    convert_uint16_to_string@str	PTR unsigned char  size(1) Largest target is 6
		 -> adc_res_1_txt(BANK0[6]), adc_res_2_txt(BANK0[6]), adc_res_3_txt(BANK0[6]), adc_res_4_txt(BANK0[6]), 

    ext_interrupt_INTx_Clear_Flag@int_obj$ext_interrupt_INTx_handler	PTR FTN()void  size(2) Largest target is 0

    ext_interrupt_INTx_Disable@int_obj$ext_interrupt_INTx_handler	PTR FTN()void  size(2) Largest target is 0

    ext_interrupt_INTx_Edge_Init@int_obj$ext_interrupt_INTx_handler	PTR FTN()void  size(2) Largest target is 0

    ext_interrupt_INTx_Enable@int_obj$ext_interrupt_INTx_handler	PTR FTN()void  size(2) Largest target is 0

    ext_interrupt_INTx_Init@int_obj$ext_interrupt_INTx_handler	PTR FTN()void  size(2) Largest target is 0

    ext_interrupt_INTx_Priority_Init@int_obj$ext_interrupt_INTx_handler	PTR FTN()void  size(2) Largest target is 0

    ext_interrupt_INTx_SetInterruptHandler@int_obj$ext_interrupt_INTx_handler	PTR FTN()void  size(2) Largest target is 0

    ext_interrupt_RBx_Init@int_obj$ext_interrupt_RBx_high_handler	PTR FTN()void  size(2) Largest target is 0

    ext_interrupt_RBx_Init@int_obj$ext_interrupt_RBx_low_handler	PTR FTN()void  size(2) Largest target is 0

    ext_interrupt_RBx_Priority_Init@int_obj$ext_interrupt_RBx_high_handler	PTR FTN()void  size(2) Largest target is 0

    ext_interrupt_RBx_Priority_Init@int_obj$ext_interrupt_RBx_low_handler	PTR FTN()void  size(2) Largest target is 0

    ext_interrupt_RBx_SetInterruptHandler@int_obj$ext_interrupt_RBx_high_handler	PTR FTN()void  size(2) Largest target is 0

    ext_interrupt_RBx_SetInterruptHandler@int_obj$ext_interrupt_RBx_low_handler	PTR FTN()void  size(2) Largest target is 0

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_initialize@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), lcd1$lcd_data(COMRAM[4]), led_initialize@pin(COMRAM[1]), relay_initialize@pin(COMRAM[1]), 

    gpio_pin_initialize@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), lcd1$lcd_data(COMRAM[4]), led_initialize@pin(COMRAM[1]), relay_initialize@pin(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), lcd1$lcd_data(COMRAM[4]), led_initialize@pin(COMRAM[1]), led_turn_off@pin(COMRAM[1]), 
		 -> led_turn_on@pin(COMRAM[1]), relay_initialize@pin(COMRAM[1]), relay_turn_off@pin(COMRAM[1]), relay_turn_on@pin(COMRAM[1]), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlll[1]), LATB(BITBIGSFRllh[1]), LATC(BITBIGSFRllh[1]), LATD(BITBIGSFRllh[1]), 
		 -> LATE(BITBIGSFRllh[1]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_string@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_string@str	PTR unsigned char  size(2) Largest target is 9
		 -> adc_res_1_txt(BANK0[6]), adc_res_2_txt(BANK0[6]), adc_res_3_txt(BANK0[6]), adc_res_4_txt(BANK0[6]), 
		 -> STR_4(CODE[9]), STR_5(CODE[7]), STR_6(CODE[7]), STR_7(CODE[7]), 
		 -> STR_8(CODE[7]), 

    lcd_4bit_send_string_at_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_string_at_pos@str	PTR unsigned char  size(2) Largest target is 9
		 -> adc_res_1_txt(BANK0[6]), adc_res_2_txt(BANK0[6]), adc_res_3_txt(BANK0[6]), adc_res_4_txt(BANK0[6]), 
		 -> STR_4(CODE[9]), STR_5(CODE[7]), STR_6(CODE[7]), STR_7(CODE[7]), 
		 -> STR_8(CODE[7]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    memset@dest	PTR void  size(1) Largest target is 6
		 -> adc_res_1_txt(BANK0[6]), adc_res_2_txt(BANK0[6]), adc_res_3_txt(BANK0[6]), adc_res_4_txt(BANK0[6]), 

    memset@p	PTR unsigned char  size(1) Largest target is 6
		 -> adc_res_1_txt(BANK0[6]), adc_res_2_txt(BANK0[6]), adc_res_3_txt(BANK0[6]), adc_res_4_txt(BANK0[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlll[1]), PORTB(BITBIGSFRlll[1]), PORTC(BITBIGSFRlll[1]), PORTD(BITBIGSFRlll[1]), 
		 -> PORTE(BITBIGSFRlll[1]), 

    RB4_High_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_Low_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_High_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_Low_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_High_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_Low_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_High_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_Low_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1498$ext_interrupt_INTx_handler	PTR FTN()void  size(2) Largest target is 0

    S1540$ext_interrupt_RBx_high_handler	PTR FTN()void  size(2) Largest target is 0

    S1540$ext_interrupt_RBx_low_handler	PTR FTN()void  size(2) Largest target is 0

    S2460$buffer	PTR unsigned char  size(2) Largest target is 0

    S2460$source	PTR const unsigned char  size(2) Largest target is 0

    select_result_format@_adc	PTR const struct . size(1) Largest target is 4
		 -> adc1(COMRAM[4]), 

    sp__memset	PTR void  size(1) Largest target is 6
		 -> adc_res_1_txt(BANK0[6]), adc_res_2_txt(BANK0[6]), adc_res_3_txt(BANK0[6]), adc_res_4_txt(BANK0[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 6
		 -> adc_res_1_txt(BANK0[6]), adc_res_2_txt(BANK0[6]), adc_res_3_txt(BANK0[6]), adc_res_4_txt(BANK0[6]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlll[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(ABS[1]), 
		 -> TRISE(ABS[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_convert_uint16_to_string
    _lcd_4bit_send_string_at_pos->_lcd_4bit_send_string
    _lcd_4bit_send_string_at_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_string->_lcd_4bit_send_char_data
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _convert_uint16_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _application_initialize->_ecu_layer_initialize
    _ecu_layer_initialize->_lcd_4bit_initialize
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _gpio_pin_initialize->_gpio_pin_write_logic
    _adc_Init->_adc_SelectChannel
    _adc_GetConversion_Blocking->_adc_SelectChannel
    _adc_SelectChannel->_adc_input_channel_port_configure

Critical Paths under _InterruptManagerLow in COMRAM

    None.

Critical Paths under _InterruptManagerHigh in COMRAM

    _InterruptManagerHigh->_RB4_ISR
    _InterruptManagerHigh->_RB5_ISR
    _InterruptManagerHigh->_RB6_ISR
    _InterruptManagerHigh->_RB7_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManagerLow in BANK0

    None.

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManagerLow in BANK1

    None.

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerLow in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerLow in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerLow in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerLow in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManagerLow in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManagerLow in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManagerLow in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManagerLow in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManagerLow in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManagerLow in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManagerLow in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManagerLow in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManagerLow in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManagerLow in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   86215
                                             50 COMRAM     2     2      0
         _adc_GetConversion_Blocking
             _application_initialize
           _convert_uint16_to_string
              _lcd_4bit_send_command
        _lcd_4bit_send_string_at_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_at_pos                          6     1      5   36763
                                             23 COMRAM     6     1      5
               _lcd_4bit_send_string
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  4     1      3   17968
                                             19 COMRAM     4     1      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_string                                 4     1      3   15879
                                             19 COMRAM     4     1      3
            _lcd_4bit_send_char_data
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_char_data                              3     1      2   15591
                                             16 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _convert_uint16_to_string                             4     1      3    5091
                                             46 COMRAM     4     1      3
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    3591
                                             27 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    2936
                                             23 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3    2586
                                             12 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              2 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              8 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     1      5     780
                                              2 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               1     1      0   25129
                           _adc_Init
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 1     1      0   24113
                                             23 COMRAM     1     1      0
                _lcd_4bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  4     3      1   24089
                                             19 COMRAM     4     3      1
                _gpio_pin_initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   17263
                                             16 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       6     4      2    5270
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          2     1      1    4876
                                             10 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  3     2      1    6359
                                             10 COMRAM     3     2      1
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    4480
                                              2 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        7     6      1     581
                                              2 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (2) _adc_Init                                             3     2      1    1013
                                              9 COMRAM     3     2      1
                  _adc_SelectChannel
        _configure_voltage_reference
               _select_result_format
 ---------------------------------------------------------------------------------
 (3) _select_result_format                                 2     1      1     166
                                              2 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _configure_voltage_reference                          2     1      1     166
                                              2 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _adc_GetConversion_Blocking                           4     1      3    1969
                                              9 COMRAM     4     1      3
            _adc_GetConversionResult
                  _adc_SelectChannel
                _adc_StartConversion
 ---------------------------------------------------------------------------------
 (2) _adc_StartConversion                                  2     1      1     122
                                              2 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _adc_SelectChannel                                    4     2      2     424
                                              5 COMRAM     4     2      2
   _adc_input_channel_port_configure
 ---------------------------------------------------------------------------------
 (4) _adc_input_channel_port_configure                     4     4      0      30
                                              2 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _adc_GetConversionResult                              6     4      2     330
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptManagerLow                                  1     1      0       0
                                              1 COMRAM     1     1      0
                           _INT1_ISR
                           _INT2_ISR
 ---------------------------------------------------------------------------------
 (8) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _InterruptManagerHigh                                 0     0      0     120
                           _INT0_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (10) _RB7_ISR                                             1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _RB6_ISR                                             1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _RB5_ISR                                             1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _RB4_ISR                                             1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _INT0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_GetConversion_Blocking
     _adc_GetConversionResult
     _adc_SelectChannel
       _adc_input_channel_port_configure
     _adc_StartConversion
   _application_initialize
     _adc_Init
       _adc_SelectChannel
       _configure_voltage_reference
       _select_result_format
     _ecu_layer_initialize
       _lcd_4bit_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send_enable_signal
             _gpio_pin_write_logic
           _lcd_send_4bits
             _gpio_pin_write_logic
   _convert_uint16_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _lcd_4bit_send_command
   _lcd_4bit_send_string_at_pos
     _lcd_4bit_send_string
       _lcd_4bit_send_char_data
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_signal
         _lcd_send_4bits
     _lcd_4bit_set_cursor
       _lcd_4bit_send_command

 _InterruptManagerLow (ROOT)
   _INT1_ISR
   _INT2_ISR

 _InterruptManagerHigh (ROOT)
   _INT0_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      44        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      66       5       79.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     34      7C       1       98.4%
BITBIGSFRhhllh      1F      0       0      38        0.0%
BITBIGSFRlhhh       15      0       0      40        0.0%
BITBIGSFRlhhll       F      0       0      41        0.0%
BITBIGSFRhhh         D      0       0      37        0.0%
BITBIGSFRhhlll       B      0       0      39        0.0%
BITBIGSFRllh         4      0       0      42        0.0%
BITBIGSFRlll         4      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E2      12        0.0%
DATA                 0      0      E2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Sep 12 01:50:56 2024

                            ?_lcd_send_4bits 000B                                 ___awdiv@sign 0008  
                                         bsr 0FE0                        ??_InterruptManagerLow 0002  
                                        l113 21CE                                          l114 21D0  
                                        l131 1D9C                                          l108 1950  
                                        l132 1D9E                                          l109 1952  
                                        l213 226A                                          l230 22E8  
                                        l214 226C                                          l118 2172  
                                        l231 22EA                                          l119 2174  
                                        l136 221E                                          l225 2058  
                                        l137 2220                                          l226 205A  
                                        l242 1E34                                          l411 1BA8  
                                        l243 1E36                                          l412 1BAA  
                                        l420 20BA                                          l416 2094  
                                        l354 24A6                                          l419 20B8  
                                        l445 210C                                          l454 1F88  
                                        l382 1EB6                                          l439 1A2E  
                                        l447 2116                                          l383 1EB8  
                                        l527 186A                                          l392 2320  
                                        l456 1F94                                          l448 2118  
                                        l528 186C                                          l544 1738  
                                        l560 1F32                                          l393 2322  
                                        l457 1F96                                          l545 173A  
                                        l397 2408                                          l398 240A  
                                        l559 1F30                                          l935 2498  
        __end_of_configure_voltage_reference 1F98                  _configure_voltage_reference 1F34  
                                        _abs 2358                       ??_InterruptManagerHigh 0002  
                                        _ret 0071          __end_of_lcd_4bit_send_enable_signal 22EC  
                _lcd_4bit_send_enable_signal 22AE                                 ___awmod@sign 0008  
                        led_initialize@F3062 005C                        relay_initialize@F3060 0058  
                                        wreg 0FE8                     _RB4_Low_InterruptHandler 0047  
                lcd_send_4bits@_data_command 000C                     _RB7_Low_InterruptHandler 003B  
                  ?_convert_uint16_to_string 002F                              __end_of_RB4_ISR 2474  
                            __end_of_RB5_ISR 245A                              __end_of_RB6_ISR 2440  
                            __end_of_RB7_ISR 2426                                         ?_abs 0009  
                                       l4000 1E84                                         l1192 1C5A  
                                       l4002 1E9A                                         l1179 1AF2  
                                       l4020 1AF4                                         l4012 23EA  
                                       l4004 1EA2                                         l4030 1B6E  
                                       l4022 1B08                                         l4014 23FE  
                                       l4006 1EAC                                         l4024 1B18  
                                       l4016 2404                                         l4008 1EB2  
                                       l1632 2356                                         l4112 2222  
                                       l1625 23BA                                         l4026 1B30  
                                       l4034 1BA4                                         l4130 20B4  
                                       l4122 205C                                         l1706 24B4  
                                       l4114 2236                                         l4050 21E2  
                                       l4028 1B56                                         l4124 206C  
                                       l4116 224E                                         l4052 21F4  
                                       l4126 207C                                         l3510 160C  
                                       l4134 248C                                         l1670 143E  
                                       l4118 2266                                         l4054 2204  
                                       l4128 20A2                                         l3520 16B6  
                                       l3512 1628                                         l4136 248C  
                                       l3600 1A68                                         l1680 2372  
                                       l4056 221A                                         l4048 21D2  
                                       l3514 1648                                         l3522 1706  
                                       l4138 2490                                         l3610 1AA0  
                                       l3602 1A70                                         l1683 238A  
                                       l3540 176C                                         l3524 170E  
                                       l3508 15F8                                         l3700 21CA  
                                       l3620 1ACC                                         l3612 1AA6  
                                       l3604 1A82                                         l1676 22AC  
                                       l3710 1966                                         l3550 183E  
                                       l3518 1660                                         l3614 1ABC  
                                       l3606 1A8A                                         l3622 1AD2  
                                       l3630 1BAC                                         l1695 1D04  
                                       l3720 1984                                         l3712 196C  
                                       l3704 1956                                         l3544 1790  
                                       l3536 173C                                         l3800 189A  
                                       l3624 1AE2                                         l3616 1AC4  
                                       l3608 1A92                                         l3640 1BD8  
                                       l3632 1BB0                                         l3730 19A2  
                                       l3722 198A                                         l3714 1972  
                                       l3706 195A                                         l3546 17E6  
                                       l3538 1750                                         l3570 2054  
                                       l3810 18D2                                         l3802 18A6  
                                       l3626 1AEA                                         l3618 1AC6  
                                       l3650 1C10                                         l3642 1BE0  
                                       l3634 1BBE                                         l3732 19A8  
                                       l3724 1990                                         l3716 1978  
                                       l3708 1960                                         l3548 1836  
                                       l3580 22D2                                         l3564 2012  
                                       l3556 1FFA                                         l3820 1916  
                                       l3812 18EC                                         l3804 18A8  
                                       l3660 1C4A                                         l3652 1C26  
                                       l3644 1BF2                                         l3636 1BC6  
                                       l3740 1280                                         l3726 1996  
                                       l3718 197E                                         l3734 19AC  
                                       l3582 22E4                                         l3574 22AE  
                                       l3566 203E                                         l3558 200E  
                                       l3822 1922                                         l3814 18F2  
                                       l3806 18B8                                         l3590 1A42  
                                       l3662 1C52                                         l3654 1C2E  
                                       l3646 1BFA                                         l3638 1BCA  
                                       l3670 1C7C                                         l3750 12C6  
                                       l3742 12A4                                         l3910 1D1A  
                                       l3902 1E0A                                         l3728 199C  
                                       l3840 22EC                                         l3576 22BE  
                                       l3568 2040                                         l3824 192E  
                                       l3816 18FE                                         l3808 18C6  
                                       l3592 1A4A                                         l3656 1C34  
                                       l3648 1C02                                         l3680 2358  
                                       l3672 1C86                                         l3760 133C  
                                       l3752 12E4                                         l3744 12AC  
                                       l3832 211A                                         l3920 1D98  
                                       l3904 1E30                                         l3842 2300  
                                       l3850 20BC                                         l3690 1F06  
                                       l3578 22CA                                         l3826 193A  
                                       l3818 190A                                         l3594 1A4E  
                                       l3586 1A30                                         l3658 1C3A  
                                       l3682 2366                                         l3674 1CA2  
                                       l3666 1C5C                                         l3770 13BA  
                                       l3762 136C                                         l3754 1302  
                                       l3746 12B8                                         l3834 212A  
                                       l3914 1D30                                         l4730 1440  
                                       l3844 2312                                         l3852 20D0  
                                       l3860 2112                                         l3692 1F2C  
                                       l3684 1EBA                                         l3828 194C  
                                       l3596 1A5C                                         l3588 1A34  
                                       l3676 1CD4                                         l3668 1C6C  
                                       l3772 13CA                                         l3764 1388  
                                       l3756 131A                                         l3780 140E  
                                       l3748 12BC                                         l3836 216E  
                                       l3916 1D5E                                         l3908 1D06  
                                       l4740 14A6                                         l4732 1444  
                                       l3846 231C                                         l3870 1F68  
                                       l3854 20E8                                         l3686 1ECA  
                                       l3790 186E                                         l3598 1A64  
                                       l3774 13DC                                         l3766 139A  
                                       l3758 1324                                         l3918 1D62  
                                       l4750 1524                                         l4742 14C4  
                                       l4734 1462                                         l3872 1F80  
                                       l3864 1F34                                         l3856 20EE  
                                       l3688 1EE6                                         l3696 2176  
                                       l3792 1882                                         l3776 13F6  
                                       l3768 13AA                                         l3784 141A  
                                       l3880 2276                                         l4760 157E  
                                       l4752 1536                                         l4744 14E2  
                                       l4736 147A                                         l3866 1F48  
                                       l3874 1F90                                         l3858 2106  
                                       l3698 2186                                         l3794 1896  
                                       l3962 238C                                         l3778 13F8  
                                       l3882 2286                                         l3970 2324  
                                       l3890 1DB4                                         l4762 1590  
                                       l4754 1548                                         l4746 1500  
                                       l4738 1488                                         l4780 19C0  
                                       l3868 1F60                                         l3964 2394  
                                       l3884 22A4                                         l3972 232C  
                                       l3892 1DBA                                         l4764 15A8  
                                       l4756 155A                                         l4748 1512  
                                       l3990 1E38                                         l3982 249A  
                                       l3966 239E                                         l3878 226E  
                                       l3974 2334                                         l3894 1DCE  
                                       l4766 15C0                                         l4758 156C  
                                       l3992 1E48                                         l3984 249A  
                                       l3968 23A0                                         l3976 233C  
                                       l3896 1DE2                                         l3888 1DA0  
                                       l4768 15D8                                         l3994 1E4A  
                                       l4778 1722                                         l3986 24A4  
                                       l3978 234C                                         l3898 1DF6  
                                       l3996 1E52                                         l3998 1E6C  
                                       STR_1 1036                                         STR_2 1036  
                                       STR_4 1011                                         STR_5 101A  
                                       STR_6 1021                                         STR_7 1028  
                                       STR_8 102F                                         u3010 21E2  
                                       u3011 21DE                                         u2300 1750  
                                       u3100 2236                                         u3020 21F4  
                                       u2301 174C                                         u3101 2232  
                                       u3021 21F0                                         _LATA 0F89  
                                       u3110 206C                                         u2310 176C  
                                       _LATB 0F8A                                         u3111 2068  
                                       u2311 1768                                         _LATC 0F8B  
                                       u3120 207C                                         u2320 178C  
                                       u2240 160C                                         u2400 1A42  
                                       _LATD 0F8C                                         u3121 2078  
                                       u2321 1788                                         u2241 1608  
                                       u2401 1A3E                                         _LATE 0F8D  
                                       u3130 20A2                                         u2250 1628  
                                       u2410 1A5C                                         u3131 209E  
                                       u2251 1624                                         u2411 1A58  
                                       u2260 1648                                         u2420 1A82  
                                       u2500 1C26                                         u2261 1644  
                                       u2421 1A7E                                         u2501 1C22  
                                       u2350 1854                                         u2334 17AE  
                                       u2270 165C                                         u2430 1AA0  
                                       u2510 1C4A                                         u2351 184E  
                                       u2335 17AA                                         u2271 1658  
                                       u2431 1A9C                                         u2511 1C46  
                                       u2344 1804                                         u2360 200E  
                                       u2600 2186                                         u2440 1ABC  
                                       u2520 1C6C                                         u2345 1800  
                                       u2361 200A                                         u2601 2182  
                                       u2441 1AB8                                         u2521 1C68  
                                       u2450 1AE2                                         u2530 1C7C  
                                       u2610 12A4                                         u2451 1ADE  
                                       u2531 1C78                                         u2611 12A0  
                                       u2356 1856                                         u2284 167E  
                                       u2380 2050                                         u2460 1BBE  
                                       u2540 1CA2                                         u2700 140A  
                                       u2620 12E4                                         u2285 167A  
                                       u2381 204C                                         u2461 1BBA  
                                       u2541 1C9E                                         u2701 1406  
                                       u2621 12E0                                         u2294 16D4  
                                       u2390 22BE                                         u2374 202C  
                                       u2710 1882                                         u2470 1BD8  
                                       u2550 1CD4                                         u2630 1302  
                                       u2295 16D0                                         u2391 22BA  
                                       u2375 2028                                         u2711 187E  
                                       u2471 1BD4                                         u2551 1CD0  
                                       u2631 12FE                                         u2800 1F80  
                                       u2720 18B8                                         u2480 1BF2  
                                       u2560 2366                                         u2640 1338  
                                       u2801 1F7C                                         u2721 18B4  
                                       u2481 1BEE                                         u2561 2362  
                                       u2641 1332                                         u2570 1ECA  
                                       u2490 1C10                                         u2650 133A  
                                       u2810 22A4                                         u2730 212A  
                                       u2571 1EC6                                         u2491 1C0C  
                                       u2811 22A0                                         u2731 2126  
                                       u2740 2300                                         u2580 1EE6  
                                       u2660 139A                                         u2820 1DB4  
                                       u2741 22FC                                         u2581 1EE2  
                                       u2661 1396                                         u2821 1DB0  
                                       u2750 20D0                                         u2590 1F06  
                                       u2670 13AA                                         u2830 1D1A  
                                       u2751 20CC                                         u2591 1F02  
                                       u2671 13A6                                         u2831 1D16  
                                       u2760 20E8                                         u2920 23BA  
                                       u2680 13BA                                         u2840 1D2C  
                                       u2761 20E4                                         u2921 23B6  
                                       u2681 13B6                                         u2841 1D28  
                                       u2770 2106                                         u2930 1E48  
                                       u2690 13CA                                         u2850 1D56  
                                       u2771 2102                                         u2931 1E44  
                                       u2691 13C6                                         u2940 23FE  
                                       u2780 1F48                                         u2860 1D84  
                                       u2941 23FA                                         u2781 1F44  
                                       u2950 1B08                                         u2790 1F60  
                                       u2870 1D94                                         u2951 1B04  
                                       u2791 1F5C                                         u3807 18EE  
                                       u2871 1D90                                         u2960 1B18  
                                       u2961 1B14                                         u3817 22CC  
                                       u2857 1D4C                                         u2970 1B30  
                                       u2971 1B2C                                         u2867 1D7A  
                                       u2980 1B6E                                         u2981 1B6A  
                                       u3777 146C                                         u2995 1B86  
                                       u3787 18BE                                         u3797 18D8  
                       _lcd_4bit_send_string 1D06                ??_lcd_4bit_send_enable_signal 000C  
                                       _adc1 0079                                         abs@a 0009  
                                       _lcd1 0073                                         _lcd2 00CC  
                                       _btn1 00E3                                         _led1 0072  
                                       _dbuf 0080                                         _main 1440  
                                       _prec 0037                                         fsr0h 0FEA  
                                       fsr1h 0FE2                                         indf0 0FEF  
                                       fsr2h 0FDA                                         fsr0l 0FE9  
                                       indf2 0FDF                                         fsr1l 0FE1  
                                       fsr2l 0FD9                                         btemp 007D  
                                       prodl 0FF3                                         start 0066  
                               ___param_bank 0000                 ?_lcd_4bit_send_string_at_pos 0018  
                    _adc_GetConversionResult 1AF4                        _lcd_4bit_send_command 2176  
                                      ??_abs 000B                         _gpio_pin_write_logic 15F8  
                           __end_of_INT0_ISR 24B4                             __end_of_INT1_ISR 24B0  
                           __end_of_INT2_ISR 24AC                                        ?_main 0001  
                   ??_application_initialize 0019                              __end_of___awdiv 1AF4  
                                      _EEADR 0FA9                              __end_of___awmod 1C5C  
                            ___awdiv@divisor 0005                                        i1l642 003E  
                                      i1l723 24AE                                        i1l645 005E  
                                      i1l728 24AA                                        i2l621 10A0  
                                      i2l631 11F4                                        i2l623 10E4  
                                      i2l633 1238                                        i2l625 1128  
                                      i2l627 116C                                        i2l619 105C  
                                      i2l636 127C                                        i2l629 11B0  
                                      i2l718 24B2                                        i2l750 2458  
                                      i2l761 243E                                        i2l739 2472  
                                      i2l772 2424                              ___awdiv@counter 0007  
                        relay_turn_off@F3070 0056                                 vfpfcnvrt@fmt 000E  
                     adc_StartConversion@ret 0004                                        _PORTA 0F80  
                                      _PORTB 0F81                                        _PORTC 0F82  
                                      _PORTD 0F83                                        _PORTE 0F84  
                                      _TRISA 0F92                                        _TRISB 0F93  
                                      _TRISC 0F94                                        _TRISD 0F95  
                                      _TRISE 0F96                    lcd_4bit_set_cursor@column 0016  
                                      _flags 004F                                        _fputc 1C5C  
                                      _width 0035                                        _putch 24B4  
                      ?_lcd_4bit_send_string 0014                                        tablat 0FF5  
                                      ttemp5 007E                                        ttemp6 0081  
                                      ttemp7 0085                                        status 0FD8  
                                      wtemp8 007E                              __end_of_sprintf 2358  
             ?_gpio_pin_direction_initialize 0003                              __initialization 1F98  
                               __end_of_main 15F8                        ?_gpio_pin_write_logic 0003  
                              _lat_registers 0065                                       ??_main 0033  
                              __activetblptr 0003                             led_turn_on@F3067 005B  
                                  ??_RB4_ISR 0001                                    ??_RB5_ISR 0001  
                                  ??_RB6_ISR 0001                                    ??_RB7_ISR 0001  
                  _RB5_High_InterruptHandler 0041                                       ?_fputc 0003  
                                     _ADRESH 0FC4                                       _EEADRH 0FAA  
                                     _ADRESL 0FC3                                       _EEDATA 0FA8  
                                     _EECON2 0FA7                             __end_of_adc_Init 1EBA  
                           ___awdiv@dividend 0003                          _adc_StartConversion 23EA  
                                     ?_putch 0001                                       i1l2404 24A8  
                                     i1l3190 003A                                       i1l3192 004C  
                                     i1l3194 005A                                       i1l3186 001E  
                                     i1l3188 002C                                       i1l2398 24AC  
                                     i2l3100 103C                                       i2l3110 1086  
                                     i2l3102 104A                                       i2l3120 10CA  
                                     i2l3112 1096                                       i2l3104 1058  
                                     i2l3130 110E                                       i2l3122 10DA  
                                     i2l3114 109A                                       i2l3106 106A  
                                     i2l3140 1152                                       i2l3132 111E  
                                     i2l3124 10DE                                       i2l3116 10AE  
                                     i2l3108 1078                                       i2l2350 2472  
                                     i2l2342 245C                                       i2l3150 1196  
                                     i2l3142 1162                                       i2l3134 1122  
                                     i2l3126 10F2                                       i2l3118 10BC  
                                     i2l2336 24B0                                       i2l2344 245E  
                                     i2l3160 11DA                                       i2l3152 11A6  
                                     i2l3144 1166                                       i2l3136 1136  
                                     i2l3128 1100                                       i2l2370 2428  
                                     i2l3170 121E                                       i2l3162 11EA  
                                     i2l3154 11AA                                       i2l3146 117A  
                                     i2l3138 1144                                       i2l2364 2458  
                                     i2l2356 2442                                       i2l2372 242A  
                                     i2l3180 1262                                       i2l3172 122E  
                                     i2l3164 11EE                                       i2l3156 11BE  
                                     i2l3148 1188                                       i2l2358 2444  
                                     i2l3182 1272                                       i2l3174 1232  
                                     i2l3166 1202                                       i2l3158 11CC  
                                     i2l2392 2424                                       i2l2384 240E  
                                     i2l3184 1276                                       i2l3176 1246  
                                     i2l3168 1210                                       i2l2378 243E  
                                     i2l2386 2410                                       i2l3178 1254  
                    adc_StartConversion@_adc 0003                                vfpfcnvrt@done 0011  
          adc_GetConversion_Blocking@channel 000B                                 adc_Init@_adc 000A  
                  ??_adc_GetConversionResult 0005                       ?_lcd_4bit_send_command 0011  
                               vfprintf@cfmt 001B                                    ??___awdiv 0007  
                              _adc_res_1_txt 00B2                                    ??___awmod 0007  
                              _adc_res_2_txt 00AC                                _adc_res_3_txt 00A6  
                       ?_adc_StartConversion 0003                                _adc_res_4_txt 00A0  
                                     _memset 238C                                       clear_0 1FDE  
                                     clear_1 1FEA                                       _relay1 0055  
                           ___awdiv@quotient 0009                              ___awmod@divisor 0005  
                                     _motor1 006F                                       isa$std 0001  
                            ___awmod@counter 0007                      select_result_format@ret 0004  
                                     fputc@c 0003                                 __pdataCOMRAM 0065  
                               __mediumconst 0000                                       tblptrh 0FF7  
                                     tblptrl 0FF6                                       tblptru 0FF8  
                                     putch@c 0001                             __end_of_vfprintf 22AE  
                     ??_lcd_4bit_send_string 0017                                    ??_sprintf 0022  
               __end_of_select_result_format 211A                                   __accesstop 0080  
                    __end_of__initialization 1FF0                                    ?_INT0_ISR 0001  
                                  ?_INT1_ISR 0001                                    ?_INT2_ISR 0001  
                              ___rparam_used 0001                             ??_lcd_send_4bits 000D  
                    _lcd_4bit_send_char_data 211A                       ??_gpio_pin_write_logic 0005  
                             __pcstackCOMRAM 0001            lcd_4bit_initialize@l_pins_counter 0016  
                      ??_adc_StartConversion 0004                                 __pidataBANK0 23BC  
                              RB4_ISR@source 0001                                __end_of_fputc 1D06  
                              __end_of_putch 24B6                     lcd_4bit_send_command@lcd 0011  
                   lcd_4bit_send_command@ret 0013     gpio_pin_direction_initialize@_pin_config 0003  
            __end_of_adc_GetConversionResult 1BAC           __end_of_adc_GetConversion_Blocking 20BC  
                 _adc_GetConversion_Blocking 205C                                RB5_ISR@source 0001  
                                    ??_fputc 0006                      lcd_4bit_send_string@lcd 0014  
                    lcd_4bit_send_string@ret 0017                      lcd_4bit_send_string@str 0015  
                                    ??_putch 0003                                   __pbssBANK0 0080  
                      _INT0_InterruptHandler 004D                                   ??_INT0_ISR 0001  
                                 ??_INT1_ISR 0002                                   ??_INT2_ISR 0002  
                     _application_initialize 248C                  __end_of_InterruptManagerLow 0066  
                          _adc_SelectChannel 22EC                                RB6_ISR@source 0001  
                          led_turn_off@F3072 005A                  convert_uint16_to_string@ret 0032  
                convert_uint16_to_string@str 0031                                      ?_memset 0003  
                         ?_adc_SelectChannel 0006                                    ?_adc_Init 000A  
                                    _ADC_Req 0050               adc_GetConversion_Blocking@_adc 000A  
               ecu_layer_initialize@ret_init 0018                                      _RB4_ISR 245A  
                                    _RB5_ISR 2440                                      _RB6_ISR 2426  
                                    _RB7_ISR 240C                          ??_adc_SelectChannel 0008  
                              _keypad_values 1001                     _RB6_Low_InterruptHandler 003F  
                       led_turn_toggle@F3077 0059                                      i2u91_40 246E  
                                    i2u91_41 246A                                      i2u92_40 2454  
                                    i2u92_41 2450                                      i2u93_40 243A  
                                    i2u93_41 2436                                      i2u94_40 2420  
                                    i2u94_41 241C                                RB7_ISR@source 0001  
                             _tris_registers 00C2                    ??_lcd_4bit_send_char_data 0013  
                                    __Hparam 0000                   adc_GetConversionResult@ret 0008  
                  __end_of_adc_SelectChannel 2324                                      __Lparam 0000  
                        _gpio_pin_initialize 1EBA                                      ___awdiv 1A30  
                                    ___awmod 1BAC                                    ?_vfprintf 0018  
                               __psmallconst 1000                                   ??_adc_Init 000B  
                                    __pcinit 1F98                         _select_result_format 20BC  
                                    __ramtop 1000                                      __ptext0 1440  
                                    __ptext1 21D2                                      __ptext2 1DA0  
                                    __ptext3 1D06                                      __ptext4 211A  
                                    __ptext5 2222                                      __ptext6 2324  
                                    __ptext7 226E                                      __ptext8 1280  
                                    __ptext9 1C5C               configure_voltage_reference@ret 0004  
            ??_gpio_pin_direction_initialize 0004                     _convert_uint16_to_string 2222  
                                    _keypad1 00D6                             ___awmod@dividend 0003  
                       ?_gpio_pin_initialize 000B                                      _sprintf 2324  
                             __pintcode_body 103A                         end_of_initialization 1FF0  
                          lcd_send_4bits@lcd 000B                            lcd_send_4bits@ret 000F  
                   select_result_format@_adc 0003  adc_GetConversion_Blocking@conversion_result 000C  
                                    fputc@fp 0005                                      memset@c 0004  
                                    memset@n 0006                                      memset@p 0008  
                                    int_func 103A                      ??_lcd_4bit_send_command 0013  
                          __end_of_vfpfcnvrt 1440                                      postdec1 0FE5  
                                    postdec2 0FDD                                      postinc0 0FEE  
                                    postinc1 0FE6                                      postinc2 0FDE  
                           vfpfcnvrt@convarg 0013                                   ??_vfprintf 001B  
                      ?_select_result_format 0003                          _lcd_4bit_initialize 186E  
            __end_of_lcd_4bit_send_char_data 2176                        _INT1_InterruptHandler 004B  
                                  _PORTBbits 0F81                   lcd_4bit_send_char_data@lcd 0011  
                 lcd_4bit_send_char_data@ret 0013                        ??_gpio_pin_initialize 000C  
                  _RB6_High_InterruptHandler 003D                         ?_lcd_4bit_initialize 0014  
               ??_adc_GetConversion_Blocking 000D          __end_of_lcd_4bit_send_string_at_pos 2222  
                _lcd_4bit_send_string_at_pos 21D2                          _lcd_4bit_set_cursor 1DA0  
                         relay_turn_on@F3065 0057                                  vfpfcnvrt@ap 000F  
                                vfpfcnvrt@cp 0012                                  vfpfcnvrt@fp 000D  
                              __pidataCOMRAM 2474      adc_input_channel_port_configure@channel 0005  
              ??_lcd_4bit_send_string_at_pos 001D                               __end_of_memset 23BC  
               ?_configure_voltage_reference 0003                          start_initialization 1F98  
               ?_lcd_4bit_send_enable_signal 000B                         ?_lcd_4bit_set_cursor 0014  
              convert_uint16_to_string@value 002F                                  __end_of_abs 238C  
      __end_of_gpio_pin_direction_initialize 186E                _gpio_pin_direction_initialize 173C  
                    ?_application_initialize 0001     adc_GetConversionResult@conversion_result 0004  
                      ??_lcd_4bit_initialize 0015                     ?_adc_GetConversionResult 0003  
                __end_of_adc_StartConversion 240C                                  adc_Init@ret 000C  
                                vfprintf@fmt 0019                       ??_select_result_format 0004  
                                __pdataBANK0 00B8                                     ??_memset 0008  
               __end_of_ecu_layer_initialize 24A8                                   memset@dest 0003  
               lcd_4bit_send_command@command 0012                                     ?_RB4_ISR 0001  
                                   ?_RB5_ISR 0001                                     ?_RB6_ISR 0001  
                                   ?_RB7_ISR 0001                                  __pbssCOMRAM 0035  
                      ??_lcd_4bit_set_cursor 0017                ??_configure_voltage_reference 0004  
             __end_of_application_initialize 249A                                    _adc_res_1 0063  
                                  _adc_res_2 0061                                    _adc_res_3 005F  
                                  _adc_res_4 005D                        _INT2_InterruptHandler 0049  
               __end_of_InterruptManagerHigh 1280                                    __pintcode 0008  
   __end_of_adc_input_channel_port_configure 1A30           ??_adc_input_channel_port_configure 0003  
          ?_adc_input_channel_port_configure 0001             _adc_input_channel_port_configure 1954  
                 ??_convert_uint16_to_string 0032              gpio_pin_write_logic@_pin_config 0003  
                                   ?___awdiv 0003                                     ?___awmod 0003  
              adc_GetConversion_Blocking@ret 000D                                  __pintcodelo 0018  
                  gpio_pin_write_logic@logic 0004                                  __smallconst 1000  
                   _RB5_Low_InterruptHandler 0043                                     ?_sprintf 001C  
                                   _INT0_ISR 24B0                                     _INT1_ISR 24AC  
                                   _INT2_ISR 24A8                                     _RB4_flag 0054  
                                   _RB5_flag 0053                                     _RB6_flag 0052  
                                   _RB7_flag 0051                                     i1u210_20 004C  
                                   i1u210_21 0048                                     i1u211_20 005A  
                                   i1u211_21 0056                                     i1u208_20 002C  
                                   i1u208_21 0028                                     i1u209_20 003A  
                                   i1u209_21 0036                                     i2u200_40 1202  
                                   i2u200_41 11FE                                     i2u201_40 1210  
                                   i2u201_41 120C                                     i2u202_40 121E  
                                   i2u202_41 121A                                     i2u203_40 122E  
                                   i2u203_41 122A                                     i2u204_40 1246  
                                   i2u204_41 1242                __end_of_lcd_4bit_send_command 21D2  
                                   i2u205_40 1254                                     i2u205_41 1250  
                                   i2u206_40 1262                                     i2u206_41 125E  
                                   i2u207_40 1272                                     i2u207_41 126E  
                                   i2u180_40 10AE                                     i2u180_41 10AA  
                                   i2u181_40 10BC                                     i2u181_41 10B8  
                                   i2u190_40 1152                                     i2u182_40 10CA  
                                   i2u174_40 104A                                     i2u190_41 114E  
                                   i2u182_41 10C6                                     i2u174_41 1046  
                                   i2u191_40 1162                                     i2u183_40 10DA  
                                   i2u175_40 1058                                     i2u191_41 115E  
                                   i2u183_41 10D6                                     i2u175_41 1054  
                                   i2u192_40 117A                                     i2u184_40 10F2  
                                   i2u176_40 106A                                     i2u192_41 1176  
                                   i2u184_41 10EE                                     i2u176_41 1066  
                                   i2u193_40 1188                                     i2u185_40 1100  
                                   i2u177_40 1078                                     i2u193_41 1184  
                                   i2u185_41 10FC                                     i2u177_41 1074  
                                   i2u194_40 1196                                     i2u186_40 110E  
                                   i2u178_40 1086                                     i2u194_41 1192  
                                   i2u186_41 110A                                     i2u178_41 1082  
                                   i2u195_40 11A6                                     i2u187_40 111E  
                                   i2u179_40 1096                                     i2u195_41 11A2  
                                   i2u187_41 111A                                     i2u179_41 1092  
                                   i2u196_40 11BE                                     i2u188_40 1136  
                                   i2u196_41 11BA                                     i2u188_41 1132  
                                   i2u197_40 11CC                                     i2u189_40 1144  
                                   i2u197_41 11C8                                     i2u189_41 1140  
                                   i2u198_40 11DA                                     i2u198_41 11D6  
                                   i2u199_40 11EA                                     i2u199_41 11E6  
                                   _RCONbits 0FD0             gpio_pin_direction_initialize@ret 0009  
                                  _vfpfcnvrt 1280                                   _ADCON0bits 0FC2  
                                 _ADCON1bits 0FC1                                   _ADCON2bits 0FC0  
                     gpio_pin_initialize@ret 000D                                   vfpfcnvrt@c 0017  
                    gpio_pin_write_logic@ret 000A                                  _INTCON2bits 0FF1  
                                _INTCON3bits 0FF0                     ?_lcd_4bit_send_char_data 0011  
                                  copy_data0 1FAC                                    copy_data1 1FCC  
                       _ecu_layer_initialize 249A                  adc_GetConversionResult@_adc 0003  
                                 _EECON1bits 0FA6                                     __Hrparam 0000  
                                 vfprintf@ap 001A                                     __Lrparam 0000  
                                 vfprintf@fp 0018                       lcd_4bit_set_cursor@lcd 0014  
                     lcd_4bit_set_cursor@ret 0017                                   ?_vfpfcnvrt 000D  
                     lcd_4bit_set_cursor@row 0015                                     _adc_Init 1E38  
                __end_of_gpio_pin_initialize 1F34               gpio_pin_initialize@_pin_config 000B  
                                 sprintf@fmt 001D                    _RB4_High_InterruptHandler 0045  
                       _InterruptManagerHigh 0008            lcd_4bit_send_string_at_pos@column 001A  
                                   __ptext10 24B4                                     __ptext11 2358  
                                   __ptext20 22AE                                     __ptext12 1BAC  
                                   __ptext21 1EBA                                     __ptext13 1A30  
                                   __ptext30 1954                                     __ptext22 15F8  
                                   __ptext14 238C                                     __ptext31 1AF4  
                                   __ptext23 173C                                     __ptext15 248C  
                                   __ptext40 24B0                                     __ptext24 1E38  
                                   __ptext16 249A                                     __ptext33 24A8  
                                   __ptext25 20BC                                     __ptext17 186E  
                                   __ptext34 24AC                                     __ptext26 1F34  
                                   __ptext18 2176                                     __ptext27 205C  
                                   __ptext19 1FFA                                     __ptext36 240C  
                                   __ptext28 23EA                                     __ptext37 2426  
                                   __ptext29 22EC                                     __ptext38 2440  
                                   __ptext39 245A              configure_voltage_reference@_adc 0003  
                  _RB7_High_InterruptHandler 0039                        ?_ecu_layer_initialize 0001  
                                   _segment1 00DE             __end_of_convert_uint16_to_string 226E  
                                   isa$xinst 0000                                     int$flags 007D  
               __end_of_lcd_4bit_send_string 1DA0                                     _vfprintf 226E  
                   adc_SelectChannel@channel 0007                               _lcd_send_4bits 1FFA  
                      __end_of_keypad_values 1011                                   _INTCONbits 0FF2  
                __end_of_lcd_4bit_initialize 1954                        ?_InterruptManagerHigh 0001  
               __end_of_gpio_pin_write_logic 173C                                     intlevel1 0000  
                                   intlevel2 0000                                    sprintf@ap 0022  
                        _InterruptManagerLow 0018               lcd_4bit_send_enable_signal@lcd 000B  
             lcd_4bit_send_enable_signal@ret 000C                       __end_of_lcd_send_4bits 205C  
                                ??_vfpfcnvrt 0010                  __end_of_lcd_4bit_set_cursor 1E38  
                       ?_InterruptManagerLow 0001                                     sprintf@f 0023  
                                   sprintf@s 001C                               _port_registers 00B8  
                     ??_ecu_layer_initialize 0018               lcd_4bit_send_string_at_pos@lcd 0018  
                ?_adc_GetConversion_Blocking 000A               lcd_4bit_send_string_at_pos@ret 001D  
             lcd_4bit_send_string_at_pos@row 0019               lcd_4bit_send_string_at_pos@str 001B  
                      adc_SelectChannel@_adc 0006                  lcd_4bit_send_char_data@data 0012  
               lcd_send_4bits@l_pins_counter 0010                         adc_SelectChannel@ret 0009  
                     lcd_4bit_initialize@lcd 0014                       lcd_4bit_initialize@ret 0017  
