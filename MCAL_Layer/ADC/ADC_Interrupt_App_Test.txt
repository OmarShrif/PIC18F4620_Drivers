/* 
 * File:   Application1.c
 * Author: Omar Shrif Mohamed
 * https://www.linkedin.com/in/omar-shrif-982413213/
 * Created on January 1, 2024, 9:09 PM
 */

/* Section : Includes */
#include "Application1.h"

/* Section : Functions Declarations */

void ADC_APP_ISR(void);

/* Section : Global Variables Definition */

Std_ReturnType ret = E_OK;

uint16 adc_res_1 = 0, adc_res_2 = 0, adc_res_3 = 0, adc_res_4 = 0;
uint8 adc_res_1_txt[6], adc_res_2_txt[6], adc_res_3_txt[6], adc_res_4_txt[6];
uint8 ADC_Req = 0;

adc_config_t adc1 = 
{
    .adc_channel = ADC_CHANNEL_AN0,
    .acquisition_time = ADC_12_TAD,
    .conversion_clock = ADC_CONVERSION_CLOCK_FOSC_DIV_16,
    .voltage_reference = ADC_VOLTAGE_REFERENCE_DISABLED,
    .result_format = ADC_RESULT_RIGHT,
    #if ADC_INTERRUPT_FEATURE == INTERRUPT_FEATURE_ENABLE
    .ADC_InterruptHandler = ADC_APP_ISR,
    #if INTERRUPT_PRIORITY_LEVELS_FEATURE == INTERRUPT_FEATURE_ENABLE
    .priority = INTERRUPT_PRIORITY_HIGH
    #endif
    #endif
};

/* Section : Functions Definition */

int main() 
{
    application_initialize(); 
    
    ret = lcd_4bit_send_string_at_pos(&lcd1, 1, 7, "ADC Test");
    __delay_ms(2000);
    ret = lcd_4bit_send_command(&lcd1, _LCD_CLEAR);
    
    ret = lcd_4bit_send_string_at_pos(&lcd1, 1, 1, "Pot0: ");
    ret = lcd_4bit_send_string_at_pos(&lcd1, 2, 1, "Pot1: ");
    ret = lcd_4bit_send_string_at_pos(&lcd1, 3, 1, "Pot2: ");
    ret = lcd_4bit_send_string_at_pos(&lcd1, 4, 1, "Pot3: ");
    
    while(1)
    {
        if(0 == ADC_Req)
        {
            ret = adc_StartConversion_Interrupt(&adc1, ADC_CHANNEL_AN0);
        }
        else if(1 == ADC_Req)
        {
            ret = adc_StartConversion_Interrupt(&adc1, ADC_CHANNEL_AN1);
        }
        else if(2 == ADC_Req)
        {
            ret = adc_StartConversion_Interrupt(&adc1, ADC_CHANNEL_AN2);
        }
        else if(3 == ADC_Req)
        {
            ret = adc_StartConversion_Interrupt(&adc1, ADC_CHANNEL_AN3);
        }
        else { /* Nothing */ }
        
        ret = convert_uint16_to_string(adc_res_1,adc_res_1_txt);
        ret = convert_uint16_to_string(adc_res_2,adc_res_2_txt);
        ret = convert_uint16_to_string(adc_res_3,adc_res_3_txt);
        ret = convert_uint16_to_string(adc_res_4,adc_res_4_txt);
        
        ret = lcd_4bit_send_string_at_pos(&lcd1, 1, 7, adc_res_1_txt);
        ret = lcd_4bit_send_string_at_pos(&lcd1, 2, 7, adc_res_2_txt);
        ret = lcd_4bit_send_string_at_pos(&lcd1, 3, 7, adc_res_3_txt);
        ret = lcd_4bit_send_string_at_pos(&lcd1, 4, 7, adc_res_4_txt);
    }
    
    return (EXIT_SUCCESS);
}

void application_initialize(void)
{
    Std_ReturnType ret_init = E_OK;
    ret_init = ecu_layer_initialize();
    ret_init = adc_Init(&adc1);
}

void ADC_APP_ISR(void)
{ 
    Std_ReturnType ret = E_OK;
    
    if(0 == ADC_Req){
        ret = adc_GetConversionResult(&adc1, &adc_res_1);
        ADC_Req = 1;
    }
    else if(1 == ADC_Req){
        ret = adc_GetConversionResult(&adc1, &adc_res_2);
        ADC_Req = 2;
    }
    else if(2 == ADC_Req){
        ret = adc_GetConversionResult(&adc1, &adc_res_3);
        ADC_Req = 3;
    }
    else if(3 == ADC_Req){
        ret = adc_GetConversionResult(&adc1, &adc_res_4);
        ADC_Req = 0;
    }
    else { /* Nothing */ }
}